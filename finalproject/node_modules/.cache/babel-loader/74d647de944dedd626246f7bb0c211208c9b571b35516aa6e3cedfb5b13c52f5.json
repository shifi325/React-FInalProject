{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05E9\\u05D9\\u05E4\\u05D9 \\u05D5\\u05D9\\u05E0\\u05D2\\u05E8\\u05D8\\u05DF\\\\Pictures\\\\Saved Pictures\\\\\\u05E1\\u05DE\\u05D9\\u05E0\\u05E8\\\\\\u05DB\\u05D9\\u05EA\\u05D4 \\u05D9\\u05D3\\\\\\u05EA\\u05DB\\u05E0\\u05D5\\u05EA\\\\react\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05E7\\u05D8\\\\finalproject\\\\src\\\\components\\\\screens\\\\products\\\\AddProduct.js\",\n  _s = $RefreshSig$();\n// import * as React from 'react';\n// import Box from '@mui/material/Box';\n// import { postProduct } from '../../features/Product/ProductSlice'\n// import Avatar from '@mui/material/Avatar';\n// import Button from '@mui/material/Button';\n// import CssBaseline from '@mui/material/CssBaseline';\n// import TextField from '@mui/material/TextField';\n// import Grid from '@mui/material/Grid';\n// import Typography from '@mui/material/Typography';\n// import Container from '@mui/material/Container';\n// import { useDispatch } from 'react-redux';\n// import { createTheme, ThemeProvider } from '@mui/material/styles';\n// import { useNavigate } from 'react-router-dom';\n// import AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\n// const defaultTheme = createTheme();\n\n// export default function AddProduct() {\n//     const dis = useDispatch();\n//     const nav = useNavigate();\n\n//     const handleSubmit = (event) => {\n//         const data = new FormData(event.currentTarget);\n//         const newProduct = {\n//             name: data.get('name'),\n//             description: data.get('description'),\n//             price: data.get('price'),\n//             imgUrl: data.get('imgUrl')\n//         }\n//         dis(postProduct({name:event.name,description:event.description,price:event.price,imgUrl:event.imgUrl}))\n//             nav('/ProductList');\n\n//     };\n\n//     return (\n//         <ThemeProvider theme={defaultTheme}>\n//             <Container component=\"main\" maxWidth=\"xs\">\n//                 <CssBaseline />\n//                 <Box\n//                     sx={{\n//                         marginTop: 8,\n//                         display: 'flex',\n//                         flexDirection: 'column',\n//                         alignItems: 'center',\n//                     }}\n//                 >\n//                     <Avatar sx={{ m: 1, bgcolor: '#00FF66' }}>\n//                         <AddCircleOutlineIcon />\n//                     </Avatar>\n//                     <Typography component=\"h1\" variant=\"h5\">\n//                         Add Product\n//                     </Typography>\n//                     <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\n//                         <Grid container spacing={2}>\n//                             <Grid item xs={12} sm={6}>\n//                                 <TextField\n//                                     autoComplete=\"given-name\"\n//                                     name=\"name\"\n//                                     required\n//                                     fullWidth\n//                                     id=\"name\"\n//                                     label=\"Name\"\n//                                     autoFocus\n//                                 />\n//                             </Grid>\n//                             <Grid item xs={12} sm={6}>\n//                                 <TextField\n//                                     required\n//                                     fullWidth\n//                                     id=\"description\"\n//                                     label=\"Description\"\n//                                     name=\"description\"\n//                                     autoComplete=\"description\"\n//                                 />\n//                             </Grid>\n//                             <Grid item xs={12}>\n//                                 <TextField\n//                                     required\n//                                     fullWidth\n//                                     id=\"price\"\n//                                     label=\"Price\"\n//                                     name=\"price\"\n//                                     autoComplete=\"price\"\n//                                 />\n//                             </Grid>\n//                             <Grid item xs={12}>\n//                                 <TextField\n//                                     required\n//                                     fullWidth\n//                                     name=\"imgUrl\"\n//                                     label=\"Image URL\"\n//                                     type=\"url\"\n//                                     id=\"imgUrl\"\n//                                     autoComplete=\"imgUrl\"\n//                                 />\n//                             </Grid>\n//                         </Grid>\n//                         <Button\n//                             type=\"submit\"\n//                             fullWidth\n//                             variant=\"contained\"\n//                             sx={{ mt: 3, mb: 2, bgcolor: '#00FF66' }}\n//                         >\n//                             Add\n//                         </Button>\n//                     </Box>\n//                 </Box>\n//             </Container>\n//         </ThemeProvider>\n//     );\n// }\n\nimport { useForm } from \"react-hook-form\";\nimport TextField from '@mui/material/TextField';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from \"react-router-dom\";\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { Description, Password } from '@mui/icons-material';\nimport { postUser } from '../../features//User/UserSlice';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AddProduct = () => {\n  _s();\n  var _errors$name, _errors$name2, _errors$password, _errors$address, _errors$name3;\n  const [product, setProduct] = useState({\n    tz: \" \",\n    name: \" \",\n    password: \" \",\n    telephone: \" \",\n    address: \"\"\n  });\n  const arrU = useSelector(x => x.products.arrUser);\n  const currentUser = useSelector(u => u.products.currentUser);\n  const dispatch = useDispatch();\n  const nav = useNavigate();\n  const defaultTheme = createTheme();\n  const {\n    register,\n    handleSubmit,\n    getValues,\n    formState: {\n      errors,\n      dirtyFields,\n      isValid\n    }\n  } = useForm({\n    mode: 'onBlur'\n  });\n  const onSubmit = data => {\n    dispatch(postUser({\n      name: data.name,\n      description: data.description,\n      price: data.price,\n      imgUrl: data.imgUrl\n    }));\n    console.log(\"add product\");\n    console.log(currentproduct);\n    nav('/ProductList');\n    // כאן תוכל להוסיף את הלוגיקה שלך לטיפול בהגשת הטופס\n    // לדוג', שליחת המידע לשרת או עדכון המצב באפליקציה\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      marginTop: 8,\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Avatar, {\n      sx: {\n        m: 1,\n        bgcolor: 'lightpink'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        maxWidth: 400,\n        margin: 'auto',\n        padding: 3,\n        boxShadow: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h2\",\n        gutterBottom: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"filled-basic\",\n            label: \"name:\",\n            variant: \"outlined\",\n            fullWidth: true,\n            margin: \"normal\",\n            onChange: e => setProduct({\n              name: e.target.value,\n              description: product.description,\n              price: product.price,\n              imgUrl: product.imgUrl\n            }),\n            ...register(\"name\", {\n              required: \"field is required\",\n              pattern: /^[A-Za-z]+$/i\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 21\n          }, this), ((_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.type) === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors.name.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 58\n          }, this), ((_errors$name2 = errors.name) === null || _errors$name2 === void 0 ? void 0 : _errors$name2.type) === 'pattern' && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"enter in english\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 57\n          }, this), dirtyFields.name && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u2714\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"filled-basic\",\n            label: \"description:\",\n            type: \"description\",\n            variant: \"outlined\",\n            fullWidth: true,\n            margin: \"normal\",\n            onChange: e => setPr({\n              name: product.name,\n              description: e.target.value,\n              price: product.price,\n              imgUrl: product.imgUrl\n            }),\n            ...register(\"description\", {\n              required: \"field is required\"\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 21\n          }, this), ((_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.type) === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors.password.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 61\n          }, this), dirtyFields.password && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u2714\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"filled-basic\",\n            label: \"telephone:\",\n            type: \"telephone\",\n            variant: \"outlined\",\n            fullWidth: true,\n            margin: \"normal\",\n            onChange: e => setUser({\n              tz: product.tz,\n              name: product.name,\n              password: product.password,\n              telephone: e.target.value,\n              address: product.address\n            }),\n            ...register(\"telephone\", {\n              required: 'enter a phone number',\n              pattern: {\n                value: /^[0-9]{10}$/,\n                message: 'the phone number is incorrect'\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 21\n          }, this), errors.telephone && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors.telephone.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 42\n          }, this), dirtyFields.telephone && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u2714\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 47\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            fullWidth: true,\n            margin: \"normal\",\n            id: \"filled-basic\",\n            label: \"address:\",\n            onChange: e => setUser({\n              tz: product.tz,\n              name: product.name,\n              password: product.password,\n              telephone: product.telephone,\n              address: e.target.value\n            }),\n            ...register(\"address\", {\n              required: \"field is required\",\n              pattern: /^[A-Za-z]+$/i\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 21\n          }, this), ((_errors$address = errors.address) === null || _errors$address === void 0 ? void 0 : _errors$address.type) === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors.address.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 61\n          }, this), ((_errors$name3 = errors.name) === null || _errors$name3 === void 0 ? void 0 : _errors$name3.type) === 'pattern' && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"enter in english\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 57\n          }, this), dirtyFields.name && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u2714\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"inherit\",\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          sx: {\n            mt: 3,\n            mb: 2,\n            bgcolor: 'lightpink'\n          },\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 1\n    }, this), \"            \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 9\n  }, this);\n};\n_s(AddProduct, \"/s6iLI2s1cAAt4yN72SR1CzsGZg=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useNavigate, useForm];\n});\n_c = AddProduct;\nexport default AddProduct;\n\n// import * as React from 'react';\n// import Avatar from '@mui/material/Avatar';\n// import Button from '@mui/material/Button';\n// import CssBaseline from '@mui/material/CssBaseline';\n// import TextField from '@mui/material/TextField';\n// import FormControlLabel from '@mui/material/FormControlLabel';\n// import Checkbox from '@mui/material/Checkbox';\n// import Link from '@mui/material/Link';\n// import Paper from '@mui/material/Paper';\n// import Box from '@mui/material/Box';\n// import Grid from '@mui/material/Grid';\n// import LockOutlinedIcon from '@mui/icons-material/LockOutlined';\n// import Typography from '@mui/material/Typography';\n// import { createTheme, ThemeProvider } from '@mui/material/styles';\n// import { useForm } from 'react-hook-form';\n// import { useSelector, useDispatch } from 'react-redux';\n// import { useNavigate, useParams } from 'react-router-dom';\n// import { useState, useEffect } from \"react\";\n// import { postProduct, getProductById, putProduct } from \"../../features/Product/ProductSlice\";\n\n// const defaultTheme = createTheme();\n\n// export default function AddProduct() {\n//   const { id } = useParams();\n//   const product = useSelector((state) => state.products.currentproduct);\n//   const dispatch = useDispatch();\n//   let nav = useNavigate();\n//   const add = id ? false : true\n//   const [formData, setFormData] = useState({\n//     name: '',\n//     description: '',\n//     price: '',\n//     imgUrl: '',\n\n//   });\n\n//   useEffect(() => {\n//     if (id) {\n//       dispatch(getProductById(id));\n//     }\n//   }, [id, dispatch]);\n\n//   useEffect(() => {\n//     if (!add && product) {\n//       setFormData({\n//         name: product.name || '',\n//         description: product.description || '',\n//         price: product.price || '',\n//         imgUrl: product.imgUrl || '',\n\n//       });\n//     }\n//   }, [product]);\n\n//   const {\n//     register,\n//     handleSubmit,\n//     getValues,\n//     formState: { errors, dirtyFields, isValid },\n//   } = useForm({ mode: 'onBlur' });\n\n//   const handleChange = (e) => {\n//     const { name, value, type, checked } = e.target;\n//     setFormData(prevState => ({\n//       ...prevState,\n//       [name]: type === 'checkbox' ? checked : value\n//     }));\n//   };\n\n//   const onSubmit = (event) => {\n//     event.preventDefault();\n//     if (product) {\n//       dispatch(putProduct({ id, newProduct: formData }));\n//     } else {\n//       dispatch(postProduct(formData));\n//     }\n//     nav('/ProductList');\n//   };\n\n//   const buttonName = product ? 'Update' : 'Add';\n//   return (\n//     <ThemeProvider theme={defaultTheme}>\n//       <Grid container component=\"main\" sx={{ height: '50vh', width: '60vw', marginLeft: '20vw' }}>\n//         <CssBaseline />\n//         <Grid\n//           item\n//           xs={false}\n//           sm={4}\n//           md={7}\n//           sx={{\n//             backgroundImage: `url(${!add && product ? product.imgUrl : 'https://gregcafe.co.il/wp-content/uploads/2023/03/%D7%92%D7%91%D7%A2%D7%AA-%D7%A9%D7%9E%D7%95%D7%90%D7%9C-1.jpg'})`,\n//             backgroundRepeat: 'no-repeat',\n//             backgroundColor: (t) =>\n//               t.palette.mode === 'light' ? t.palette.grey[50] : t.palette.grey[900],\n//             backgroundSize: 'cover',\n//             backgroundPosition: 'center',\n//           }}\n//         />\n//         <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n//           <Box\n//             sx={{\n//               my: 8,\n//               mx: 4,\n//               display: 'flex',\n//               flexDirection: 'column',\n//               alignItems: 'center',\n//             }}\n//           >\n//             <Typography component=\"h1\" variant=\"h5\">\n//               {buttonName} Product\n//             </Typography>\n//             <Box component=\"form\" onSubmit={(e) => handleSubmit(onSubmit(e))} sx={{ mt: 1 }}>\n//               <TextField\n//                 margin=\"normal\"\n//                 required\n//                 fullWidth\n//                 id=\"name\"\n//                 label=\"Name\"\n//                 name=\"name\"\n//                 autoComplete=\"name\"\n//                 value={add ? '' : formData.name}\n//                 onChange={handleChange}\n//                 autoFocus\n//               />\n//               <TextField\n//                 margin=\"normal\"\n//                 required\n//                 fullWidth\n//                 id=\"description\"\n//                 label=\"Description\"\n//                 name=\"description\"\n//                 autoComplete=\"description\"\n//                 value={add ? '' : formData.description}\n//                 onChange={handleChange}\n//               />\n\n//               <TextField\n//                 margin=\"normal\"\n//                 type='number'\n//                 required\n//                 fullWidth\n//                 id=\"price\"\n//                 label=\"Price\"\n//                 name=\"price\"\n//                 autoComplete=\"price\"\n//                 value={add ? '' : formData.price}\n//                 onChange={handleChange}\n\n//               />\n\n//               <TextField\n//                 margin=\"normal\"\n//                 required\n//                 fullWidth\n//                 id=\"imgUrl\"\n//                 label=\"Image URL\"\n//                 name=\"imgUrl\"\n//                 autoComplete=\"imgUrl\"\n//                 value={add ? '' : formData.imgUrl}\n//                 onChange={handleChange}\n\n//               />\n\n//               <Button\n//                 type=\"submit\"\n//                 fullWidth\n//                 variant=\"contained\"\n//                 sx={{ mt: 3, mb: 2 }}\n\n//               >\n//                 {buttonName}\n//               </Button>\n//             </Box>\n//           </Box>\n//         </Grid>\n//       </Grid>\n//     </ThemeProvider>\n//   );\n// }\nvar _c;\n$RefreshReg$(_c, \"AddProduct\");","map":{"version":3,"names":["useForm","TextField","React","useState","useDispatch","useSelector","useNavigate","Avatar","Button","CssBaseline","FormControlLabel","Checkbox","Link","Grid","Box","LockOutlinedIcon","Typography","Container","createTheme","ThemeProvider","Description","Password","postUser","jsxDEV","_jsxDEV","Fragment","_Fragment","AddProduct","_s","_errors$name","_errors$name2","_errors$password","_errors$address","_errors$name3","product","setProduct","tz","name","password","telephone","address","arrU","x","products","arrUser","currentUser","u","dispatch","nav","defaultTheme","register","handleSubmit","getValues","formState","errors","dirtyFields","isValid","mode","onSubmit","data","description","price","imgUrl","console","log","currentproduct","sx","marginTop","display","flexDirection","alignItems","children","m","bgcolor","fileName","_jsxFileName","lineNumber","columnNumber","component","variant","maxWidth","margin","padding","boxShadow","gutterBottom","id","label","fullWidth","onChange","e","target","value","required","pattern","type","message","setPr","setUser","color","mt","mb","_c","$RefreshReg$"],"sources":["C:/Users/שיפי וינגרטן/Pictures/Saved Pictures/סמינר/כיתה יד/תכנות/react/פרויקט/finalproject/src/components/screens/products/AddProduct.js"],"sourcesContent":["// import * as React from 'react';\r\n// import Box from '@mui/material/Box';\r\n// import { postProduct } from '../../features/Product/ProductSlice'\r\n// import Avatar from '@mui/material/Avatar';\r\n// import Button from '@mui/material/Button';\r\n// import CssBaseline from '@mui/material/CssBaseline';\r\n// import TextField from '@mui/material/TextField';\r\n// import Grid from '@mui/material/Grid';\r\n// import Typography from '@mui/material/Typography';\r\n// import Container from '@mui/material/Container';\r\n// import { useDispatch } from 'react-redux';\r\n// import { createTheme, ThemeProvider } from '@mui/material/styles';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\r\n// const defaultTheme = createTheme();\r\n\r\n// export default function AddProduct() {\r\n//     const dis = useDispatch();\r\n//     const nav = useNavigate();\r\n\r\n//     const handleSubmit = (event) => {\r\n//         const data = new FormData(event.currentTarget);\r\n//         const newProduct = {\r\n//             name: data.get('name'),\r\n//             description: data.get('description'),\r\n//             price: data.get('price'),\r\n//             imgUrl: data.get('imgUrl')\r\n//         }\r\n//         dis(postProduct({name:event.name,description:event.description,price:event.price,imgUrl:event.imgUrl}))\r\n//             nav('/ProductList');\r\n\r\n//     };\r\n\r\n//     return (\r\n//         <ThemeProvider theme={defaultTheme}>\r\n//             <Container component=\"main\" maxWidth=\"xs\">\r\n//                 <CssBaseline />\r\n//                 <Box\r\n//                     sx={{\r\n//                         marginTop: 8,\r\n//                         display: 'flex',\r\n//                         flexDirection: 'column',\r\n//                         alignItems: 'center',\r\n//                     }}\r\n//                 >\r\n//                     <Avatar sx={{ m: 1, bgcolor: '#00FF66' }}>\r\n//                         <AddCircleOutlineIcon />\r\n//                     </Avatar>\r\n//                     <Typography component=\"h1\" variant=\"h5\">\r\n//                         Add Product\r\n//                     </Typography>\r\n//                     <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\r\n//                         <Grid container spacing={2}>\r\n//                             <Grid item xs={12} sm={6}>\r\n//                                 <TextField\r\n//                                     autoComplete=\"given-name\"\r\n//                                     name=\"name\"\r\n//                                     required\r\n//                                     fullWidth\r\n//                                     id=\"name\"\r\n//                                     label=\"Name\"\r\n//                                     autoFocus\r\n//                                 />\r\n//                             </Grid>\r\n//                             <Grid item xs={12} sm={6}>\r\n//                                 <TextField\r\n//                                     required\r\n//                                     fullWidth\r\n//                                     id=\"description\"\r\n//                                     label=\"Description\"\r\n//                                     name=\"description\"\r\n//                                     autoComplete=\"description\"\r\n//                                 />\r\n//                             </Grid>\r\n//                             <Grid item xs={12}>\r\n//                                 <TextField\r\n//                                     required\r\n//                                     fullWidth\r\n//                                     id=\"price\"\r\n//                                     label=\"Price\"\r\n//                                     name=\"price\"\r\n//                                     autoComplete=\"price\"\r\n//                                 />\r\n//                             </Grid>\r\n//                             <Grid item xs={12}>\r\n//                                 <TextField\r\n//                                     required\r\n//                                     fullWidth\r\n//                                     name=\"imgUrl\"\r\n//                                     label=\"Image URL\"\r\n//                                     type=\"url\"\r\n//                                     id=\"imgUrl\"\r\n//                                     autoComplete=\"imgUrl\"\r\n//                                 />\r\n//                             </Grid>\r\n//                         </Grid>\r\n//                         <Button\r\n//                             type=\"submit\"\r\n//                             fullWidth\r\n//                             variant=\"contained\"\r\n//                             sx={{ mt: 3, mb: 2, bgcolor: '#00FF66' }}\r\n//                         >\r\n//                             Add\r\n//                         </Button>\r\n//                     </Box>\r\n//                 </Box>\r\n//             </Container>\r\n//         </ThemeProvider>\r\n//     );\r\n// }\r\n\r\n\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport TextField from '@mui/material/TextField';\r\nimport React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { Description, Password } from '@mui/icons-material';\r\nimport { postUser} from '../../features//User/UserSlice';\r\n\r\nconst AddProduct = () => {\r\n    const [product, setProduct] = useState({ tz:\" \",name:\" \", password:\" \" ,telephone:\" \",address:\"\"});\r\n    const arrU = useSelector(x => x.products.arrUser);\r\n    const currentUser = useSelector(u => u.products.currentUser);\r\n    const dispatch = useDispatch();\r\n    const nav=useNavigate()\r\nconst defaultTheme = createTheme();\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        getValues,\r\n        formState: { errors, dirtyFields, isValid },\r\n    } = useForm({ mode: 'onBlur' });\r\n\r\n    const onSubmit = (data) => {\r\n\r\n        dispatch(postUser({name:data.name, description:data.description, price:data.price,imgUrl:data.imgUrl}))\r\n        console.log(\"add product\")\r\n        console.log(currentproduct)\r\n         nav('/ProductList')\r\n        // כאן תוכל להוסיף את הלוגיקה שלך לטיפול בהגשת הטופס\r\n        // לדוג', שליחת המידע לשרת או עדכון המצב באפליקציה\r\n    };\r\n\r\n    return (\r\n        <Box\r\n        sx={{\r\n          marginTop: 8,\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <Avatar sx={{ m: 1, bgcolor: 'lightpink' }}>\r\n          {/* <LockOutlinedIcon /> */}\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\" >\r\n          Sign In\r\n        </Typography>\r\n<Box sx={{ maxWidth: 400, margin: 'auto', padding: 3, boxShadow: 3 }}>\r\n<Typography variant=\"h5\" component=\"h2\" gutterBottom>\r\n</Typography>         \r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n                <>\r\n                    <TextField\r\n                        id=\"filled-basic\"\r\n                        label=\"name:\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        margin=\"normal\"                        onChange={(e) => setProduct({ name:e.target.value, description: product.description, price:product.price,imgUrl:product.imgUrl})}\r\n                        {...register(\"name\", { required: \"field is required\", pattern: /^[A-Za-z]+$/i })}\r\n                    />\r\n                    {errors.name?.type === 'required' && <p>{errors.name.message}</p>}\r\n                    {errors.name?.type === 'pattern' && <p>enter in english</p>}\r\n                    {dirtyFields.name && <p>✔️</p>}\r\n                </>\r\n                <>\r\n                    <TextField\r\n                        id=\"filled-basic\"\r\n                        label=\"description:\"\r\n                        type=\"description\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        margin=\"normal\"                        onChange={(e) => setPr({ name:product.name, description:e.target.value, price:product.price,imgUrl:product.imgUrl})}\r\n                        {...register(\"description\",{required: \"field is required\"})}\r\n                    />\r\n                   {errors.password?.type === 'required' && <p>{errors.password.message}</p>}\r\n                    {dirtyFields.password && <p>✔️</p>}\r\n                </>\r\n                <>\r\n                    <TextField\r\n                        id=\"filled-basic\"\r\n                        label=\"telephone:\"\r\n                        type=\"telephone\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        margin=\"normal\"                        onChange={(e) => setUser({ tz: product.tz,name:product.name, password: product.password, telephone:e.target.value,address:product.address})}\r\n                        {...register(\"telephone\", {\r\n                            required: 'enter a phone number',\r\n                            pattern: {\r\n                                value: /^[0-9]{10}$/,\r\n                                message: 'the phone number is incorrect',\r\n                            },\r\n                        })}\r\n                    />\r\n                    {errors.telephone && <p>{errors.telephone.message}</p>}\r\n                    {dirtyFields.telephone && <p>✔️</p>}\r\n                </>\r\n                <>\r\n                    <TextField\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              margin=\"normal\"\r\n                        id=\"filled-basic\"\r\n                        label=\"address:\"\r\n                        onChange={(e) => setUser({ tz: product.tz, name:product.name, password: product.password, telephone:product.telephone,address:e.target.value})}\r\n                        {...register(\"address\", { required: \"field is required\", pattern: /^[A-Za-z]+$/i })}\r\n                    />\r\n                    {errors.address?.type === 'required' && <p>{errors.address.message}</p>}\r\n                    {errors.name?.type === 'pattern' && <p>enter in english</p>}\r\n                    {dirtyFields.name && <p>✔️</p>}\r\n                </>\r\n               \r\n                <Button\r\n              color='inherit'\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2,bgcolor:'lightpink' }}\r\n            >\r\n              Sign In\r\n            </Button> \r\n                       </form>\r\n            </Box>            </Box>\r\n\r\n        \r\n    );\r\n}\r\n\r\nexport default AddProduct;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import * as React from 'react';\r\n// import Avatar from '@mui/material/Avatar';\r\n// import Button from '@mui/material/Button';\r\n// import CssBaseline from '@mui/material/CssBaseline';\r\n// import TextField from '@mui/material/TextField';\r\n// import FormControlLabel from '@mui/material/FormControlLabel';\r\n// import Checkbox from '@mui/material/Checkbox';\r\n// import Link from '@mui/material/Link';\r\n// import Paper from '@mui/material/Paper';\r\n// import Box from '@mui/material/Box';\r\n// import Grid from '@mui/material/Grid';\r\n// import LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\n// import Typography from '@mui/material/Typography';\r\n// import { createTheme, ThemeProvider } from '@mui/material/styles';\r\n// import { useForm } from 'react-hook-form';\r\n// import { useSelector, useDispatch } from 'react-redux';\r\n// import { useNavigate, useParams } from 'react-router-dom';\r\n// import { useState, useEffect } from \"react\";\r\n// import { postProduct, getProductById, putProduct } from \"../../features/Product/ProductSlice\";\r\n\r\n// const defaultTheme = createTheme();\r\n\r\n// export default function AddProduct() {\r\n//   const { id } = useParams();\r\n//   const product = useSelector((state) => state.products.currentproduct);\r\n//   const dispatch = useDispatch();\r\n//   let nav = useNavigate();\r\n//   const add = id ? false : true\r\n//   const [formData, setFormData] = useState({\r\n//     name: '',\r\n//     description: '',\r\n//     price: '',\r\n//     imgUrl: '',\r\n\r\n//   });\r\n\r\n\r\n\r\n//   useEffect(() => {\r\n//     if (id) {\r\n//       dispatch(getProductById(id));\r\n//     }\r\n//   }, [id, dispatch]);\r\n\r\n//   useEffect(() => {\r\n//     if (!add && product) {\r\n//       setFormData({\r\n//         name: product.name || '',\r\n//         description: product.description || '',\r\n//         price: product.price || '',\r\n//         imgUrl: product.imgUrl || '',\r\n\r\n//       });\r\n//     }\r\n//   }, [product]);\r\n\r\n//   const {\r\n//     register,\r\n//     handleSubmit,\r\n//     getValues,\r\n//     formState: { errors, dirtyFields, isValid },\r\n//   } = useForm({ mode: 'onBlur' });\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value, type, checked } = e.target;\r\n//     setFormData(prevState => ({\r\n//       ...prevState,\r\n//       [name]: type === 'checkbox' ? checked : value\r\n//     }));\r\n//   };\r\n\r\n//   const onSubmit = (event) => {\r\n//     event.preventDefault();\r\n//     if (product) {\r\n//       dispatch(putProduct({ id, newProduct: formData }));\r\n//     } else {\r\n//       dispatch(postProduct(formData));\r\n//     }\r\n//     nav('/ProductList');\r\n//   };\r\n\r\n//   const buttonName = product ? 'Update' : 'Add';\r\n//   return (\r\n//     <ThemeProvider theme={defaultTheme}>\r\n//       <Grid container component=\"main\" sx={{ height: '50vh', width: '60vw', marginLeft: '20vw' }}>\r\n//         <CssBaseline />\r\n//         <Grid\r\n//           item\r\n//           xs={false}\r\n//           sm={4}\r\n//           md={7}\r\n//           sx={{\r\n//             backgroundImage: `url(${!add && product ? product.imgUrl : 'https://gregcafe.co.il/wp-content/uploads/2023/03/%D7%92%D7%91%D7%A2%D7%AA-%D7%A9%D7%9E%D7%95%D7%90%D7%9C-1.jpg'})`,\r\n//             backgroundRepeat: 'no-repeat',\r\n//             backgroundColor: (t) =>\r\n//               t.palette.mode === 'light' ? t.palette.grey[50] : t.palette.grey[900],\r\n//             backgroundSize: 'cover',\r\n//             backgroundPosition: 'center',\r\n//           }}\r\n//         />\r\n//         <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n//           <Box\r\n//             sx={{\r\n//               my: 8,\r\n//               mx: 4,\r\n//               display: 'flex',\r\n//               flexDirection: 'column',\r\n//               alignItems: 'center',\r\n//             }}\r\n//           >\r\n//             <Typography component=\"h1\" variant=\"h5\">\r\n//               {buttonName} Product\r\n//             </Typography>\r\n//             <Box component=\"form\" onSubmit={(e) => handleSubmit(onSubmit(e))} sx={{ mt: 1 }}>\r\n//               <TextField\r\n//                 margin=\"normal\"\r\n//                 required\r\n//                 fullWidth\r\n//                 id=\"name\"\r\n//                 label=\"Name\"\r\n//                 name=\"name\"\r\n//                 autoComplete=\"name\"\r\n//                 value={add ? '' : formData.name}\r\n//                 onChange={handleChange}\r\n//                 autoFocus\r\n//               />\r\n//               <TextField\r\n//                 margin=\"normal\"\r\n//                 required\r\n//                 fullWidth\r\n//                 id=\"description\"\r\n//                 label=\"Description\"\r\n//                 name=\"description\"\r\n//                 autoComplete=\"description\"\r\n//                 value={add ? '' : formData.description}\r\n//                 onChange={handleChange}\r\n//               />\r\n\r\n//               <TextField\r\n//                 margin=\"normal\"\r\n//                 type='number'\r\n//                 required\r\n//                 fullWidth\r\n//                 id=\"price\"\r\n//                 label=\"Price\"\r\n//                 name=\"price\"\r\n//                 autoComplete=\"price\"\r\n//                 value={add ? '' : formData.price}\r\n//                 onChange={handleChange}\r\n\r\n//               />\r\n\r\n\r\n//               <TextField\r\n//                 margin=\"normal\"\r\n//                 required\r\n//                 fullWidth\r\n//                 id=\"imgUrl\"\r\n//                 label=\"Image URL\"\r\n//                 name=\"imgUrl\"\r\n//                 autoComplete=\"imgUrl\"\r\n//                 value={add ? '' : formData.imgUrl}\r\n//                 onChange={handleChange}\r\n\r\n//               />\r\n        \r\n//               <Button\r\n//                 type=\"submit\"\r\n//                 fullWidth\r\n//                 variant=\"contained\"\r\n//                 sx={{ mt: 3, mb: 2 }}\r\n\r\n//               >\r\n//                 {buttonName}\r\n//               </Button>\r\n//             </Box>\r\n//           </Box>\r\n//         </Grid>\r\n//       </Grid>\r\n//     </ThemeProvider>\r\n//   );\r\n// }"],"mappings":"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AAA;MAAAC,YAAA;IAAA,OACb,CAAC,gBAAY;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAIpC,CAAC;AAAAjD,EAAA,CAvHKD,UAAU;EAAA,QAECtB,WAAW,EACJA,WAAW,EACdD,WAAW,EAClBE,WAAW,EAQjBN,OAAO;AAAA;AAAAqG,EAAA,GAbT1E,UAAU;AAyHhB,eAAeA,UAAU;;AAazB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAA0E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"// import React from 'react'; \n// import { useSelector,useDispatch } from \"react-redux\";\n// import { useForm, Controller } from \"react-hook-form\";\n// import TextField from '@mui/material/TextField';\n// import Button from '@mui/material/Button';\n// import Box from '@mui/material/Box';\n// import Divider from '@mui/material/Divider';\n// import MenuItem from '@mui/material/MenuItem';\n// import Select from '@mui/material/Select';\n// import InputLabel from '@mui/material/InputLabel';\n// import FormControl from '@mui/material/FormControl';\n// import '../../ProductDetails.css';\n// import {postOrder, emptyCart} from '../../features/Order/OrderSlice'\n\n// const months = [\n//   '01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'\n// ];\n// const currentYear = new Date().getFullYear();\n// const years = Array.from({ length: 10 }, (_, i) => (currentYear + i).toString().slice(-2));\n// const today = new Date();\n// const day = String(today.getDate()).padStart(2, '0'); // היום בפורמט \"dd\" (01 עד 31)\n// const month = String(today.getMonth() + 1).padStart(2, '0'); // החודש בפורמט \"mm\" (01 עד 12)\n// const formattedDate = `${day}/${month}/${currentYear}`; \n// const Order = () => {\n//   const { register, handleSubmit, control, formState: { errors, isValid } } = useForm({ mode: 'onBlur', validateCriteriaMode: 'firstError' });\n//   const dispatch = useDispatch()\n\n//   const currentUser = useSelector(store => store.users.currentUser);\n//   const cart=useSelector(store => store.orders.cart);\n//   const price=useSelector(store => store.orders.price);\n\n//   const newOrder = {\n//     firstName: \"\",\n//     lastName:\"\",\n//     phone: \"\",\n//     city:\"\",\n//     street:\"\",\n//     houseNumber:\"\",\n//     tz: currentUser.tz,\n//     products:cart,\n//     price:price,\n//     date:formattedDate\n//   };\n//   const onSubmit = (data) => {\n//     newOrder.firstName = data.firstName;\n//     newOrder.lastName = data.lastName;\n//     newOrder.phone = data.phone;\n//     newOrder.city = data.city;\n//     newOrder.street = data.street;\n//     newOrder.houseNumber = data.houseNumber;\n//     newOrder.price = price;\n//     newOrder.date=formattedDate\n//     console.log(currentUser)\n//     console.log(cart)    \n//     dispatch(postOrder(newOrder));\n//     dispatch(emptyCart())\n//   };\n\n//   return (\n//     <Box component=\"form\" onSubmit={handleSubmit(onSubmit)} sx={{ maxWidth: 600, mx: 'auto', p: 3 }}>\n// <div className='grid1'>\n//         <h3 className='full1'align=\"center\">Personal details</h3>\n//         <TextField required fullWidth\n//               error={!!errors.firstName}\n//               InputLabelProps={{ style: { color: errors.firstName ? '#e6001a' : '#004AAD' } }}\n//               helperText={errors.firstName ? (\n//                 errors.firstName.type === 'required' ? 'Required field' :\n//                   errors.firstName.type === 'minLength' ? 'At least 2 characters' :\n//                     errors.firstName.type === 'pattern' ? 'Only letters' : '') : ' '}\n//               label=\"First name\"\n//               {...register(\"firstName\", { required: true, minLength: 2, pattern: /^([A-Za-z]{2})(\\s*[A-Za-z\\s]*)?$/i })}\n//               defaultValue={currentUser.firstName}\n//               variant=\"standard\"\n//             />\n//             <TextField\n//               required\n//               fullWidth\n//               error={!!errors.lastName}\n//               InputLabelProps={{ style: { color: errors.lastName ? '#e6001a' : '#004AAD' } }}\n//               helperText={errors.lastName ? (\n//                 errors.lastName.type === 'required' ? 'Required field' :\n//                   errors.lastName.type === 'minLength' ? 'At least 2 characters' :\n//                     errors.lastName.type === 'pattern' ? 'Only letters' : '') : ' '}\n//               label=\"Last name\"\n//               {...register(\"lastName\", { required: true, minLength: 2, pattern: /^([A-Za-z]{2})(\\s*[A-Za-z\\s]*)?$/i })}\n//               defaultValue={currentUser.lastName}\n//               variant=\"standard\"\n//             />\n//             <TextField\n//               required\n//               fullWidth\n//               error={!!errors.phone}\n//               InputLabelProps={{ style: { color: errors.phone ? '#e6001a' : '#004AAD' } }}\n//               helperText={errors.phone ? (\n//                 errors.phone.type === 'required' ? 'required field' :\n//                   errors.phone.type === 'pattern' ? '10 numbers required' : '') : ' '}\n//               label=\"Phone\"\n//               {...register(\"phone\", { required: true, pattern: /^0[0-9]{9}$/, })}\n//                defaultValue={currentUser.phone}\n//               variant=\"standard\"\n//             />\n//             <TextField\n//               required\n//               fullWidth\n//               error={!!errors.city}\n//               InputLabelProps={{ style: { color: errors.city ? '#e6001a' : '#004AAD' } }}\n//               helperText={errors.city ? (\n//                 errors.city.type === 'required' ? 'required field' :\n//                   errors.city.type === 'minLength' ? 'At least 2 characters' :\n//                     errors.city.type === 'pattern' ? 'only letters' : '') : ' '}\n//               label=\"City\"\n//               {...register(\"city\", { required: true, minLength: 2, pattern: /^([A-Za-z]{2})(\\s*[A-Za-z\\s]*)?$/i })}\n//               variant=\"standard\"\n//             />\n//             <TextField\n//               required\n//               fullWidth\n//               error={!!errors.street}\n//               InputLabelProps={{ style: { color: errors.street ? '#e6001a' : '#004AAD' } }}\n//               helperText={errors.street ? (\n//                 errors.street.type === 'required' ? 'required field' :\n//                   errors.street.type === 'minLength' ? 'At least 2 characters' : '') : ' '}\n//               label=\"Street\"\n//               {...register(\"street\", { required: true, minLength: 2 })}\n//               variant=\"standard\"\n//             />\n//             <TextField\n//               required\n//               fullWidth\n//               error={!!errors.houseNumber}\n//               InputLabelProps={{ style: { color: errors.houseNumber ? '#e6001a' : '#004AAD' }, shrink: true }}\n//               helperText={errors.houseNumber ? (\n//                 errors.houseNumber.type === 'required' ? 'required field' :\n//                   errors.houseNumber.type === 'min' ? 'positive number required' : '') : ' '}\n//               label=\"House number\"\n//               {...register(\"houseNumber\", { required: true, min: 0 })}\n//               type=\"number\"\n//               variant=\"standard\"\n//             />\n//       </div>\n//       <Divider className='full'sx={{ my: 3, bgcolor: 'lightgray' }} />\n\n//      <div className='grid2'>\n//         <h3 className='full2'align=\"center\">Payment details</h3>\n//         <TextField\n//         className='full2'\n//               required\n//               fullWidth\n//               error={!!errors.cardNumber}\n//               InputLabelProps={{ style: { color: errors.cardNumber ? '#e6001a' : '#004AAD' } }}\n//               helperText={errors.cardNumber ? 'Invalid card number' : ' '}\n//               label=\"Credit Card Number\"\n//               {...register(\"cardNumber\", { required: true, pattern: /^[0-9]{16}$/ })}\n//               variant=\"standard\"\n//               inputProps={{ maxLength: 16 }}\n//             />\n//             <FormControl fullWidth error={!!errors.expiryMonth}>\n//               <InputLabel style={{ color: errors.expiryMonth ? '#e6001a' : '#004AAD' }}>Expiry Month</InputLabel>\n//               <Controller\n//                 name=\"expiryMonth\"\n//                 control={control}\n//                 rules={{ required: true }}\n//                 render={({ field }) => (\n//                   <Select\n//                     {...field}\n//                     variant=\"standard\"\n//                   >\n//                     {months.map(month => (\n//                       <MenuItem key={month} value={month}>{month}</MenuItem>\n//                     ))}\n//                   </Select>\n//                 )}\n//               />\n//             </FormControl>\n\n//             <FormControl fullWidth error={!!errors.expiryYear}>\n//               <InputLabel style={{ color: errors.expiryYear ? '#e6001a' : '#004AAD' }}>Expiry Year</InputLabel>\n//               <Controller\n//                 name=\"expiryYear\"\n//                 control={control}\n//                 rules={{ required: true }}\n//                 render={({ field }) => (\n//                   <Select\n//                     {...field}\n//                     variant=\"standard\"\n//                   >\n//                     {years.map(year => (\n//                       <MenuItem key={year} value={year}>{year}</MenuItem>\n//                     ))}\n//                   </Select>\n//                 )}\n//               />\n//             </FormControl>\n\n//             <TextField\n//               required\n//               fullWidth\n//               error={!!errors.cvv}\n//               InputLabelProps={{ style: { color: errors.cvv ? '#e6001a' : '#004AAD' } }}\n//               helperText={errors.cvv ? 'Invalid CVV' : ' '}\n//               label=\"CVV\"\n//               {...register(\"cvv\", { required: true, pattern: /^[0-9]{3}$/ })}\n//               variant=\"standard\"\n//               inputProps={{ maxLength: 3 }}\n//             />\n//           </div>\n//           <div className='grid1'>\n//             <TextField \n//               required\n//               fullWidth\n//               error={!!errors.name}\n//               InputLabelProps={{ style: { color: errors.name ? '#e6001a' : '#004AAD' } }}\n//               helperText={errors.name ? (\n//                 errors.name.type === 'required' ? 'Required field' :\n//                 errors.name.type === 'minLength' ? 'At least 2 characters' :\n//                 errors.name.type === 'pattern' ? 'Only letters' : '') : ' '}\n//               label=\"Name of the cardholder\"\n//               {...register(\"name\", { required: true, minLength: 2, pattern: /^([A-Za-z]{2})(\\s*[A-Za-z\\s]*)?$/i })}\n//               variant=\"standard\"\n//             />\n\n//             <TextField \n//               required\n//               fullWidth\n//               error={!!errors.idNumber}\n//               InputLabelProps={{ style: { color: errors.idNumber ? '#e6001a' : '#004AAD' } }}\n//               helperText={errors.idNumber ? 'Invalid ID number' : ' '}\n//               label=\"ID of the cardholder\"\n//               {...register(\"idNumber\", { required: true, pattern: /^[0-9]{9}$/ })}\n//               variant=\"standard\"\n//               inputProps={{ maxLength: 9 }}\n//             />\n\n//     </div>\n//           <h4>Total: {price} NIS</h4>\n//         <Button variant=\"outlined\" type=\"submit\" disabled={!isValid}>PAY</Button>\n//     </Box>\n//   );\n// };\n\n// export default Order;","map":{"version":3,"names":[],"sources":["C:/Users/שיפי וינגרטן/Pictures/Saved Pictures/סמינר/כיתה יד/תכנות/react/פרויקט/finalproject/src/components/screens/orders/AddOrder.js"],"sourcesContent":["// import React from 'react'; \r\n// import { useSelector,useDispatch } from \"react-redux\";\r\n// import { useForm, Controller } from \"react-hook-form\";\r\n// import TextField from '@mui/material/TextField';\r\n// import Button from '@mui/material/Button';\r\n// import Box from '@mui/material/Box';\r\n// import Divider from '@mui/material/Divider';\r\n// import MenuItem from '@mui/material/MenuItem';\r\n// import Select from '@mui/material/Select';\r\n// import InputLabel from '@mui/material/InputLabel';\r\n// import FormControl from '@mui/material/FormControl';\r\n// import '../../ProductDetails.css';\r\n// import {postOrder, emptyCart} from '../../features/Order/OrderSlice'\r\n\r\n// const months = [\r\n//   '01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'\r\n// ];\r\n// const currentYear = new Date().getFullYear();\r\n// const years = Array.from({ length: 10 }, (_, i) => (currentYear + i).toString().slice(-2));\r\n// const today = new Date();\r\n// const day = String(today.getDate()).padStart(2, '0'); // היום בפורמט \"dd\" (01 עד 31)\r\n// const month = String(today.getMonth() + 1).padStart(2, '0'); // החודש בפורמט \"mm\" (01 עד 12)\r\n// const formattedDate = `${day}/${month}/${currentYear}`; \r\n// const Order = () => {\r\n//   const { register, handleSubmit, control, formState: { errors, isValid } } = useForm({ mode: 'onBlur', validateCriteriaMode: 'firstError' });\r\n//   const dispatch = useDispatch()\r\n\r\n//   const currentUser = useSelector(store => store.users.currentUser);\r\n//   const cart=useSelector(store => store.orders.cart);\r\n//   const price=useSelector(store => store.orders.price);\r\n\r\n//   const newOrder = {\r\n//     firstName: \"\",\r\n//     lastName:\"\",\r\n//     phone: \"\",\r\n//     city:\"\",\r\n//     street:\"\",\r\n//     houseNumber:\"\",\r\n//     tz: currentUser.tz,\r\n//     products:cart,\r\n//     price:price,\r\n//     date:formattedDate\r\n//   };\r\n//   const onSubmit = (data) => {\r\n//     newOrder.firstName = data.firstName;\r\n//     newOrder.lastName = data.lastName;\r\n//     newOrder.phone = data.phone;\r\n//     newOrder.city = data.city;\r\n//     newOrder.street = data.street;\r\n//     newOrder.houseNumber = data.houseNumber;\r\n//     newOrder.price = price;\r\n//     newOrder.date=formattedDate\r\n//     console.log(currentUser)\r\n//     console.log(cart)    \r\n//     dispatch(postOrder(newOrder));\r\n//     dispatch(emptyCart())\r\n//   };\r\n\r\n//   return (\r\n//     <Box component=\"form\" onSubmit={handleSubmit(onSubmit)} sx={{ maxWidth: 600, mx: 'auto', p: 3 }}>\r\n// <div className='grid1'>\r\n//         <h3 className='full1'align=\"center\">Personal details</h3>\r\n//         <TextField required fullWidth\r\n//               error={!!errors.firstName}\r\n//               InputLabelProps={{ style: { color: errors.firstName ? '#e6001a' : '#004AAD' } }}\r\n//               helperText={errors.firstName ? (\r\n//                 errors.firstName.type === 'required' ? 'Required field' :\r\n//                   errors.firstName.type === 'minLength' ? 'At least 2 characters' :\r\n//                     errors.firstName.type === 'pattern' ? 'Only letters' : '') : ' '}\r\n//               label=\"First name\"\r\n//               {...register(\"firstName\", { required: true, minLength: 2, pattern: /^([A-Za-z]{2})(\\s*[A-Za-z\\s]*)?$/i })}\r\n//               defaultValue={currentUser.firstName}\r\n//               variant=\"standard\"\r\n//             />\r\n//             <TextField\r\n//               required\r\n//               fullWidth\r\n//               error={!!errors.lastName}\r\n//               InputLabelProps={{ style: { color: errors.lastName ? '#e6001a' : '#004AAD' } }}\r\n//               helperText={errors.lastName ? (\r\n//                 errors.lastName.type === 'required' ? 'Required field' :\r\n//                   errors.lastName.type === 'minLength' ? 'At least 2 characters' :\r\n//                     errors.lastName.type === 'pattern' ? 'Only letters' : '') : ' '}\r\n//               label=\"Last name\"\r\n//               {...register(\"lastName\", { required: true, minLength: 2, pattern: /^([A-Za-z]{2})(\\s*[A-Za-z\\s]*)?$/i })}\r\n//               defaultValue={currentUser.lastName}\r\n//               variant=\"standard\"\r\n//             />\r\n//             <TextField\r\n//               required\r\n//               fullWidth\r\n//               error={!!errors.phone}\r\n//               InputLabelProps={{ style: { color: errors.phone ? '#e6001a' : '#004AAD' } }}\r\n//               helperText={errors.phone ? (\r\n//                 errors.phone.type === 'required' ? 'required field' :\r\n//                   errors.phone.type === 'pattern' ? '10 numbers required' : '') : ' '}\r\n//               label=\"Phone\"\r\n//               {...register(\"phone\", { required: true, pattern: /^0[0-9]{9}$/, })}\r\n//                defaultValue={currentUser.phone}\r\n//               variant=\"standard\"\r\n//             />\r\n//             <TextField\r\n//               required\r\n//               fullWidth\r\n//               error={!!errors.city}\r\n//               InputLabelProps={{ style: { color: errors.city ? '#e6001a' : '#004AAD' } }}\r\n//               helperText={errors.city ? (\r\n//                 errors.city.type === 'required' ? 'required field' :\r\n//                   errors.city.type === 'minLength' ? 'At least 2 characters' :\r\n//                     errors.city.type === 'pattern' ? 'only letters' : '') : ' '}\r\n//               label=\"City\"\r\n//               {...register(\"city\", { required: true, minLength: 2, pattern: /^([A-Za-z]{2})(\\s*[A-Za-z\\s]*)?$/i })}\r\n//               variant=\"standard\"\r\n//             />\r\n//             <TextField\r\n//               required\r\n//               fullWidth\r\n//               error={!!errors.street}\r\n//               InputLabelProps={{ style: { color: errors.street ? '#e6001a' : '#004AAD' } }}\r\n//               helperText={errors.street ? (\r\n//                 errors.street.type === 'required' ? 'required field' :\r\n//                   errors.street.type === 'minLength' ? 'At least 2 characters' : '') : ' '}\r\n//               label=\"Street\"\r\n//               {...register(\"street\", { required: true, minLength: 2 })}\r\n//               variant=\"standard\"\r\n//             />\r\n//             <TextField\r\n//               required\r\n//               fullWidth\r\n//               error={!!errors.houseNumber}\r\n//               InputLabelProps={{ style: { color: errors.houseNumber ? '#e6001a' : '#004AAD' }, shrink: true }}\r\n//               helperText={errors.houseNumber ? (\r\n//                 errors.houseNumber.type === 'required' ? 'required field' :\r\n//                   errors.houseNumber.type === 'min' ? 'positive number required' : '') : ' '}\r\n//               label=\"House number\"\r\n//               {...register(\"houseNumber\", { required: true, min: 0 })}\r\n//               type=\"number\"\r\n//               variant=\"standard\"\r\n//             />\r\n//       </div>\r\n//       <Divider className='full'sx={{ my: 3, bgcolor: 'lightgray' }} />\r\n\r\n//      <div className='grid2'>\r\n//         <h3 className='full2'align=\"center\">Payment details</h3>\r\n//         <TextField\r\n//         className='full2'\r\n//               required\r\n//               fullWidth\r\n//               error={!!errors.cardNumber}\r\n//               InputLabelProps={{ style: { color: errors.cardNumber ? '#e6001a' : '#004AAD' } }}\r\n//               helperText={errors.cardNumber ? 'Invalid card number' : ' '}\r\n//               label=\"Credit Card Number\"\r\n//               {...register(\"cardNumber\", { required: true, pattern: /^[0-9]{16}$/ })}\r\n//               variant=\"standard\"\r\n//               inputProps={{ maxLength: 16 }}\r\n//             />\r\n//             <FormControl fullWidth error={!!errors.expiryMonth}>\r\n//               <InputLabel style={{ color: errors.expiryMonth ? '#e6001a' : '#004AAD' }}>Expiry Month</InputLabel>\r\n//               <Controller\r\n//                 name=\"expiryMonth\"\r\n//                 control={control}\r\n//                 rules={{ required: true }}\r\n//                 render={({ field }) => (\r\n//                   <Select\r\n//                     {...field}\r\n//                     variant=\"standard\"\r\n//                   >\r\n//                     {months.map(month => (\r\n//                       <MenuItem key={month} value={month}>{month}</MenuItem>\r\n//                     ))}\r\n//                   </Select>\r\n//                 )}\r\n//               />\r\n//             </FormControl>\r\n         \r\n//             <FormControl fullWidth error={!!errors.expiryYear}>\r\n//               <InputLabel style={{ color: errors.expiryYear ? '#e6001a' : '#004AAD' }}>Expiry Year</InputLabel>\r\n//               <Controller\r\n//                 name=\"expiryYear\"\r\n//                 control={control}\r\n//                 rules={{ required: true }}\r\n//                 render={({ field }) => (\r\n//                   <Select\r\n//                     {...field}\r\n//                     variant=\"standard\"\r\n//                   >\r\n//                     {years.map(year => (\r\n//                       <MenuItem key={year} value={year}>{year}</MenuItem>\r\n//                     ))}\r\n//                   </Select>\r\n//                 )}\r\n//               />\r\n//             </FormControl>\r\n         \r\n//             <TextField\r\n//               required\r\n//               fullWidth\r\n//               error={!!errors.cvv}\r\n//               InputLabelProps={{ style: { color: errors.cvv ? '#e6001a' : '#004AAD' } }}\r\n//               helperText={errors.cvv ? 'Invalid CVV' : ' '}\r\n//               label=\"CVV\"\r\n//               {...register(\"cvv\", { required: true, pattern: /^[0-9]{3}$/ })}\r\n//               variant=\"standard\"\r\n//               inputProps={{ maxLength: 3 }}\r\n//             />\r\n//           </div>\r\n//           <div className='grid1'>\r\n//             <TextField \r\n//               required\r\n//               fullWidth\r\n//               error={!!errors.name}\r\n//               InputLabelProps={{ style: { color: errors.name ? '#e6001a' : '#004AAD' } }}\r\n//               helperText={errors.name ? (\r\n//                 errors.name.type === 'required' ? 'Required field' :\r\n//                 errors.name.type === 'minLength' ? 'At least 2 characters' :\r\n//                 errors.name.type === 'pattern' ? 'Only letters' : '') : ' '}\r\n//               label=\"Name of the cardholder\"\r\n//               {...register(\"name\", { required: true, minLength: 2, pattern: /^([A-Za-z]{2})(\\s*[A-Za-z\\s]*)?$/i })}\r\n//               variant=\"standard\"\r\n//             />\r\n         \r\n//             <TextField \r\n//               required\r\n//               fullWidth\r\n//               error={!!errors.idNumber}\r\n//               InputLabelProps={{ style: { color: errors.idNumber ? '#e6001a' : '#004AAD' } }}\r\n//               helperText={errors.idNumber ? 'Invalid ID number' : ' '}\r\n//               label=\"ID of the cardholder\"\r\n//               {...register(\"idNumber\", { required: true, pattern: /^[0-9]{9}$/ })}\r\n//               variant=\"standard\"\r\n//               inputProps={{ maxLength: 9 }}\r\n//             />\r\n    \r\n//     </div>\r\n//           <h4>Total: {price} NIS</h4>\r\n//         <Button variant=\"outlined\" type=\"submit\" disabled={!isValid}>PAY</Button>\r\n//     </Box>\r\n//   );\r\n// };\r\n\r\n// export default Order;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05E9\\u05D9\\u05E4\\u05D9 \\u05D5\\u05D9\\u05E0\\u05D2\\u05E8\\u05D8\\u05DF\\\\Pictures\\\\Saved Pictures\\\\\\u05E1\\u05DE\\u05D9\\u05E0\\u05E8\\\\\\u05DB\\u05D9\\u05EA\\u05D4 \\u05D9\\u05D3\\\\\\u05EA\\u05DB\\u05E0\\u05D5\\u05EA\\\\react\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05E7\\u05D8\\\\finalproject\\\\src\\\\components\\\\screens\\\\user\\\\SignIn.js\",\n  _s = $RefreshSig$();\nimport { useForm } from \"react-hook-form\";\nimport TextField from '@mui/material/TextField';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from \"react-router-dom\";\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { Password } from '@mui/icons-material';\nimport { postUser } from '../../features//User/UserSlice';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SignIn = () => {\n  _s();\n  var _errors$name, _errors$name2, _errors$password, _errors$address, _errors$address2;\n  const [user, setUser] = useState({\n    tz: \" \",\n    fullName: \" \",\n    password: \" \",\n    telephone: \" \"\n  });\n  const arrU = useSelector(x => x.users.arrUser);\n  const currentUser = useSelector(u => u.users.currentUser);\n  const dispatch = useDispatch();\n  const nav = useNavigate();\n  const defaultTheme = createTheme();\n  const {\n    register,\n    handleSubmit,\n    getValues,\n    formState: {\n      errors,\n      dirtyFields,\n      isValid\n    }\n  } = useForm({\n    mode: 'onBlur'\n  });\n  const onSubmit = data => {\n    // event.preventDefault();\n    //const data = new FormData(event.currentTarget);\n    //dispatch(addUser({\"tz\":data.get('tz'), \"name\":data.get('name'), \"password\":data.get('password'),\"telephone\":data.get('telephone'), \"email\":data.get('email')}))//tz:data.tz, name:data.name, password:data.password, telephone:data.telephone, email:data.email\n    dispatch(postUser({\n      tz: data.tz,\n      fullName: data.fullName,\n      password: data.password,\n      telephone: data.telephone,\n      city: data.city,\n      street: data.street,\n      houseNumber: data.houseNumber\n    }));\n    console.log(\"add user\");\n    console.log(currentUser);\n    nav('/user');\n    // כאן תוכל להוסיף את הלוגיקה שלך לטיפול בהגשת הטופס\n    // לדוג', שליחת המידע לשרת או עדכון המצב באפליקציה\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: defaultTheme,\n      onSubmit: handleSubmit(onSubmit),\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        component: \"main\",\n        maxWidth: \"xs\",\n        children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            sx: {\n              m: 1,\n              bgcolor: 'lightpink'\n            },\n            children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h1\",\n            variant: \"h5\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit(onSubmit),\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              component: \"form\",\n              onSubmit: handleSubmit(onSubmit),\n              noValidate: true,\n              sx: {\n                mt: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"filled-basic\",\n                  label: \"tz:\",\n                  variant: \"filled\",\n                  onChange: e => setUser({\n                    tz: e.target.value,\n                    fullName: user.fullName,\n                    password: user.password,\n                    telephone: user.telephone\n                  }),\n                  ...register(\"tz\", {\n                    required: \"field is required\",\n                    pattern: /^\\d{9}$/\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 21\n                }, this), errors.tz && /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"The id number is incorrect\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 35\n                }, this), dirtyFields.tz && /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"\\u2714\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 40\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"filled-basic\",\n                  label: \"name:\",\n                  variant: \"filled\",\n                  onChange: e => setUser({\n                    tz: user.tz,\n                    fullName: e.target.value,\n                    password: user.password,\n                    telephone: user.telephone,\n                    address: user.address\n                  }),\n                  ...register(\"name\", {\n                    required: \"field is required\",\n                    pattern: /^[A-Za-z]+$/i\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 21\n                }, this), ((_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.type) === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: errors.name.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 58\n                }, this), ((_errors$name2 = errors.name) === null || _errors$name2 === void 0 ? void 0 : _errors$name2.type) === 'pattern' && /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"enter in english\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 57\n                }, this), dirtyFields.name && /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"\\u2714\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 42\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"filled-basic\",\n                  label: \"password:\",\n                  type: \"password\",\n                  variant: \"filled\",\n                  onChange: e => setUser({\n                    tz: user.tz,\n                    fullName: user.fullName,\n                    password: e.target.value,\n                    telephone: user.telephone,\n                    address: user.address\n                  }),\n                  ...register(\"password\", {\n                    required: \"field is required\"\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 21\n                }, this), ((_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.type) === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: errors.password.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 61\n                }, this), dirtyFields.password && /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"\\u2714\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 46\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"filled-basic\",\n                  label: \"telephone:\",\n                  type: \"telephone\",\n                  variant: \"filled\",\n                  onChange: e => setUser({\n                    tz: user.tz,\n                    fullName: user.fullName,\n                    password: user.password,\n                    telephone: e.target.value,\n                    address: user.address\n                  }),\n                  ...register(\"telephone\", {\n                    required: 'enter a phone number',\n                    pattern: {\n                      value: /^[0-9]{10}$/,\n                      message: 'the phone number is incorrect'\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 21\n                }, this), errors.telephone && /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: errors.telephone.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 42\n                }, this), dirtyFields.telephone && /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"\\u2714\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 47\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"filled-basic\",\n                  label: \"address:\",\n                  variant: \"filled\",\n                  onChange: e => setUser({\n                    tz: user.tz,\n                    fullName: user.fullName,\n                    password: user.password,\n                    telephone: user.telephone,\n                    address: e.target.value\n                  }),\n                  ...register(\"name\", {\n                    required: \"field is required\",\n                    pattern: /^[A-Za-z]+$/i\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 21\n                }, this), ((_errors$address = errors.address) === null || _errors$address === void 0 ? void 0 : _errors$address.type) === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: errors.address.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 61\n                }, this), ((_errors$address2 = errors.address) === null || _errors$address2 === void 0 ? void 0 : _errors$address2.type) === 'pattern' && /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"enter in english\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 60\n                }, this), dirtyFields.name && /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"\\u2714\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 42\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\",\n                value: \"send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n};\n_s(SignIn, \"GcXpVi5HychB7usieGfYreqExpk=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useNavigate, useForm];\n});\n_c = SignIn;\nexport default SignIn;\n{/* // import * as React from 'react';\r\n // import Avatar from '@mui/material/Avatar';\r\n // import Button from '@mui/material/Button';\r\n // import CssBaseline from '@mui/material/CssBaseline';\r\n // import TextField from '@mui/material/TextField';\r\n // import FormControlLabel from '@mui/material/FormControlLabel';\r\n // import Checkbox from '@mui/material/Checkbox';\r\n // import Link from '@mui/material/Link';\r\n // import Grid from '@mui/material/Grid';\r\n // import Box from '@mui/material/Box';\r\n // import LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\n // import Typography from '@mui/material/Typography';\r\n // import Container from '@mui/material/Container';\r\n // import { createTheme, ThemeProvider } from '@mui/material/styles';\r\n // import { useSelector, useDispatch } from 'react-redux'\r\n // import { useNavigate } from \"react-router-dom\";\r\n // import {postUser} from '../../features/User/UserSlice';\r\n // import { Password } from '@mui/icons-material';\r\n // const defaultTheme = createTheme();\r\n \n // export default function SignIn() { */}\n\n//   let dis= useDispatch()\n\n//   let userAdd={\n//       tz:\"\",\n//       fullName:\"\",\n//       Password:\"\",\n//       telephone:\"\",\n//       city:\"\",\n//       street:\"\",\n//       houseNumber:\"\"\n//   }\n\n//       const add=(e)=>{\n//           e.preventDefault()// מבטל ברירת מחדל \n//           dis(postUser(userAdd))\n//       }\n//   return (\n// <ThemeProvider theme={defaultTheme} onSubmit={handleSubmit(onSubmit)}>\n//       <Container component=\"main\" maxWidth=\"xs\">\n//         <CssBaseline />\n//         <Box\n//           sx={{\n//             marginTop: 8,\n//             display: 'flex',\n//             flexDirection: 'column',\n//             alignItems: 'center',\n//           }}\n//         >\n//           <Avatar sx={{ m: 1, bgcolor: 'lightpink' }}>\n//             <LockOutlinedIcon />\n//           </Avatar>\n//           <Typography component=\"h1\" variant=\"h5\">\n//             Sign Up\n//           </Typography>\n//           <Box component=\"form\" noValidate \n//            sx={{ mt: 3 }}>\n//             <Grid container spacing={2}>\n//             <Grid item xs={12} sm={6}>\n//                 <TextField\n//                   autoComplete=\"given-name\"\n//                   name=\"tz\"\n//                   required\n//                   fullWidth\n//                   id=\"tz\"\n//                   label=\" tz\"\n//                   autoFocus\n//                   onChange={(e) => setUser({ tz: e.target.value, fullName:user.fullName, password: user.password, telephone:user.telephone ,city:user.city,street:user.street,houseNumber:user.houseNumber})}\n//                   {...register(\"tz\", { required: \"field is required\", pattern: /^\\d{9}$/ })}\n//                   InputLabelProps={{\n//                     style: { color: 'black' }, // Inline style for label\n//                   }}\n//                 />\n//               </Grid>\n//               <Grid item xs={12} sm={6}>\n//                 <TextField\n//                   autoComplete=\"given-name\"\n//                   name=\"fullName\"\n//                   required\n//                   fullWidth\n//                   id=\"fullName\"\n//                   label=\" fullName\"\n//                   autoFocus\n//                   onChange={(e) => setUser({ tz: user.tz, fullName:e.target.value, password: user.password, telephone:user.telephone ,city:user.city,street:user.street,houseNumber:user.houseNumber})}\n//                 {...register(\"name\", { required: \"field is required\", pattern: /^[A-Za-z]+$/i })}\n//                   InputLabelProps={{\n//                     style: { color: 'black' }, // Inline style for label\n//                   }}\n//                 />\n//               </Grid>\n//               <Grid item xs={12}>\n//                 <TextField\n//                   required\n//                   fullWidth\n//                   name=\"password\"\n//                   label=\"Password\"\n//                   type=\"password\"\n//                   id=\"password\"\n//                   autoComplete=\"new-password\"\n//                    onChange={(e) => setUser({ tz:user.tz,fullName:user.fullName, password:e.target.value, telephone:user.telephone ,city:user.city,street:user.street,houseNumber:user.houseNumber})}\n//                          {...register(\"password\",{required: \"field is required\"})}\n//                   InputLabelProps={{\n//                     style: { color: 'black' }, // Inline style for label\n//                   }}\n\n//                 />\n//               </Grid>\n//               <Grid item xs={12}>\n//                 <TextField\n//                   required\n//                   fullWidth\n//                   name=\"telephone\"\n//                   label=\"telephone\"\n//                   type=\"telephone\"\n//                   id=\"telephone\"\n//                   autoComplete=\"new-telephone\"\n//                   onChange={(e) => setUser({ tz: user.tz,fullName:user.fullName, password: user.password, telephone:e.target.value ,city:user.city,street:user.street,houseNumber:user.houseNumber})}\n//                                            {...register(\"telephone\", {\n//                                                required: 'enter a phone number',\n//                                                pattern: {\n//                                                    value: /^[0-9]{10}$/,\n//                                                    message: 'the phone number is incorrect',\n//                                                },\n//                                            })}\n//                   InputLabelProps={{\n//                     style: { color: 'black' }, // Inline style for label\n//                   }}\n\n//                 />\n//               </Grid>\n\n//               <Grid item xs={12}>\n//                 <TextField\n//                   required\n//                   fullWidth\n//                   name=\"city\"\n//                   label=\"city\"\n//                   type=\"city\"\n//                   id=\"city\"\n//                   autoComplete=\"new-city\"\n//                   onChange={(e) => setUser({ tz: user.tz, fullName:user.fullName, password: user.password, telephone:user.telephone ,city:e.target.value,street:user.street,houseNumber:user.houseNumber})}\n//                 {...register(\"name\", { required: \"field is required\", pattern: /^[A-Za-z]+$/i })}\n//                   InputLabelProps={{\n//                     style: { color: 'black' }, // Inline style for label\n//                   }}\n\n//                 />\n//               </Grid>\n//               <Grid item xs={12}>\n//                 <TextField\n//                   required\n//                   fullWidth\n//                   name=\"street\"\n//                   label=\"street\"\n//                   type=\"street\"\n//                   id=\"street\"\n//                   autoComplete=\"new-street\"\n//                   onChange={(e) => setUser({ tz: user.tz, fullName:user.fullName, password: user.password, telephone:user.telephone ,city:user.city,street:e.target.value,houseNumber:user.houseNumber})}\n//                 {...register(\"name\", { required: \"field is required\", pattern: /^[A-Za-z]+$/i })}\n//                   InputLabelProps={{\n//                     style: { color: 'black' }, // Inline style for label\n//                   }}\n\n//                 />\n//               </Grid>\n\n//               <Grid item xs={12}>\n//                 <TextField\n//                   required\n//                   fullWidth\n//                   name=\"houseNumber\"\n//                   label=\"houseNumber\"\n//                   type=\"houseNumber\"\n//                   id=\"houseNumber\"\n//                   autoComplete=\"new-houseNumber\"\n//                   onChange={(e) => setUser({ tz: user.tz,fullName:user.fullName, password: user.password, telephone:user.telephone ,city:user.city,street:user.street,houseNumber:e.target.value})}\n//                                            {...register(\"telephone\", {\n//                                                required: 'enter a phone number',\n//                                                pattern: {\n//                                                    value: /^[0-9]$/,\n//                                                    message: 'the number number is incorrect',\n//                                                },\n//                                            })}\n//                   InputLabelProps={{\n//                     style: { color: 'black' }, // Inline style for label\n//                   }}\n\n//                 />\n//               </Grid>\n//             </Grid>\n//             <Button\n//             color='inherit'\n//               type=\"submit\"\n//               fullWidth\n//               variant=\"contained\"\n//               sx={{ mt: 3, mb: 2, bgcolor:'lightpink' }}\n//             >\n//               Sign Up\n//             </Button>\n//             <Grid container justifyContent=\"flex-end\">\n//               <Grid item>\n//                 <Link  href=\"\\login\" style={{ color: 'pink' ,textDecoration:'none'}} >\n//                   Already have an account? Sign in\n//                 </Link>\n//               </Grid>\n//             </Grid>\n//           </Box>\n//         </Box>\n//       </Container>\n//     </ThemeProvider>\n//   );\n// }\n// export default SignIn;\nvar _c;\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"names":["useForm","TextField","React","useState","useDispatch","useSelector","useNavigate","Avatar","Button","CssBaseline","FormControlLabel","Checkbox","Link","Grid","Box","LockOutlinedIcon","Typography","Container","createTheme","ThemeProvider","Password","postUser","jsxDEV","_jsxDEV","Fragment","_Fragment","SignIn","_s","_errors$name","_errors$name2","_errors$password","_errors$address","_errors$address2","user","setUser","tz","fullName","password","telephone","arrU","x","users","arrUser","currentUser","u","dispatch","nav","defaultTheme","register","handleSubmit","getValues","formState","errors","dirtyFields","isValid","mode","onSubmit","data","city","street","houseNumber","console","log","children","theme","component","maxWidth","fileName","_jsxFileName","lineNumber","columnNumber","sx","marginTop","display","flexDirection","alignItems","m","bgcolor","variant","noValidate","mt","id","label","onChange","e","target","value","required","pattern","address","name","type","message","_c","$RefreshReg$"],"sources":["C:/Users/שיפי וינגרטן/Pictures/Saved Pictures/סמינר/כיתה יד/תכנות/react/פרויקט/finalproject/src/components/screens/user/SignIn.js"],"sourcesContent":["import { useForm } from \"react-hook-form\";\r\nimport TextField from '@mui/material/TextField';\r\nimport React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { Password } from '@mui/icons-material';\r\nimport { postUser} from '../../features//User/UserSlice';\r\n\r\nconst SignIn = () => {\r\n    const [user, setUser] = useState({ tz:\" \",fullName:\" \", password:\" \" ,telephone:\" \"});\r\n    const arrU = useSelector(x => x.users.arrUser);\r\n    const currentUser = useSelector(u => u.users.currentUser);\r\n    const dispatch = useDispatch();\r\n    const nav=useNavigate()\r\nconst defaultTheme = createTheme();\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        getValues,\r\n        formState: { errors, dirtyFields, isValid },\r\n    } = useForm({ mode: 'onBlur' });\r\n\r\n    const onSubmit = (data) => {\r\n       // event.preventDefault();\r\n        //const data = new FormData(event.currentTarget);\r\n        //dispatch(addUser({\"tz\":data.get('tz'), \"name\":data.get('name'), \"password\":data.get('password'),\"telephone\":data.get('telephone'), \"email\":data.get('email')}))//tz:data.tz, name:data.name, password:data.password, telephone:data.telephone, email:data.email\r\n        dispatch(postUser({tz:data.tz, fullName:data.fullName, password:data.password, telephone:data.telephone,city:data.city,street:data.street,houseNumber:data.houseNumber}))\r\n        console.log(\"add user\")\r\n        console.log(currentUser)\r\n         nav('/user')\r\n        // כאן תוכל להוסיף את הלוגיקה שלך לטיפול בהגשת הטופס\r\n        // לדוג', שליחת המידע לשרת או עדכון המצב באפליקציה\r\n    };\r\n\r\n    return (\r\n        <>\r\n\r\n<ThemeProvider theme={defaultTheme} onSubmit={handleSubmit(onSubmit)}>\r\n       <Container component=\"main\" maxWidth=\"xs\">\r\n         <CssBaseline />\r\n         <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: 'lightpink' }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign Up\r\n          </Typography>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n            <Box component=\"form\" onSubmit={handleSubmit(onSubmit)} noValidate sx={{ mt: 1 }}>\r\n\r\n                <div>\r\n                    <TextField\r\n                        id=\"filled-basic\"\r\n                        label=\"tz:\"\r\n                        variant=\"filled\"\r\n                        onChange={(e) => setUser({ tz: e.target.value, fullName:user.fullName, password: user.password, telephone:user.telephone })}\r\n                        {...register(\"tz\", { required: \"field is required\", pattern: /^\\d{9}$/ })}\r\n                    />\r\n                    {errors.tz && <p>The id number is incorrect</p>}\r\n                    {dirtyFields.tz && <p>✔️</p>}\r\n                </div>\r\n                <br />\r\n                <div>\r\n                    <TextField\r\n                        id=\"filled-basic\"\r\n                        label=\"name:\"\r\n                        variant=\"filled\"\r\n                        onChange={(e) => setUser({ tz: user.tz, fullName:e.target.value, password: user.password, telephone:user.telephone,address:user.address})}\r\n                        {...register(\"name\", { required: \"field is required\", pattern: /^[A-Za-z]+$/i })}\r\n                    />\r\n                    {errors.name?.type === 'required' && <p>{errors.name.message}</p>}\r\n                    {errors.name?.type === 'pattern' && <p>enter in english</p>}\r\n                    {dirtyFields.name && <p>✔️</p>}\r\n                </div>\r\n                <br />\r\n                <div>\r\n                    <TextField\r\n                        id=\"filled-basic\"\r\n                        label=\"password:\"\r\n                        type=\"password\"\r\n                        variant=\"filled\"\r\n                        onChange={(e) => setUser({ tz:user.tz,fullName:user.fullName, password:e.target.value, telephone:user.telephone ,address:user.address})}\r\n                        {...register(\"password\",{required: \"field is required\"})}\r\n                    />\r\n                   {errors.password?.type === 'required' && <p>{errors.password.message}</p>}\r\n                    {dirtyFields.password && <p>✔️</p>}\r\n                </div>\r\n                <br />\r\n                <div>\r\n                    <TextField\r\n                        id=\"filled-basic\"\r\n                        label=\"telephone:\"\r\n                        type=\"telephone\"\r\n                        variant=\"filled\"\r\n                        onChange={(e) => setUser({ tz: user.tz,fullName:user.fullName, password: user.password, telephone:e.target.value,address:user.address})}\r\n                        {...register(\"telephone\", {\r\n                            required: 'enter a phone number',\r\n                            pattern: {\r\n                                value: /^[0-9]{10}$/,\r\n                                message: 'the phone number is incorrect',\r\n                            },\r\n                        })}\r\n                    />\r\n                    {errors.telephone && <p>{errors.telephone.message}</p>}\r\n                    {dirtyFields.telephone && <p>✔️</p>}\r\n                </div>\r\n                <br />\r\n                <div>\r\n                    <TextField\r\n                        id=\"filled-basic\"\r\n                        label=\"address:\"\r\n                        variant=\"filled\"\r\n                        onChange={(e) => setUser({ tz: user.tz, fullName:user.fullName, password: user.password, telephone:user.telephone,address:e.target.value})}\r\n                        {...register(\"name\", { required: \"field is required\", pattern: /^[A-Za-z]+$/i })}\r\n                    />\r\n                    {errors.address?.type === 'required' && <p>{errors.address.message}</p>}\r\n                    {errors.address?.type === 'pattern' && <p>enter in english</p>}\r\n                    {dirtyFields.name && <p>✔️</p>}\r\n                </div>\r\n            \r\n\r\n                <br />\r\n                <input type=\"submit\" value={\"send\"}  />\r\n           </Box> \r\n            </form>   \r\n            </Box>  \r\n       </Container>\r\n     </ThemeProvider>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SignIn;\r\n\r\n{/* // import * as React from 'react';\r\n// import Avatar from '@mui/material/Avatar';\r\n// import Button from '@mui/material/Button';\r\n// import CssBaseline from '@mui/material/CssBaseline';\r\n// import TextField from '@mui/material/TextField';\r\n// import FormControlLabel from '@mui/material/FormControlLabel';\r\n// import Checkbox from '@mui/material/Checkbox';\r\n// import Link from '@mui/material/Link';\r\n// import Grid from '@mui/material/Grid';\r\n// import Box from '@mui/material/Box';\r\n// import LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\n// import Typography from '@mui/material/Typography';\r\n// import Container from '@mui/material/Container';\r\n// import { createTheme, ThemeProvider } from '@mui/material/styles';\r\n// import { useSelector, useDispatch } from 'react-redux'\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import {postUser} from '../../features/User/UserSlice';\r\n// import { Password } from '@mui/icons-material';\r\n// const defaultTheme = createTheme();\r\n\r\n// export default function SignIn() { */}\r\n\r\n//   let dis= useDispatch()\r\n\r\n//   let userAdd={\r\n//       tz:\"\",\r\n//       fullName:\"\",\r\n//       Password:\"\",\r\n//       telephone:\"\",\r\n//       city:\"\",\r\n//       street:\"\",\r\n//       houseNumber:\"\"\r\n//   }\r\n  \r\n//       const add=(e)=>{\r\n//           e.preventDefault()// מבטל ברירת מחדל \r\n//           dis(postUser(userAdd))\r\n//       }\r\n//   return (\r\n// <ThemeProvider theme={defaultTheme} onSubmit={handleSubmit(onSubmit)}>\r\n//       <Container component=\"main\" maxWidth=\"xs\">\r\n//         <CssBaseline />\r\n//         <Box\r\n//           sx={{\r\n//             marginTop: 8,\r\n//             display: 'flex',\r\n//             flexDirection: 'column',\r\n//             alignItems: 'center',\r\n//           }}\r\n//         >\r\n//           <Avatar sx={{ m: 1, bgcolor: 'lightpink' }}>\r\n//             <LockOutlinedIcon />\r\n//           </Avatar>\r\n//           <Typography component=\"h1\" variant=\"h5\">\r\n//             Sign Up\r\n//           </Typography>\r\n//           <Box component=\"form\" noValidate \r\n//            sx={{ mt: 3 }}>\r\n//             <Grid container spacing={2}>\r\n//             <Grid item xs={12} sm={6}>\r\n//                 <TextField\r\n//                   autoComplete=\"given-name\"\r\n//                   name=\"tz\"\r\n//                   required\r\n//                   fullWidth\r\n//                   id=\"tz\"\r\n//                   label=\" tz\"\r\n//                   autoFocus\r\n//                   onChange={(e) => setUser({ tz: e.target.value, fullName:user.fullName, password: user.password, telephone:user.telephone ,city:user.city,street:user.street,houseNumber:user.houseNumber})}\r\n//                   {...register(\"tz\", { required: \"field is required\", pattern: /^\\d{9}$/ })}\r\n//                   InputLabelProps={{\r\n//                     style: { color: 'black' }, // Inline style for label\r\n//                   }}\r\n//                 />\r\n//               </Grid>\r\n//               <Grid item xs={12} sm={6}>\r\n//                 <TextField\r\n//                   autoComplete=\"given-name\"\r\n//                   name=\"fullName\"\r\n//                   required\r\n//                   fullWidth\r\n//                   id=\"fullName\"\r\n//                   label=\" fullName\"\r\n//                   autoFocus\r\n//                   onChange={(e) => setUser({ tz: user.tz, fullName:e.target.value, password: user.password, telephone:user.telephone ,city:user.city,street:user.street,houseNumber:user.houseNumber})}\r\n//                 {...register(\"name\", { required: \"field is required\", pattern: /^[A-Za-z]+$/i })}\r\n//                   InputLabelProps={{\r\n//                     style: { color: 'black' }, // Inline style for label\r\n//                   }}\r\n//                 />\r\n//               </Grid>\r\n//               <Grid item xs={12}>\r\n//                 <TextField\r\n//                   required\r\n//                   fullWidth\r\n//                   name=\"password\"\r\n//                   label=\"Password\"\r\n//                   type=\"password\"\r\n//                   id=\"password\"\r\n//                   autoComplete=\"new-password\"\r\n//                    onChange={(e) => setUser({ tz:user.tz,fullName:user.fullName, password:e.target.value, telephone:user.telephone ,city:user.city,street:user.street,houseNumber:user.houseNumber})}\r\n//                          {...register(\"password\",{required: \"field is required\"})}\r\n//                   InputLabelProps={{\r\n//                     style: { color: 'black' }, // Inline style for label\r\n//                   }}\r\n                  \r\n//                 />\r\n//               </Grid>\r\n//               <Grid item xs={12}>\r\n//                 <TextField\r\n//                   required\r\n//                   fullWidth\r\n//                   name=\"telephone\"\r\n//                   label=\"telephone\"\r\n//                   type=\"telephone\"\r\n//                   id=\"telephone\"\r\n//                   autoComplete=\"new-telephone\"\r\n//                   onChange={(e) => setUser({ tz: user.tz,fullName:user.fullName, password: user.password, telephone:e.target.value ,city:user.city,street:user.street,houseNumber:user.houseNumber})}\r\n//                                            {...register(\"telephone\", {\r\n//                                                required: 'enter a phone number',\r\n//                                                pattern: {\r\n//                                                    value: /^[0-9]{10}$/,\r\n//                                                    message: 'the phone number is incorrect',\r\n//                                                },\r\n//                                            })}\r\n//                   InputLabelProps={{\r\n//                     style: { color: 'black' }, // Inline style for label\r\n//                   }}\r\n                  \r\n//                 />\r\n//               </Grid>\r\n\r\n//               <Grid item xs={12}>\r\n//                 <TextField\r\n//                   required\r\n//                   fullWidth\r\n//                   name=\"city\"\r\n//                   label=\"city\"\r\n//                   type=\"city\"\r\n//                   id=\"city\"\r\n//                   autoComplete=\"new-city\"\r\n//                   onChange={(e) => setUser({ tz: user.tz, fullName:user.fullName, password: user.password, telephone:user.telephone ,city:e.target.value,street:user.street,houseNumber:user.houseNumber})}\r\n//                 {...register(\"name\", { required: \"field is required\", pattern: /^[A-Za-z]+$/i })}\r\n//                   InputLabelProps={{\r\n//                     style: { color: 'black' }, // Inline style for label\r\n//                   }}\r\n                  \r\n//                 />\r\n//               </Grid>\r\n//               <Grid item xs={12}>\r\n//                 <TextField\r\n//                   required\r\n//                   fullWidth\r\n//                   name=\"street\"\r\n//                   label=\"street\"\r\n//                   type=\"street\"\r\n//                   id=\"street\"\r\n//                   autoComplete=\"new-street\"\r\n//                   onChange={(e) => setUser({ tz: user.tz, fullName:user.fullName, password: user.password, telephone:user.telephone ,city:user.city,street:e.target.value,houseNumber:user.houseNumber})}\r\n//                 {...register(\"name\", { required: \"field is required\", pattern: /^[A-Za-z]+$/i })}\r\n//                   InputLabelProps={{\r\n//                     style: { color: 'black' }, // Inline style for label\r\n//                   }}\r\n                  \r\n//                 />\r\n//               </Grid>\r\n\r\n//               <Grid item xs={12}>\r\n//                 <TextField\r\n//                   required\r\n//                   fullWidth\r\n//                   name=\"houseNumber\"\r\n//                   label=\"houseNumber\"\r\n//                   type=\"houseNumber\"\r\n//                   id=\"houseNumber\"\r\n//                   autoComplete=\"new-houseNumber\"\r\n//                   onChange={(e) => setUser({ tz: user.tz,fullName:user.fullName, password: user.password, telephone:user.telephone ,city:user.city,street:user.street,houseNumber:e.target.value})}\r\n//                                            {...register(\"telephone\", {\r\n//                                                required: 'enter a phone number',\r\n//                                                pattern: {\r\n//                                                    value: /^[0-9]$/,\r\n//                                                    message: 'the number number is incorrect',\r\n//                                                },\r\n//                                            })}\r\n//                   InputLabelProps={{\r\n//                     style: { color: 'black' }, // Inline style for label\r\n//                   }}\r\n                  \r\n//                 />\r\n//               </Grid>\r\n//             </Grid>\r\n//             <Button\r\n//             color='inherit'\r\n//               type=\"submit\"\r\n//               fullWidth\r\n//               variant=\"contained\"\r\n//               sx={{ mt: 3, mb: 2, bgcolor:'lightpink' }}\r\n//             >\r\n//               Sign Up\r\n//             </Button>\r\n//             <Grid container justifyContent=\"flex-end\">\r\n//               <Grid item>\r\n//                 <Link  href=\"\\login\" style={{ color: 'pink' ,textDecoration:'none'}} >\r\n//                   Already have an account? Sign in\r\n//                 </Link>\r\n//               </Grid>\r\n//             </Grid>\r\n//           </Box>\r\n//         </Box>\r\n//       </Container>\r\n//     </ThemeProvider>\r\n//   );\r\n// }\r\n// export default SignIn;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { getProducts, getProductByIdA, postProductA, putProductA, deleteProductA } from './ProductApi';\nconst initialState = {\n  arrProducts: [],\n  currentProduct: null,\n  status: \"idle\",\n  postStatus: \"idle\"\n};\nexport const fetchAllProducts = createAsyncThunk('product/fetchAllProducts', async (_, thunkAPI) => {\n  const res = await getProducts();\n  return res;\n});\nexport const getProductById = createAsyncThunk('product/getProductById', async (id, thunkAPI) => {\n  const res = await getProductByIdA(id);\n  return res;\n});\nexport const postProduct = createAsyncThunk('product/postProduct', async dataProduct => {\n  const res = await postProductA(dataProduct);\n  return res;\n});\nexport const putProduct = createAsyncThunk('product/putProduct', async ({\n  id,\n  newProduct\n}, thunkAPI) => {\n  const res = await putProductA(id, newProduct);\n  return res;\n});\nexport const deleteProduct = createAsyncThunk('product/deleteProduct', async (id, thunkAPI) => {\n  const res = await deleteProductA(id);\n  return res;\n});\nexport const ProductSlice = createSlice({\n  name: 'product',\n  initialState,\n  reducers: {\n    // setAllProducts: (state, action) => {\n    //     state.arrProduct = action.payload\n    // },\n    // updateProduct: (state, action) => {\n    //     let index = state.arrProduct.findIndex(x => x.id === action.payload.id)\n    //     state.arrProduct.splice(index, 1, action.payload)\n    // },\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchAllProducts.fulfilled, (state, {\n      payload\n    }) => {\n      state.arrProducts = payload;\n      state.status = \"fullfilled\";\n    })\n    // You can chain calls, or have separate `builder.addCase()` lines each time\n    .addCase(fetchAllProducts.pending, (state, action) => {\n      state.status = \"pending\";\n    }).addCase(fetchAllProducts.rejected, (state, action) => {\n      state.status = \"rejected\";\n    }).addCase(deleteProduct.fulfilled, (state, action) => {\n      state.allProducts = state.allProducts.filter(x => x.id !== action.payload);\n    }).addCase(putProduct.fulfilled, (state, action) => {\n      let index = state.allProducts.findIndex(x => x.id === action.payload.id);\n      if (index !== -1) {\n        state.allProducts[index] = action.payload;\n      }\n    });\n\n    // .addCase(postProduct.rejected, (state, action) => {\n    //     state.poststatus = \"rejected\"\n    //     console.log(state.poststatus)\n    // })\n  }\n});\n\n// export const {  updateProduct } = ProductSlice.actions\n\nexport default ProductSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","getProducts","getProductByIdA","postProductA","putProductA","deleteProductA","initialState","arrProducts","currentProduct","status","postStatus","fetchAllProducts","_","thunkAPI","res","getProductById","id","postProduct","dataProduct","putProduct","newProduct","deleteProduct","ProductSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","payload","pending","action","rejected","allProducts","filter","x","index","findIndex","reducer"],"sources":["C:/Users/שיפי וינגרטן/Pictures/Saved Pictures/סמינר/כיתה יד/תכנות/react/פרויקט/finalproject/src/components/features/Product/ProductSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { getProducts, getProductByIdA, postProductA, putProductA, deleteProductA } from './ProductApi';\r\n\r\nconst initialState = {\r\n    arrProducts: [],\r\n    currentProduct: null,\r\n    status: \"idle\",\r\n    postStatus: \"idle\"\r\n};\r\n\r\nexport const fetchAllProducts = createAsyncThunk(\r\n    'product/fetchAllProducts',\r\n    async (_, thunkAPI) => {\r\n        const res = await getProducts();\r\n        return res;\r\n    }\r\n);\r\n\r\nexport const getProductById = createAsyncThunk(\r\n    'product/getProductById',\r\n    async (id, thunkAPI) => {\r\n        const res = await getProductByIdA(id);\r\n        return res;\r\n    }\r\n);\r\n\r\nexport const postProduct = createAsyncThunk(\r\n    'product/postProduct',\r\n    async (dataProduct) => {\r\n        const res = await postProductA(dataProduct);\r\n        return res;\r\n    }\r\n);\r\n\r\nexport const putProduct = createAsyncThunk(\r\n    'product/putProduct',\r\n    async ({ id, newProduct }, thunkAPI) => {\r\n        const res = await putProductA(id,newProduct)\r\n        return res\r\n    },\r\n)\r\n\r\nexport const deleteProduct = createAsyncThunk(\r\n    'product/deleteProduct',\r\n    async (id,thunkAPI) => {\r\n        const res = await deleteProductA(id)\r\n        return res\r\n    },\r\n)\r\n\r\n\r\nexport const ProductSlice = createSlice({\r\n    name: 'product',\r\n    initialState,\r\n    reducers: {\r\n        // setAllProducts: (state, action) => {\r\n        //     state.arrProduct = action.payload\r\n        // },\r\n        // updateProduct: (state, action) => {\r\n        //     let index = state.arrProduct.findIndex(x => x.id === action.payload.id)\r\n        //     state.arrProduct.splice(index, 1, action.payload)\r\n        // },\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(fetchAllProducts.fulfilled, (state, { payload }) => {\r\n                state.arrProducts = payload\r\n                state.status = \"fullfilled\"\r\n            })\r\n            // You can chain calls, or have separate `builder.addCase()` lines each time\r\n            .addCase(fetchAllProducts.pending, (state, action) => {\r\n                state.status = \"pending\"\r\n            })\r\n            .addCase(fetchAllProducts.rejected, (state, action) => {\r\n                state.status = \"rejected\"\r\n            })\r\n            .addCase(deleteProduct.fulfilled, (state, action) => {\r\n                state.allProducts = state.allProducts.filter(x => x.id !== action.payload);\r\n            })\r\n\r\n            .addCase(putProduct.fulfilled, (state, action) => {\r\n                let index = state.allProducts.findIndex(x => x.id === action.payload.id);\r\n                if (index !== -1) {\r\n                    state.allProducts[index] = action.payload;\r\n                }\r\n            });\r\n\r\n            // .addCase(postProduct.rejected, (state, action) => {\r\n            //     state.poststatus = \"rejected\"\r\n            //     console.log(state.poststatus)\r\n            // })\r\n\r\n    },\r\n})\r\n\r\n\r\n// export const {  updateProduct } = ProductSlice.actions\r\n\r\nexport default ProductSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,SAASC,WAAW,EAAEC,eAAe,EAAEC,YAAY,EAAEC,WAAW,EAAEC,cAAc,QAAQ,cAAc;AAEtG,MAAMC,YAAY,GAAG;EACjBC,WAAW,EAAE,EAAE;EACfC,cAAc,EAAE,IAAI;EACpBC,MAAM,EAAE,MAAM;EACdC,UAAU,EAAE;AAChB,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAGX,gBAAgB,CAC5C,0BAA0B,EAC1B,OAAOY,CAAC,EAAEC,QAAQ,KAAK;EACnB,MAAMC,GAAG,GAAG,MAAMb,WAAW,CAAC,CAAC;EAC/B,OAAOa,GAAG;AACd,CACJ,CAAC;AAED,OAAO,MAAMC,cAAc,GAAGf,gBAAgB,CAC1C,wBAAwB,EACxB,OAAOgB,EAAE,EAAEH,QAAQ,KAAK;EACpB,MAAMC,GAAG,GAAG,MAAMZ,eAAe,CAACc,EAAE,CAAC;EACrC,OAAOF,GAAG;AACd,CACJ,CAAC;AAED,OAAO,MAAMG,WAAW,GAAGjB,gBAAgB,CACvC,qBAAqB,EACrB,MAAOkB,WAAW,IAAK;EACnB,MAAMJ,GAAG,GAAG,MAAMX,YAAY,CAACe,WAAW,CAAC;EAC3C,OAAOJ,GAAG;AACd,CACJ,CAAC;AAED,OAAO,MAAMK,UAAU,GAAGnB,gBAAgB,CACtC,oBAAoB,EACpB,OAAO;EAAEgB,EAAE;EAAEI;AAAW,CAAC,EAAEP,QAAQ,KAAK;EACpC,MAAMC,GAAG,GAAG,MAAMV,WAAW,CAACY,EAAE,EAACI,UAAU,CAAC;EAC5C,OAAON,GAAG;AACd,CACJ,CAAC;AAED,OAAO,MAAMO,aAAa,GAAGrB,gBAAgB,CACzC,uBAAuB,EACvB,OAAOgB,EAAE,EAACH,QAAQ,KAAK;EACnB,MAAMC,GAAG,GAAG,MAAMT,cAAc,CAACW,EAAE,CAAC;EACpC,OAAOF,GAAG;AACd,CACJ,CAAC;AAGD,OAAO,MAAMQ,YAAY,GAAGvB,WAAW,CAAC;EACpCwB,IAAI,EAAE,SAAS;EACfjB,YAAY;EACZkB,QAAQ,EAAE;IACN;IACA;IACA;IACA;IACA;IACA;IACA;EAAA,CACH;EACDC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAAChB,gBAAgB,CAACiB,SAAS,EAAE,CAACC,KAAK,EAAE;MAAEC;IAAQ,CAAC,KAAK;MACzDD,KAAK,CAACtB,WAAW,GAAGuB,OAAO;MAC3BD,KAAK,CAACpB,MAAM,GAAG,YAAY;IAC/B,CAAC;IACD;IAAA,CACCkB,OAAO,CAAChB,gBAAgB,CAACoB,OAAO,EAAE,CAACF,KAAK,EAAEG,MAAM,KAAK;MAClDH,KAAK,CAACpB,MAAM,GAAG,SAAS;IAC5B,CAAC,CAAC,CACDkB,OAAO,CAAChB,gBAAgB,CAACsB,QAAQ,EAAE,CAACJ,KAAK,EAAEG,MAAM,KAAK;MACnDH,KAAK,CAACpB,MAAM,GAAG,UAAU;IAC7B,CAAC,CAAC,CACDkB,OAAO,CAACN,aAAa,CAACO,SAAS,EAAE,CAACC,KAAK,EAAEG,MAAM,KAAK;MACjDH,KAAK,CAACK,WAAW,GAAGL,KAAK,CAACK,WAAW,CAACC,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACpB,EAAE,KAAKgB,MAAM,CAACF,OAAO,CAAC;IAC9E,CAAC,CAAC,CAEDH,OAAO,CAACR,UAAU,CAACS,SAAS,EAAE,CAACC,KAAK,EAAEG,MAAM,KAAK;MAC9C,IAAIK,KAAK,GAAGR,KAAK,CAACK,WAAW,CAACI,SAAS,CAACF,CAAC,IAAIA,CAAC,CAACpB,EAAE,KAAKgB,MAAM,CAACF,OAAO,CAACd,EAAE,CAAC;MACxE,IAAIqB,KAAK,KAAK,CAAC,CAAC,EAAE;QACdR,KAAK,CAACK,WAAW,CAACG,KAAK,CAAC,GAAGL,MAAM,CAACF,OAAO;MAC7C;IACJ,CAAC,CAAC;;IAEF;IACA;IACA;IACA;EAER;AACJ,CAAC,CAAC;;AAGF;;AAEA,eAAeR,YAAY,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
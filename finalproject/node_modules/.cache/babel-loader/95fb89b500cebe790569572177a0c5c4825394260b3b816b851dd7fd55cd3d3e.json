{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { getProducts, getProductByIdA, postProductA, putProductA, deleteProductA } from './ProductApi';\nconst initialState = {\n  arrProducts: [],\n  currentProduct: null,\n  status: \"idle\",\n  postStatus: \"idle\",\n  error: null\n};\nexport const fetchAllProducts = createAsyncThunk('product/fetchAllProducts', async (_, thunkAPI) => {\n  const res = await getProducts();\n  return res;\n});\nexport const getProductById = createAsyncThunk('product/getProductById', async (id, thunkAPI) => {\n  const res = await getProductByIdA(id);\n  return res;\n});\nexport const postProduct = createAsyncThunk('product/postProduct', async dataProduct => {\n  const res = await postProductA(dataProduct);\n  return res;\n});\nexport const updateProduct = createAsyncThunk('product/updateProduct', async (product, thunkAPI) => {\n  const res = await axios.put(`http://localhost:4000/product/${product.id}`, product);\n  return res.data;\n});\nexport const removeProduct = createAsyncThunk('product/removeProduct', async (id, thunkAPI) => {\n  await axios.delete(`http://localhost:4000/product/${id}`);\n  return id;\n});\nexport const ProductSlice = createSlice({\n  name: 'product',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchAllProducts.fulfilled, (state, {\n      payload\n    }) => {\n      state.arrProducts = payload;\n      state.status = \"fulfilled\";\n    }).addCase(fetchAllProducts.pending, (state, action) => {\n      state.status = \"pending\";\n    }).addCase(fetchAllProducts.rejected, (state, action) => {\n      state.status = \"rejected\";\n      state.error = action.error.message;\n    }).addCase(removeProduct.fulfilled, (state, {\n      payload\n    }) => {\n      state.arrProducts = state.arrProducts.filter(x => x.id !== payload);\n    }).addCase(updateProduct.fulfilled, (state, {\n      payload\n    }) => {\n      const index = state.arrProducts.findIndex(x => x.id === payload.id);\n      if (index !== -1) {\n        state.arrProducts[index] = payload;\n      }\n    }).addCase(postProduct.fulfilled, (state, {\n      payload\n    }) => {\n      state.arrProducts.push(payload);\n    }).addCase(postProduct.rejected, (state, action) => {\n      state.postStatus = \"rejected\";\n      state.error = action.error.message;\n    });\n  }\n});\nexport default ProductSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","getProducts","getProductByIdA","postProductA","putProductA","deleteProductA","initialState","arrProducts","currentProduct","status","postStatus","error","fetchAllProducts","_","thunkAPI","res","getProductById","id","postProduct","dataProduct","updateProduct","product","put","data","removeProduct","delete","ProductSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","payload","pending","action","rejected","message","filter","x","index","findIndex","push","reducer"],"sources":["C:/Users/שיפי וינגרטן/Pictures/Saved Pictures/סמינר/כיתה יד/תכנות/react/פרויקט/finalproject/src/components/features/Product/ProductSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport { getProducts, getProductByIdA, postProductA, putProductA, deleteProductA } from './ProductApi';\r\n\r\nconst initialState = {\r\n    arrProducts: [],\r\n    currentProduct: null,\r\n    status: \"idle\",\r\n    postStatus: \"idle\",\r\n    error: null,\r\n};\r\n\r\nexport const fetchAllProducts = createAsyncThunk(\r\n    'product/fetchAllProducts',\r\n    async (_, thunkAPI) => {\r\n        const res = await getProducts();\r\n        return res;\r\n    }\r\n);\r\n\r\nexport const getProductById = createAsyncThunk(\r\n    'product/getProductById',\r\n    async (id, thunkAPI) => {\r\n        const res = await getProductByIdA(id);\r\n        return res;\r\n    }\r\n);\r\n\r\nexport const postProduct = createAsyncThunk(\r\n    'product/postProduct',\r\n    async (dataProduct) => {\r\n        const res = await postProductA(dataProduct);\r\n        return res;\r\n    }\r\n);\r\n\r\nexport const updateProduct = createAsyncThunk(\r\n    'product/updateProduct',\r\n    async (product, thunkAPI) => {\r\n        const res = await axios.put(`http://localhost:4000/product/${product.id}`, product);\r\n        return res.data;\r\n    }\r\n);\r\n\r\nexport const removeProduct = createAsyncThunk(\r\n    'product/removeProduct',\r\n    async (id, thunkAPI) => {\r\n        await axios.delete(`http://localhost:4000/product/${id}`);\r\n        return id;\r\n    }\r\n);\r\n\r\nexport const ProductSlice = createSlice({\r\n    name: 'product',\r\n    initialState,\r\n    reducers: {},\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(fetchAllProducts.fulfilled, (state, { payload }) => {\r\n                state.arrProducts = payload;\r\n                state.status = \"fulfilled\";\r\n            })\r\n            .addCase(fetchAllProducts.pending, (state, action) => {\r\n                state.status = \"pending\";\r\n            })\r\n            .addCase(fetchAllProducts.rejected, (state, action) => {\r\n                state.status = \"rejected\";\r\n                state.error = action.error.message;\r\n            })\r\n            .addCase(removeProduct.fulfilled, (state, { payload }) => {\r\n                state.arrProducts = state.arrProducts.filter(x => x.id !==\r\n                    payload);\r\n                })\r\n                .addCase(updateProduct.fulfilled, (state, { payload }) => {\r\n                    const index = state.arrProducts.findIndex(x => x.id === payload.id);\r\n                    if (index !== -1) {\r\n                        state.arrProducts[index] = payload;\r\n                    }\r\n                })\r\n                .addCase(postProduct.fulfilled, (state, { payload }) => {\r\n                    state.arrProducts.push(payload);\r\n                })\r\n                .addCase(postProduct.rejected, (state, action) => {\r\n                    state.postStatus = \"rejected\";\r\n                    state.error = action.error.message;\r\n                });\r\n        },\r\n    });\r\n    \r\n    export default ProductSlice.reducer;\r\n    "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { createSlice, nanoid, createAsyncThunk } from '@reduxjs/toolkit';\nimport { getOrders, getOrderByIdA, postOrderA, deleteOrderA } from './OrderApi';\nconst initialState = {\n  arrOrders: [],\n  currentOrder: null,\n  status: \"idle\",\n  cart: []\n};\nexport const fetchAllOrders = createAsyncThunk('order/fetchAllOrders', async thunkAPI => {\n  const res = await getOrders();\n  return res;\n});\nexport const getOrderById = createAsyncThunk('order/getOrderById', async (id, thunkAPI) => {\n  const res = await getOrderByIdA(id);\n  return res;\n});\nexport const postOrder = createAsyncThunk('order/postOrder', async (newOrder, thunkAPI) => {\n  const res = await postOrderA(newOrder);\n  return res;\n});\nexport const deleteOrder = createAsyncThunk('order/deleteOrder', async (id, thunkAPI) => {\n  const res = await deleteOrderA(id);\n  return res;\n});\nexport const OrderSlice = createSlice({\n  name: 'order',\n  initialState,\n  reducers: {\n    addToShoppingCart: (state, action) => {\n      const existingProduct = state.cart.find(item => item.p.id === action.payload.p.id);\n      if (existingProduct) {\n        existingProduct.quantity += action.payload.quantity;\n      } else {\n        state.cart = [...state.cart, action.payload];\n      }\n      state.price += action.payload.quantity * action.payload.p.price;\n    },\n    removeFromShoppingCart: (state, action) => {\n      const productToRemove = state.cart.find(item => item.p.id === action.payload.p.id);\n      if (productToRemove) {\n        state.cart = state.cart.filter(item => item !== productToRemove);\n        state.price -= productToRemove.quantity * productToRemove.p.price;\n      }\n      emptyCart: (state, action) => {\n        state.cart = [];\n        state.price = 0;\n      };\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchAllOrders.fulfilled, (state, {\n      payload\n    }) => {\n      state.arrOrders = payload;\n      state.status = \"fullfilled\";\n    })\n    // You can chain calls, or have separate `builder.addCase()` lines each time\n    .addCase(fetchAllOrders.pending, (state, action) => {\n      state.status = \"pending\";\n    }).addCase(fetchAllOrders.rejected, (state, action) => {\n      state.status = \"rejected\";\n    }).addCase(postOrder.fulfilled, (state, {\n      payload\n    }) => {\n      state.currentOrder = payload;\n      state.status = \"fullfilled\";\n      console.log(state.currentOrder);\n    });\n  }\n});\n\n// export const {  updateProduct } = OrderSlice.actions\nexport const {\n  addToShoppingCart,\n  emptyCart,\n  removeFromShoppingCart\n} = OrderSlice.actions;\nexport default OrderSlice.reducer;","map":{"version":3,"names":["createSlice","nanoid","createAsyncThunk","getOrders","getOrderByIdA","postOrderA","deleteOrderA","initialState","arrOrders","currentOrder","status","cart","fetchAllOrders","thunkAPI","res","getOrderById","id","postOrder","newOrder","deleteOrder","OrderSlice","name","reducers","addToShoppingCart","state","action","existingProduct","find","item","p","payload","quantity","price","removeFromShoppingCart","productToRemove","filter","emptyCart","extraReducers","builder","addCase","fulfilled","pending","rejected","console","log","actions","reducer"],"sources":["C:/Users/שיפי וינגרטן/Pictures/Saved Pictures/סמינר/כיתה יד/תכנות/react/פרויקט/finalproject/src/components/features/Order/OrderSlice.js"],"sourcesContent":["import { createSlice, nanoid ,createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { getOrders,getOrderByIdA,postOrderA,deleteOrderA } from './OrderApi'\r\n\r\nconst initialState = {\r\n    arrOrders: [],\r\n    currentOrder:null,\r\n    status: \"idle\",\r\n    cart:[],\r\n}\r\n\r\nexport const fetchAllOrders = createAsyncThunk(\r\n    'order/fetchAllOrders',\r\n    async (thunkAPI) => {\r\n        const res = await getOrders()\r\n        return res\r\n    },\r\n)\r\n\r\nexport const getOrderById = createAsyncThunk(\r\n    'order/getOrderById',\r\n    async (id,thunkAPI) => {\r\n        const res = await getOrderByIdA(id)\r\n        return res\r\n    },\r\n)\r\n\r\nexport const postOrder = createAsyncThunk(\r\n    'order/postOrder',\r\n    async (newOrder,thunkAPI) => {\r\n        const res = await postOrderA(newOrder)\r\n        return res\r\n    },\r\n)\r\n\r\nexport const deleteOrder = createAsyncThunk(\r\n    'order/deleteOrder',\r\n    async (id,thunkAPI) => {\r\n        const res = await deleteOrderA(id)\r\n        return res\r\n    },\r\n)\r\n\r\n\r\n\r\nexport const OrderSlice = createSlice({\r\n    name: 'order',\r\n    initialState,\r\n    reducers: {\r\n        addToShoppingCart: (state, action) => {\r\n            const existingProduct = state.cart.find(item => item.p.id === action.payload.p.id);\r\n            if (existingProduct) {\r\n                existingProduct.quantity += action.payload.quantity\r\n            } else {\r\n                state.cart = [...state.cart, action.payload]\r\n            }\r\n            state.price += action.payload.quantity * action.payload.p.price\r\n\r\n        },\r\n        removeFromShoppingCart: (state, action) => {\r\n            const productToRemove = state.cart.find(item => item.p.id === action.payload.p.id);\r\n            if (productToRemove) {\r\n                state.cart = state.cart.filter(item => item !== productToRemove);\r\n                state.price -= productToRemove.quantity * productToRemove.p.price;\r\n            }\r\n            emptyCart: (state, action) => { \r\n                state.cart=[]\r\n                state.price=0\r\n            }\r\n    }},\r\n    \r\n    extraReducers: (builder) => {\r\n        builder\r\n        .addCase(fetchAllOrders.fulfilled, (state, { payload }) => {\r\n            state.arrOrders = payload\r\n            state.status = \"fullfilled\"\r\n        })\r\n        // You can chain calls, or have separate `builder.addCase()` lines each time\r\n        .addCase(fetchAllOrders.pending, (state, action) => {\r\n            state.status = \"pending\"\r\n        })\r\n        .addCase(fetchAllOrders.rejected, (state, action) => {\r\n            state.status = \"rejected\"\r\n        })\r\n        .addCase(postOrder.fulfilled, (state, {payload}) => {\r\n            state.currentOrder = payload\r\n            state.status = \"fullfilled\"\r\n            console.log(state.currentOrder)\r\n        })\r\n\r\n    },\r\n})\r\n\r\n\r\n// export const {  updateProduct } = OrderSlice.actions\r\nexport const { addToShoppingCart,emptyCart ,removeFromShoppingCart} = OrderSlice.actions\r\n\r\nexport default OrderSlice.reducer"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
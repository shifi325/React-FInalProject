{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05E9\\u05D9\\u05E4\\u05D9 \\u05D5\\u05D9\\u05E0\\u05D2\\u05E8\\u05D8\\u05DF\\\\Pictures\\\\Saved Pictures\\\\\\u05E1\\u05DE\\u05D9\\u05E0\\u05E8\\\\\\u05DB\\u05D9\\u05EA\\u05D4 \\u05D9\\u05D3\\\\\\u05EA\\u05DB\\u05E0\\u05D5\\u05EA\\\\react\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05E7\\u05D8\\\\finalproject\\\\src\\\\components\\\\screens\\\\products\\\\AddProduct.js\",\n  _s = $RefreshSig$();\n// import { useForm } from \"react-hook-form\";\n// import TextField from '@mui/material/TextField';\n// import React, { useState } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { useNavigate } from \"react-router-dom\";\n// import Avatar from '@mui/material/Avatar';\n// import Button from '@mui/material/Button';\n// import CssBaseline from '@mui/material/CssBaseline';\n// import FormControlLabel from '@mui/material/FormControlLabel';\n// import Checkbox from '@mui/material/Checkbox';\n// import Link from '@mui/material/Link';\n// import Grid from '@mui/material/Grid';\n// import Box from '@mui/material/Box';\n// import LockOutlinedIcon from '@mui/icons-material/LockOutlined';\n// import Typography from '@mui/material/Typography';\n// import Container from '@mui/material/Container';\n// import { createTheme, ThemeProvider } from '@mui/material/styles';\n// import { Password } from '@mui/icons-material';\n// import { postProduct} from '../../features/Product/ProductSlice';\n\n// const AddProduct = () => {\n//     const [product, setproduct] = useState({ name:\" \", description:\" \" ,price:\" \",imgUrl:\"\"});\n//     const arrP = useSelector(x => x.products.arrProducts);\n//     const currentP = useSelector(u => u.products.currentproduct);\n//     const dispatch = useDispatch();\n//     const nav=useNavigate()\n// const defaultTheme = createTheme();\n\n//     const {\n//         register,\n//         handleSubmit,\n//         getValues,\n//         formState: { errors, dirtyFields, isValid },\n//     } = useForm({ mode: 'onBlur' });\n\n//     const onSubmit = (data) => {\n\n//         dispatch(postProduct({name:data.name, description:data.description, price:data.price,imgUrl:data.imgUrl}))\n//         console.log(currentP)\n//          nav('/ProductList')\n//         // כאן תוכל להוסיף את הלוגיקה שלך לטיפול בהגשת הטופס\n//         // לדוג', שליחת המידע לשרת או עדכון המצב באפליקציה\n//     };\n\n//     return (\n//         <Box\n//         sx={{\n//           marginTop: 8,\n//           display: 'flex',\n//           flexDirection: 'column',\n//           alignItems: 'center',\n//         }}\n//       >\n//         <Avatar sx={{ m: 1, bgcolor: 'lightpink' }}>\n//           {/* <LockOutlinedIcon /> */}\n//         </Avatar>\n//         <Typography component=\"h1\" variant=\"h5\" >\n//           add product\n//         </Typography>\n// <Box sx={{ maxWidth: 400, margin: 'auto', padding: 3, boxShadow: 3 }}>\n// <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n// </Typography>         \n//             <form onSubmit={onSubmit}>\n\n//                 <>\n//                     <TextField\n//                         id=\"filled-basic\"\n//                         label=\"name:\"\n//                         variant=\"outlined\"\n//                         fullWidth\n//                         margin=\"normal\"                        onChange={(e) => setproduct({ name:e.target.value, description: product.description, price:product.price,imgUrl:product.imgUrl})}\n//                         {...register(\"name\", { required: \"field is required\", pattern: /^[A-Za-z]+$/i })}\n//                     />\n//                     {errors.name?.type === 'required' && <p>{errors.name.message}</p>}\n//                     {errors.name?.type === 'pattern' && <p>enter in english</p>}\n//                     {dirtyFields.name && <p>✔️</p>}\n//                 </>\n//                 <>\n//                     <TextField\n//                         id=\"filled-basic\"\n//                         label=\"description:\"\n//                         type=\"description\"\n//                         variant=\"outlined\"\n//                         fullWidth\n//                         margin=\"normal\"                        onChange={(e) => setproduct({ name:product.name, description:e.target.value, price:product.price,imgUrl:product.imgUrl})}\n//                         {...register(\"description\",{required: \"field is required\"})}\n//                     />\n//                    {errors.description?.type === 'required' && <p>{errors.description.message}</p>}\n//                     {dirtyFields.description && <p>✔️</p>}\n//                 </>\n//                 <>\n//                     <TextField\n//                         id=\"filled-basic\"\n//                         label=\"price:\"\n//                         type=\"price\"\n//                         variant=\"outlined\"\n//                         fullWidth\n//                         margin=\"normal\"                        \n//                         onChange={(e) => setproduct({ name:product.name, description: product.description, price:e.target.value,imgUrl:product.imgUrl})}\n//                         {...register(\"price\", {\n//                             required: 'enter a price number',\n\n//                         })}\n//                     />\n//                     {errors.price && <p>{errors.price.message}</p>}\n//                     {dirtyFields.price && <p>✔️</p>}\n//                 </>\n//                 <>\n//                     <TextField\n//                               variant=\"outlined\"\n//                               fullWidth\n//                               margin=\"normal\"\n//                         id=\"filled-basic\"\n//                         label=\"imgUrl:\"\n//                         onChange={(e) => setproduct({ name:product.name, description: product.description, price:product.price,imgUrl:e.target.value})}\n//                         {...register(\"imgUrl\", { required: \"field is required\", pattern: /^[A-Za-z]+$/i })}\n//                     />\n//                     {errors.imgUrl?.type === 'required' && <p>{errors.imgUrl.message}</p>}\n//                     {errors.imgUrl?.type === 'pattern' && <p>enter in english</p>}\n//                     {dirtyFields.imgUrl && <p>✔️</p>}\n//                 </>\n\n//                 <Button\n//               color='inherit'\n//               type=\"submit\"\n//               fullWidth\n//               variant=\"contained\"\n//               sx={{ mt: 3, mb: 2,bgcolor:'lightpink' }}\n//             >\n//               Sign In\n//             </Button> \n//                        </form>\n//             </Box>            </Box>\n\n//     );\n// }\n\n// export default AddProduct;\n\n// // import * as React from 'react';\n// // import Avatar from '@mui/material/Avatar';\n// // import Button from '@mui/material/Button';\n// // import CssBaseline from '@mui/material/CssBaseline';\n// // import TextField from '@mui/material/TextField';\n// // import FormControlLabel from '@mui/material/FormControlLabel';\n// // import Checkbox from '@mui/material/Checkbox';\n// // import Link from '@mui/material/Link';\n// // import Grid from '@mui/material/Grid';\n// // import Box from '@mui/material/Box';\n// // import LockOutlinedIcon from '@mui/icons-material/LockOutlined';\n// // import Typography from '@mui/material/Typography';\n// // import Container from '@mui/material/Container';\n// // import { createTheme, ThemeProvider } from '@mui/material/styles';\n// // import { useSelector, useDispatch } from 'react-redux'\n// // import { useNavigate } from \"react-router-dom\";\n// // import {postUser} from '../../features/User/UserSlice';\n// // import { Password } from '@mui/icons-material';\n// // const defaultTheme = createTheme();\n\n// // export default function SignIn() {\n\n// //   let dis= useDispatch()\n\n// //   let userAdd={\n// //       tz:\"\",\n// //       name:\"\",\n// //       Password:\"\",\n// //       telephone:\"\",\n// //       city:\"\",\n// //       street:\"\",\n// //       houseNumber:\"\"\n// //   }\n\n// //       const add=(e)=>{\n// //           e.preventDefault()// מבטל ברירת מחדל \n// //           dis(postUser(userAdd))\n// //       }\n// //   return (\n// // <ThemeProvider theme={defaultTheme} onSubmit={handleSubmit(onSubmit)}>\n// //       <Container component=\"main\" maxWidth=\"xs\">\n// //         <CssBaseline />\n// //         <Box\n// //           sx={{\n// //             marginTop: 8,\n// //             display: 'flex',\n// //             flexDirection: 'column',\n// //             alignItems: 'center',\n// //           }}\n// //         >\n// //           <Avatar sx={{ m: 1, bgcolor: 'lightpink' }}>\n// //             <LockOutlinedIcon />\n// //           </Avatar>\n// //           <Typography component=\"h1\" variant=\"h5\">\n// //             Sign Up\n// //           </Typography>\n// //           <Box component=\"form\" noValidate \n// //            sx={{ mt: 3 }}>\n// //             <Grid container spacing={2}>\n// //             <Grid item xs={12} sm={6}>\n// //                 <TextField\n// //                   autoComplete=\"given-name\"\n// //                   name=\"tz\"\n// //                   required\n// //                   fullWidth\n// //                   id=\"tz\"\n// //                   label=\" tz\"\n// //                   autoFocus\n// //                   onChange={(e) => setUser({ tz: e.target.value, name:user.name, password: user.password, telephone:user.telephone ,city:user.city,street:user.street,houseNumber:user.houseNumber})}\n// //                   {...register(\"tz\", { required: \"field is required\", pattern: /^\\d{9}$/ })}\n// //                   InputLabelProps={{\n// //                     style: { color: 'black' }, // Inline style for label\n// //                   }}\n// //                 />\n// //               </Grid>\n// //               <Grid item xs={12} sm={6}>\n// //                 <TextField\n// //                   autoComplete=\"given-name\"\n// //                   name=\"name\"\n// //                   required\n// //                   fullWidth\n// //                   id=\"name\"\n// //                   label=\" name\"\n// //                   autoFocus\n// //                   onChange={(e) => setUser({ tz: user.tz, name:e.target.value, password: user.password, telephone:user.telephone ,city:user.city,street:user.street,houseNumber:user.houseNumber})}\n// //                 {...register(\"name\", { required: \"field is required\", pattern: /^[A-Za-z]+$/i })}\n// //                   InputLabelProps={{\n// //                     style: { color: 'black' }, // Inline style for label\n// //                   }}\n// //                 />\n// //               </Grid>\n// //               <Grid item xs={12}>\n// //                 <TextField\n// //                   required\n// //                   fullWidth\n// //                   name=\"password\"\n// //                   label=\"Password\"\n// //                   type=\"password\"\n// //                   id=\"password\"\n// //                   autoComplete=\"new-password\"\n// //                    onChange={(e) => setUser({ tz:user.tz,name:user.name, password:e.target.value, telephone:user.telephone ,city:user.city,street:user.street,houseNumber:user.houseNumber})}\n// //                          {...register(\"password\",{required: \"field is required\"})}\n// //                   InputLabelProps={{\n// //                     style: { color: 'black' }, // Inline style for label\n// //                   }}\n\n// //                 />\n// //               </Grid>\n// //               <Grid item xs={12}>\n// //                 <TextField\n// //                   required\n// //                   fullWidth\n// //                   name=\"telephone\"\n// //                   label=\"telephone\"\n// //                   type=\"telephone\"\n// //                   id=\"telephone\"\n// //                   autoComplete=\"new-telephone\"\n// //                   onChange={(e) => setUser({ tz: user.tz,name:user.name, password: user.password, telephone:e.target.value ,city:user.city,street:user.street,houseNumber:user.houseNumber})}\n// //                                            {...register(\"telephone\", {\n// //                                                required: 'enter a phone number',\n// //                                                pattern: {\n// //                                                    value: /^[0-9]{10}$/,\n// //                                                    message: 'the phone number is incorrect',\n// //                                                },\n// //                                            })}\n// //                   InputLabelProps={{\n// //                     style: { color: 'black' }, // Inline style for label\n// //                   }}\n\n// //                 />\n// //               </Grid>\n\n// //               <Grid item xs={12}>\n// //                 <TextField\n// //                   required\n// //                   fullWidth\n// //                   name=\"city\"\n// //                   label=\"city\"\n// //                   type=\"city\"\n// //                   id=\"city\"\n// //                   autoComplete=\"new-city\"\n// //                   onChange={(e) => setUser({ tz: user.tz, name:user.name, password: user.password, telephone:user.telephone ,city:e.target.value,street:user.street,houseNumber:user.houseNumber})}\n// //                 {...register(\"name\", { required: \"field is required\", pattern: /^[A-Za-z]+$/i })}\n// //                   InputLabelProps={{\n// //                     style: { color: 'black' }, // Inline style for label\n// //                   }}\n\n// //                 />\n// //               </Grid>\n// //               <Grid item xs={12}>\n// //                 <TextField\n// //                   required\n// //                   fullWidth\n// //                   name=\"street\"\n// //                   label=\"street\"\n// //                   type=\"street\"\n// //                   id=\"street\"\n// //                   autoComplete=\"new-street\"\n// //                   onChange={(e) => setUser({ tz: user.tz, name:user.name, password: user.password, telephone:user.telephone ,city:user.city,street:e.target.value,houseNumber:user.houseNumber})}\n// //                 {...register(\"name\", { required: \"field is required\", pattern: /^[A-Za-z]+$/i })}\n// //                   InputLabelProps={{\n// //                     style: { color: 'black' }, // Inline style for label\n// //                   }}\n\n// //                 />\n// //               </Grid>\n\n// //               <Grid item xs={12}>\n// //                 <TextField\n// //                   required\n// //                   fullWidth\n// //                   name=\"houseNumber\"\n// //                   label=\"houseNumber\"\n// //                   type=\"houseNumber\"\n// //                   id=\"houseNumber\"\n// //                   autoComplete=\"new-houseNumber\"\n// //                   onChange={(e) => setUser({ tz: user.tz,name:user.name, password: user.password, telephone:user.telephone ,city:user.city,street:user.street,houseNumber:e.target.value})}\n// //                                            {...register(\"telephone\", {\n// //                                                required: 'enter a phone number',\n// //                                                pattern: {\n// //                                                    value: /^[0-9]$/,\n// //                                                    message: 'the number number is incorrect',\n// //                                                },\n// //                                            })}\n// //                   InputLabelProps={{\n// //                     style: { color: 'black' }, // Inline style for label\n// //                   }}\n\n// //                 />\n// //               </Grid>\n// //             </Grid>\n// //             <Button\n// //             color='inherit'\n// //               type=\"submit\"\n// //               fullWidth\n// //               variant=\"contained\"\n// //               sx={{ mt: 3, mb: 2, bgcolor:'lightpink' }}\n// //             >\n// //               Sign Up\n// //             </Button>\n// //             <Grid container justifyContent=\"flex-end\">\n// //               <Grid item>\n// //                 <Link  href=\"\\login\" style={{ color: 'pink' ,textDecoration:'none'}} >\n// //                   Already have an account? Sign in\n// //                 </Link>\n// //               </Grid>\n// //             </Grid>\n// //           </Box>\n// //         </Box>\n// //       </Container>\n// //     </ThemeProvider>\n// //   );\n// // }\n// // export default SignIn;\n\n// // import TextField from '@mui/material/TextField';\n// // import { useDispatch } from 'react-redux';\n// // import { postProduct  } from '../../features/Product/ProductSlice'\n// // import React, { useState } from 'react';\n// // import { useForm } from 'react-hook-form';\n\n// // import { useNavigate } from \"react-router-dom\";\n\n// // const {\n// //   register,\n// //   handleSubmit,\n// //   getValues,\n// //   formState: { errors, dirtyFields, isValid },\n// // } = useForm({ mode: 'onBlur' });\n// // const  AddProduct= (prop) => {\n// //     let productToAdd={\n// //         name:\" \",\n// //         description:\" \",\n// //         price:\" \",\n// //         imgUrl:\" \"\n// //     }\n// //     let dispatch=useDispatch()\n// //     const add=(e)=>{\n// //         e.preventDefault() \n// //         dispatch(postProduct(productToAdd))\n// //         console.log(\"add user\")\n\n// //     }\n// //     return (<form onSubmit={handleSubmit(add)}>\n// //        <TextField id=\"filled-basic\" label=\"name\" variant=\"filled\" onChange={(e)=>productToAdd.name=e.target.value} />\n// //        <TextField id=\"filled-basic\" label=\"description\" variant=\"filled\" onChange={(e)=>productToAdd.description=e.target.value}/>\n// //        <TextField id=\"filled-basic\" label=\"price\" variant=\"filled\" onChange={(e)=>productToAdd.price=e.target.value}/>\n// //        <TextField id=\"filled-basic\" label=\"imgUrl\" variant=\"filled\" onChange={(e)=>productToAdd.imgUrl=e.target.value}/>\n// //        <input type=\"submit\" value=\"send\"></input>\n// //        </form> );\n// // }\n\n// // export default  AddProduct;\nimport { useLocation } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\nimport { useDispatch } from \"react-redux\";\nimport { addToShoppingCart } from '../../features/Order/OrderSlice';\nimport ShoppingCart from \"../order/ShoppingCart\";\nimport '../../ProductDetails.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProductToAdd = () => {\n  _s();\n  const {\n    state\n  } = useLocation();\n  const {\n    p\n  } = state;\n  const [quantity, setQuantity] = useState(1);\n  const dis = useDispatch();\n  const [showCart, setShowCart] = useState(false);\n  const addToCart = () => {\n    dis(addToShoppingCart({\n      p,\n      quantity\n    }));\n    setShowCart(true);\n    setTimeout(() => {\n      setShowCart(false);\n    }, 5000);\n  };\n  useEffect(() => {\n    if (showCart) {\n      const timer = setTimeout(() => {\n        setShowCart(false);\n      }, 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [showCart]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shopping-cart-container\",\n      children: showCart && /*#__PURE__*/_jsxDEV(ShoppingCart, {\n        show: \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-details-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: p.imgUrl,\n        alt: p.name,\n        className: \"product-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: p.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"price:\", p.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"category:\", p.category]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quantity-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quantity-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"quantity-button\",\n              onClick: () => setQuantity(prevQuantity => prevQuantity - 1),\n              disabled: quantity === 1,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"quantity-button\",\n              onClick: () => setQuantity(prevQuantity => prevQuantity + 1),\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-to-cart-button\",\n            onClick: addToCart,\n            children: \"Add to Cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(ProductToAdd, \"TbSmkcKfl9KgAUzutqRHSC5+8DM=\", false, function () {\n  return [useLocation, useDispatch];\n});\n_c = ProductToAdd;\nexport default ProductToAdd;\nvar _c;\n$RefreshReg$(_c, \"ProductToAdd\");","map":{"version":3,"names":["useLocation","useState","useEffect","useDispatch","addToShoppingCart","ShoppingCart","jsxDEV","_jsxDEV","Fragment","_Fragment","ProductToAdd","_s","state","p","quantity","setQuantity","dis","showCart","setShowCart","addToCart","setTimeout","timer","clearTimeout","children","className","show","fileName","_jsxFileName","lineNumber","columnNumber","src","imgUrl","alt","name","description","price","category","onClick","prevQuantity","disabled","_c","$RefreshReg$"],"sources":["C:/Users/שיפי וינגרטן/Pictures/Saved Pictures/סמינר/כיתה יד/תכנות/react/פרויקט/finalproject/src/components/screens/products/AddProduct.js"],"sourcesContent":["// import { useForm } from \"react-hook-form\";\r\n// import TextField from '@mui/material/TextField';\r\n// import React, { useState } from 'react';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import Avatar from '@mui/material/Avatar';\r\n// import Button from '@mui/material/Button';\r\n// import CssBaseline from '@mui/material/CssBaseline';\r\n// import FormControlLabel from '@mui/material/FormControlLabel';\r\n// import Checkbox from '@mui/material/Checkbox';\r\n// import Link from '@mui/material/Link';\r\n// import Grid from '@mui/material/Grid';\r\n// import Box from '@mui/material/Box';\r\n// import LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\n// import Typography from '@mui/material/Typography';\r\n// import Container from '@mui/material/Container';\r\n// import { createTheme, ThemeProvider } from '@mui/material/styles';\r\n// import { Password } from '@mui/icons-material';\r\n// import { postProduct} from '../../features/Product/ProductSlice';\r\n\r\n// const AddProduct = () => {\r\n//     const [product, setproduct] = useState({ name:\" \", description:\" \" ,price:\" \",imgUrl:\"\"});\r\n//     const arrP = useSelector(x => x.products.arrProducts);\r\n//     const currentP = useSelector(u => u.products.currentproduct);\r\n//     const dispatch = useDispatch();\r\n//     const nav=useNavigate()\r\n// const defaultTheme = createTheme();\r\n\r\n//     const {\r\n//         register,\r\n//         handleSubmit,\r\n//         getValues,\r\n//         formState: { errors, dirtyFields, isValid },\r\n//     } = useForm({ mode: 'onBlur' });\r\n\r\n//     const onSubmit = (data) => {\r\n\r\n//         dispatch(postProduct({name:data.name, description:data.description, price:data.price,imgUrl:data.imgUrl}))\r\n//         console.log(currentP)\r\n//          nav('/ProductList')\r\n//         // כאן תוכל להוסיף את הלוגיקה שלך לטיפול בהגשת הטופס\r\n//         // לדוג', שליחת המידע לשרת או עדכון המצב באפליקציה\r\n//     };\r\n\r\n//     return (\r\n//         <Box\r\n//         sx={{\r\n//           marginTop: 8,\r\n//           display: 'flex',\r\n//           flexDirection: 'column',\r\n//           alignItems: 'center',\r\n//         }}\r\n//       >\r\n//         <Avatar sx={{ m: 1, bgcolor: 'lightpink' }}>\r\n//           {/* <LockOutlinedIcon /> */}\r\n//         </Avatar>\r\n//         <Typography component=\"h1\" variant=\"h5\" >\r\n//           add product\r\n//         </Typography>\r\n// <Box sx={{ maxWidth: 400, margin: 'auto', padding: 3, boxShadow: 3 }}>\r\n// <Typography variant=\"h5\" component=\"h2\" gutterBottom>\r\n// </Typography>         \r\n//             <form onSubmit={onSubmit}>\r\n\r\n//                 <>\r\n//                     <TextField\r\n//                         id=\"filled-basic\"\r\n//                         label=\"name:\"\r\n//                         variant=\"outlined\"\r\n//                         fullWidth\r\n//                         margin=\"normal\"                        onChange={(e) => setproduct({ name:e.target.value, description: product.description, price:product.price,imgUrl:product.imgUrl})}\r\n//                         {...register(\"name\", { required: \"field is required\", pattern: /^[A-Za-z]+$/i })}\r\n//                     />\r\n//                     {errors.name?.type === 'required' && <p>{errors.name.message}</p>}\r\n//                     {errors.name?.type === 'pattern' && <p>enter in english</p>}\r\n//                     {dirtyFields.name && <p>✔️</p>}\r\n//                 </>\r\n//                 <>\r\n//                     <TextField\r\n//                         id=\"filled-basic\"\r\n//                         label=\"description:\"\r\n//                         type=\"description\"\r\n//                         variant=\"outlined\"\r\n//                         fullWidth\r\n//                         margin=\"normal\"                        onChange={(e) => setproduct({ name:product.name, description:e.target.value, price:product.price,imgUrl:product.imgUrl})}\r\n//                         {...register(\"description\",{required: \"field is required\"})}\r\n//                     />\r\n//                    {errors.description?.type === 'required' && <p>{errors.description.message}</p>}\r\n//                     {dirtyFields.description && <p>✔️</p>}\r\n//                 </>\r\n//                 <>\r\n//                     <TextField\r\n//                         id=\"filled-basic\"\r\n//                         label=\"price:\"\r\n//                         type=\"price\"\r\n//                         variant=\"outlined\"\r\n//                         fullWidth\r\n//                         margin=\"normal\"                        \r\n//                         onChange={(e) => setproduct({ name:product.name, description: product.description, price:e.target.value,imgUrl:product.imgUrl})}\r\n//                         {...register(\"price\", {\r\n//                             required: 'enter a price number',\r\n           \r\n//                         })}\r\n//                     />\r\n//                     {errors.price && <p>{errors.price.message}</p>}\r\n//                     {dirtyFields.price && <p>✔️</p>}\r\n//                 </>\r\n//                 <>\r\n//                     <TextField\r\n//                               variant=\"outlined\"\r\n//                               fullWidth\r\n//                               margin=\"normal\"\r\n//                         id=\"filled-basic\"\r\n//                         label=\"imgUrl:\"\r\n//                         onChange={(e) => setproduct({ name:product.name, description: product.description, price:product.price,imgUrl:e.target.value})}\r\n//                         {...register(\"imgUrl\", { required: \"field is required\", pattern: /^[A-Za-z]+$/i })}\r\n//                     />\r\n//                     {errors.imgUrl?.type === 'required' && <p>{errors.imgUrl.message}</p>}\r\n//                     {errors.imgUrl?.type === 'pattern' && <p>enter in english</p>}\r\n//                     {dirtyFields.imgUrl && <p>✔️</p>}\r\n//                 </>\r\n               \r\n//                 <Button\r\n//               color='inherit'\r\n//               type=\"submit\"\r\n//               fullWidth\r\n//               variant=\"contained\"\r\n//               sx={{ mt: 3, mb: 2,bgcolor:'lightpink' }}\r\n//             >\r\n//               Sign In\r\n//             </Button> \r\n//                        </form>\r\n//             </Box>            </Box>\r\n\r\n        \r\n//     );\r\n// }\r\n\r\n// export default AddProduct;\r\n\r\n// // import * as React from 'react';\r\n// // import Avatar from '@mui/material/Avatar';\r\n// // import Button from '@mui/material/Button';\r\n// // import CssBaseline from '@mui/material/CssBaseline';\r\n// // import TextField from '@mui/material/TextField';\r\n// // import FormControlLabel from '@mui/material/FormControlLabel';\r\n// // import Checkbox from '@mui/material/Checkbox';\r\n// // import Link from '@mui/material/Link';\r\n// // import Grid from '@mui/material/Grid';\r\n// // import Box from '@mui/material/Box';\r\n// // import LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\n// // import Typography from '@mui/material/Typography';\r\n// // import Container from '@mui/material/Container';\r\n// // import { createTheme, ThemeProvider } from '@mui/material/styles';\r\n// // import { useSelector, useDispatch } from 'react-redux'\r\n// // import { useNavigate } from \"react-router-dom\";\r\n// // import {postUser} from '../../features/User/UserSlice';\r\n// // import { Password } from '@mui/icons-material';\r\n// // const defaultTheme = createTheme();\r\n\r\n// // export default function SignIn() {\r\n\r\n// //   let dis= useDispatch()\r\n\r\n// //   let userAdd={\r\n// //       tz:\"\",\r\n// //       name:\"\",\r\n// //       Password:\"\",\r\n// //       telephone:\"\",\r\n// //       city:\"\",\r\n// //       street:\"\",\r\n// //       houseNumber:\"\"\r\n// //   }\r\n  \r\n// //       const add=(e)=>{\r\n// //           e.preventDefault()// מבטל ברירת מחדל \r\n// //           dis(postUser(userAdd))\r\n// //       }\r\n// //   return (\r\n// // <ThemeProvider theme={defaultTheme} onSubmit={handleSubmit(onSubmit)}>\r\n// //       <Container component=\"main\" maxWidth=\"xs\">\r\n// //         <CssBaseline />\r\n// //         <Box\r\n// //           sx={{\r\n// //             marginTop: 8,\r\n// //             display: 'flex',\r\n// //             flexDirection: 'column',\r\n// //             alignItems: 'center',\r\n// //           }}\r\n// //         >\r\n// //           <Avatar sx={{ m: 1, bgcolor: 'lightpink' }}>\r\n// //             <LockOutlinedIcon />\r\n// //           </Avatar>\r\n// //           <Typography component=\"h1\" variant=\"h5\">\r\n// //             Sign Up\r\n// //           </Typography>\r\n// //           <Box component=\"form\" noValidate \r\n// //            sx={{ mt: 3 }}>\r\n// //             <Grid container spacing={2}>\r\n// //             <Grid item xs={12} sm={6}>\r\n// //                 <TextField\r\n// //                   autoComplete=\"given-name\"\r\n// //                   name=\"tz\"\r\n// //                   required\r\n// //                   fullWidth\r\n// //                   id=\"tz\"\r\n// //                   label=\" tz\"\r\n// //                   autoFocus\r\n// //                   onChange={(e) => setUser({ tz: e.target.value, name:user.name, password: user.password, telephone:user.telephone ,city:user.city,street:user.street,houseNumber:user.houseNumber})}\r\n// //                   {...register(\"tz\", { required: \"field is required\", pattern: /^\\d{9}$/ })}\r\n// //                   InputLabelProps={{\r\n// //                     style: { color: 'black' }, // Inline style for label\r\n// //                   }}\r\n// //                 />\r\n// //               </Grid>\r\n// //               <Grid item xs={12} sm={6}>\r\n// //                 <TextField\r\n// //                   autoComplete=\"given-name\"\r\n// //                   name=\"name\"\r\n// //                   required\r\n// //                   fullWidth\r\n// //                   id=\"name\"\r\n// //                   label=\" name\"\r\n// //                   autoFocus\r\n// //                   onChange={(e) => setUser({ tz: user.tz, name:e.target.value, password: user.password, telephone:user.telephone ,city:user.city,street:user.street,houseNumber:user.houseNumber})}\r\n// //                 {...register(\"name\", { required: \"field is required\", pattern: /^[A-Za-z]+$/i })}\r\n// //                   InputLabelProps={{\r\n// //                     style: { color: 'black' }, // Inline style for label\r\n// //                   }}\r\n// //                 />\r\n// //               </Grid>\r\n// //               <Grid item xs={12}>\r\n// //                 <TextField\r\n// //                   required\r\n// //                   fullWidth\r\n// //                   name=\"password\"\r\n// //                   label=\"Password\"\r\n// //                   type=\"password\"\r\n// //                   id=\"password\"\r\n// //                   autoComplete=\"new-password\"\r\n// //                    onChange={(e) => setUser({ tz:user.tz,name:user.name, password:e.target.value, telephone:user.telephone ,city:user.city,street:user.street,houseNumber:user.houseNumber})}\r\n// //                          {...register(\"password\",{required: \"field is required\"})}\r\n// //                   InputLabelProps={{\r\n// //                     style: { color: 'black' }, // Inline style for label\r\n// //                   }}\r\n                  \r\n// //                 />\r\n// //               </Grid>\r\n// //               <Grid item xs={12}>\r\n// //                 <TextField\r\n// //                   required\r\n// //                   fullWidth\r\n// //                   name=\"telephone\"\r\n// //                   label=\"telephone\"\r\n// //                   type=\"telephone\"\r\n// //                   id=\"telephone\"\r\n// //                   autoComplete=\"new-telephone\"\r\n// //                   onChange={(e) => setUser({ tz: user.tz,name:user.name, password: user.password, telephone:e.target.value ,city:user.city,street:user.street,houseNumber:user.houseNumber})}\r\n// //                                            {...register(\"telephone\", {\r\n// //                                                required: 'enter a phone number',\r\n// //                                                pattern: {\r\n// //                                                    value: /^[0-9]{10}$/,\r\n// //                                                    message: 'the phone number is incorrect',\r\n// //                                                },\r\n// //                                            })}\r\n// //                   InputLabelProps={{\r\n// //                     style: { color: 'black' }, // Inline style for label\r\n// //                   }}\r\n                  \r\n// //                 />\r\n// //               </Grid>\r\n\r\n// //               <Grid item xs={12}>\r\n// //                 <TextField\r\n// //                   required\r\n// //                   fullWidth\r\n// //                   name=\"city\"\r\n// //                   label=\"city\"\r\n// //                   type=\"city\"\r\n// //                   id=\"city\"\r\n// //                   autoComplete=\"new-city\"\r\n// //                   onChange={(e) => setUser({ tz: user.tz, name:user.name, password: user.password, telephone:user.telephone ,city:e.target.value,street:user.street,houseNumber:user.houseNumber})}\r\n// //                 {...register(\"name\", { required: \"field is required\", pattern: /^[A-Za-z]+$/i })}\r\n// //                   InputLabelProps={{\r\n// //                     style: { color: 'black' }, // Inline style for label\r\n// //                   }}\r\n                  \r\n// //                 />\r\n// //               </Grid>\r\n// //               <Grid item xs={12}>\r\n// //                 <TextField\r\n// //                   required\r\n// //                   fullWidth\r\n// //                   name=\"street\"\r\n// //                   label=\"street\"\r\n// //                   type=\"street\"\r\n// //                   id=\"street\"\r\n// //                   autoComplete=\"new-street\"\r\n// //                   onChange={(e) => setUser({ tz: user.tz, name:user.name, password: user.password, telephone:user.telephone ,city:user.city,street:e.target.value,houseNumber:user.houseNumber})}\r\n// //                 {...register(\"name\", { required: \"field is required\", pattern: /^[A-Za-z]+$/i })}\r\n// //                   InputLabelProps={{\r\n// //                     style: { color: 'black' }, // Inline style for label\r\n// //                   }}\r\n                  \r\n// //                 />\r\n// //               </Grid>\r\n\r\n// //               <Grid item xs={12}>\r\n// //                 <TextField\r\n// //                   required\r\n// //                   fullWidth\r\n// //                   name=\"houseNumber\"\r\n// //                   label=\"houseNumber\"\r\n// //                   type=\"houseNumber\"\r\n// //                   id=\"houseNumber\"\r\n// //                   autoComplete=\"new-houseNumber\"\r\n// //                   onChange={(e) => setUser({ tz: user.tz,name:user.name, password: user.password, telephone:user.telephone ,city:user.city,street:user.street,houseNumber:e.target.value})}\r\n// //                                            {...register(\"telephone\", {\r\n// //                                                required: 'enter a phone number',\r\n// //                                                pattern: {\r\n// //                                                    value: /^[0-9]$/,\r\n// //                                                    message: 'the number number is incorrect',\r\n// //                                                },\r\n// //                                            })}\r\n// //                   InputLabelProps={{\r\n// //                     style: { color: 'black' }, // Inline style for label\r\n// //                   }}\r\n                  \r\n// //                 />\r\n// //               </Grid>\r\n// //             </Grid>\r\n// //             <Button\r\n// //             color='inherit'\r\n// //               type=\"submit\"\r\n// //               fullWidth\r\n// //               variant=\"contained\"\r\n// //               sx={{ mt: 3, mb: 2, bgcolor:'lightpink' }}\r\n// //             >\r\n// //               Sign Up\r\n// //             </Button>\r\n// //             <Grid container justifyContent=\"flex-end\">\r\n// //               <Grid item>\r\n// //                 <Link  href=\"\\login\" style={{ color: 'pink' ,textDecoration:'none'}} >\r\n// //                   Already have an account? Sign in\r\n// //                 </Link>\r\n// //               </Grid>\r\n// //             </Grid>\r\n// //           </Box>\r\n// //         </Box>\r\n// //       </Container>\r\n// //     </ThemeProvider>\r\n// //   );\r\n// // }\r\n// // export default SignIn;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// // import TextField from '@mui/material/TextField';\r\n// // import { useDispatch } from 'react-redux';\r\n// // import { postProduct  } from '../../features/Product/ProductSlice'\r\n// // import React, { useState } from 'react';\r\n// // import { useForm } from 'react-hook-form';\r\n\r\n\r\n// // import { useNavigate } from \"react-router-dom\";\r\n\r\n\r\n// // const {\r\n// //   register,\r\n// //   handleSubmit,\r\n// //   getValues,\r\n// //   formState: { errors, dirtyFields, isValid },\r\n// // } = useForm({ mode: 'onBlur' });\r\n// // const  AddProduct= (prop) => {\r\n// //     let productToAdd={\r\n// //         name:\" \",\r\n// //         description:\" \",\r\n// //         price:\" \",\r\n// //         imgUrl:\" \"\r\n// //     }\r\n// //     let dispatch=useDispatch()\r\n// //     const add=(e)=>{\r\n// //         e.preventDefault() \r\n// //         dispatch(postProduct(productToAdd))\r\n// //         console.log(\"add user\")\r\n\r\n// //     }\r\n// //     return (<form onSubmit={handleSubmit(add)}>\r\n// //        <TextField id=\"filled-basic\" label=\"name\" variant=\"filled\" onChange={(e)=>productToAdd.name=e.target.value} />\r\n// //        <TextField id=\"filled-basic\" label=\"description\" variant=\"filled\" onChange={(e)=>productToAdd.description=e.target.value}/>\r\n// //        <TextField id=\"filled-basic\" label=\"price\" variant=\"filled\" onChange={(e)=>productToAdd.price=e.target.value}/>\r\n// //        <TextField id=\"filled-basic\" label=\"imgUrl\" variant=\"filled\" onChange={(e)=>productToAdd.imgUrl=e.target.value}/>\r\n// //        <input type=\"submit\" value=\"send\"></input>\r\n// //        </form> );\r\n// // }\r\n \r\n// // export default  AddProduct;\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useState, useEffect } from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addToShoppingCart } from '../../features/Order/OrderSlice'\r\nimport ShoppingCart from \"../order/ShoppingCart\";\r\nimport '../../ProductDetails.css';\r\n\r\nconst ProductToAdd = () => {\r\n    const { state } = useLocation();\r\n    const { p } = state;\r\n    const [quantity, setQuantity] = useState(1);\r\n    const dis = useDispatch()\r\n    const [showCart, setShowCart] = useState(false)\r\n\r\n    const addToCart = () => {\r\n        dis(addToShoppingCart({ p, quantity }))\r\n        setShowCart(true)\r\n        setTimeout(() => {\r\n            setShowCart(false)\r\n        }, 5000)\r\n    }\r\n    useEffect(() => {\r\n        if (showCart) {\r\n            const timer = setTimeout(() => {\r\n                setShowCart(false);\r\n            }, 5000);\r\n            return () => clearTimeout(timer);\r\n        }\r\n    }, [showCart]);\r\n\r\n    return (<>\r\n        <div className=\"shopping-cart-container\">\r\n            {showCart && <ShoppingCart show='true'></ShoppingCart>}\r\n        </div>\r\n        <div className=\"product-details-container\">\r\n            <img src={p.imgUrl} alt={p.name} className=\"product-image\" />\r\n            <div className=\"product-details\">\r\n                <h2>{p.description}</h2>\r\n                <p>price:{p.price}</p>\r\n                <p>category:{p.category}</p>\r\n                <div className=\"quantity-container\">\r\n                    <div className=\"quantity-controls\">\r\n                        <button className=\"quantity-button\" onClick={() => setQuantity(prevQuantity => prevQuantity - 1)} disabled={quantity === 1}>\r\n                            <span>-</span>\r\n                        </button>\r\n                        <span>{quantity}</span>\r\n                        <button className=\"quantity-button\" onClick={() => setQuantity(prevQuantity => prevQuantity + 1)}>\r\n                            <span>+</span>\r\n                        </button>\r\n                    </div>\r\n                    <button className=\"add-to-cart-button\" onClick={addToCart}>\r\n                        Add to Cart\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div></>\r\n    );\r\n}\r\n\r\nexport default ProductToAdd;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AASA;AACA;AACA;AACA;AACA;;AAGA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,iBAAiB,QAAQ,iCAAiC;AACnE,OAAOC,YAAY,MAAM,uBAAuB;AAChD,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAM,CAAC,GAAGZ,WAAW,CAAC,CAAC;EAC/B,MAAM;IAAEa;EAAE,CAAC,GAAGD,KAAK;EACnB,MAAM,CAACE,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAMe,GAAG,GAAGb,WAAW,CAAC,CAAC;EACzB,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMkB,SAAS,GAAGA,CAAA,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
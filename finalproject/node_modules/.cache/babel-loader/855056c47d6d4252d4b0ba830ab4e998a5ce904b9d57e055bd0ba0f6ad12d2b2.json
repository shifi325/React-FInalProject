{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05E9\\u05D9\\u05E4\\u05D9 \\u05D5\\u05D9\\u05E0\\u05D2\\u05E8\\u05D8\\u05DF\\\\Pictures\\\\Saved Pictures\\\\\\u05E1\\u05DE\\u05D9\\u05E0\\u05E8\\\\\\u05DB\\u05D9\\u05EA\\u05D4 \\u05D9\\u05D3\\\\\\u05EA\\u05DB\\u05E0\\u05D5\\u05EA\\\\react\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05E7\\u05D8\\\\finalproject\\\\src\\\\components\\\\screens\\\\user\\\\SignIn.js\",\n  _s = $RefreshSig$();\nimport { useForm } from \"react-hook-form\";\nimport TextField from '@mui/material/TextField';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from \"react-router-dom\";\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { Password } from '@mui/icons-material';\nimport { postUser } from '../../features//User/UserSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignIn = () => {\n  _s();\n  const [user, setUser] = useState({\n    tz: \" \",\n    fullName: \" \",\n    password: \" \",\n    telephone: \" \"\n  });\n  const arrU = useSelector(x => x.users.arrUser);\n  const currentUser = useSelector(u => u.users.currentUser);\n  const dispatch = useDispatch();\n  const nav = useNavigate();\n  const defaultTheme = createTheme();\n  const {\n    register,\n    handleSubmit,\n    getValues,\n    formState: {\n      errors,\n      dirtyFields,\n      isValid\n    }\n  } = useForm({\n    mode: 'onBlur'\n  });\n  const onSubmit = data => {\n    // event.preventDefault();\n    //const data = new FormData(event.currentTarget);\n    //dispatch(addUser({\"tz\":data.get('tz'), \"name\":data.get('name'), \"password\":data.get('password'),\"telephone\":data.get('telephone'), \"email\":data.get('email')}))//tz:data.tz, name:data.name, password:data.password, telephone:data.telephone, email:data.email\n    dispatch(postUser({\n      tz: data.tz,\n      fullName: data.fullName,\n      password: data.password,\n      telephone: data.telephone\n    }));\n    console.log(\"add user\");\n    console.log(currentUser);\n    nav('/user');\n    // כאן תוכל להוסיף את הלוגיקה שלך לטיפול בהגשת הטופס\n    // לדוג', שליחת המידע לשרת או עדכון המצב באפליקציה\n  };\n\n  //     return (\n  //         <>\n  //             <form onSubmit={handleSubmit(onSubmit)}>\n  //                 <div>\n  //                     <TextField\n  //                         id=\"filled-basic\"\n  //                         label=\"tz:\"\n  //                         variant=\"filled\"\n  //                         onChange={(e) => setUser({ tz: e.target.value, fullName:user.fullName, password: user.password, telephone:user.telephone })}\n  //                         {...register(\"tz\", { required: \"field is required\", pattern: /^\\d{9}$/ })}\n  //                     />\n  //                     {errors.tz && <p>The id number is incorrect</p>}\n  //                     {dirtyFields.tz && <p>✔️</p>}\n  //                 </div>\n  //                 <br />\n  //                 <div>\n  //                     <TextField\n  //                         id=\"filled-basic\"\n  //                         label=\"name:\"\n  //                         variant=\"filled\"\n  //                         onChange={(e) => setUser({ tz: user.tz, fullName:e.target.value, password: user.password, telephone:user.telephone})}\n  //                         {...register(\"name\", { required: \"field is required\", pattern: /^[A-Za-z]+$/i })}\n  //                     />\n  //                     {errors.name?.type === 'required' && <p>{errors.name.message}</p>}\n  //                     {errors.name?.type === 'pattern' && <p>enter in english</p>}\n  //                     {dirtyFields.name && <p>✔️</p>}\n  //                 </div>\n  //                 <br />\n  //                 <div>\n  //                     <TextField\n  //                         id=\"filled-basic\"\n  //                         label=\"password:\"\n  //                         type=\"password\"\n  //                         variant=\"filled\"\n  //                         onChange={(e) => setUser({ tz:user.tz,fullName:user.fullName, password:e.target.value, telephone:user.telephone ,city:user.city,street:user.street,houseNumber:user.houseNumber})}\n  //                         {...register(\"password\",{required: \"field is required\"})}\n  //                     />\n  //                    {errors.password?.type === 'required' && <p>{errors.password.message}</p>}\n  //                     {dirtyFields.password && <p>✔️</p>}\n  //                 </div>\n  //                 <br />\n  //                 <div>\n  //                     <TextField\n  //                         id=\"filled-basic\"\n  //                         label=\"telephone:\"\n  //                         type=\"telephone\"\n  //                         variant=\"filled\"\n  //                         onChange={(e) => setUser({ tz: user.tz,fullName:user.fullName, password: user.password, telephone:e.target.value})}\n  //                         {...register(\"telephone\", {\n  //                             required: 'enter a phone number',\n  //                             pattern: {\n  //                                 value: /^[0-9]{10}$/,\n  //                                 message: 'the phone number is incorrect',\n  //                             },\n  //                         })}\n  //                     />\n  //                     {errors.telephone && <p>{errors.telephone.message}</p>}\n  //                     {dirtyFields.telephone && <p>✔️</p>}\n  //                 </div>\n  //                 <br />\n  //                 <div>\n  //                     <TextField\n  //                         id=\"filled-basic\"\n  //                         label=\"mail:\"\n  //                         type=\"email\"\n  //                         variant=\"filled\"\n  //                         onChange={(e) => setUser({ tz: user.tz, fullName:user.fullName, password: user.password, telephone:user.telephone})}\n  //                         {...register(\"email\",{required: \"field is required\"})}\n  //                     />\n  //                     {dirtyFields.email && <p>✔️</p>}\n  //                 </div>\n  //                 <br />\n  //                 <div>\n  //                     <TextField\n  //                         id=\"filled-basic\"\n  //                         label=\"Confirm email:\"\n  //                         type=\"email\"\n  //                         variant=\"filled\"\n  //                         {...register(\"confirmEmail\", {\n  //                           validate: value => getValues('email') === value\n  //                         })}\n  //                     />\n  //                     {errors.confirmEmail && <p>email is wrong</p>}\n  //                 </div>\n  //                 <input type=\"submit\"  />\n  //             </form>\n  //         </>\n  //     );\n  // }\n\n  // export default SignIn;\n\n  // import * as React from 'react';\n  // import Avatar from '@mui/material/Avatar';\n  // import Button from '@mui/material/Button';\n  // import CssBaseline from '@mui/material/CssBaseline';\n  // import TextField from '@mui/material/TextField';\n  // import FormControlLabel from '@mui/material/FormControlLabel';\n  // import Checkbox from '@mui/material/Checkbox';\n  // import Link from '@mui/material/Link';\n  // import Grid from '@mui/material/Grid';\n  // import Box from '@mui/material/Box';\n  // import LockOutlinedIcon from '@mui/icons-material/LockOutlined';\n  // import Typography from '@mui/material/Typography';\n  // import Container from '@mui/material/Container';\n  // import { createTheme, ThemeProvider } from '@mui/material/styles';\n  // import { useSelector, useDispatch } from 'react-redux'\n  // import { useNavigate } from \"react-router-dom\";\n  // import {postUser} from '../../features/User/UserSlice';\n  // import { Password } from '@mui/icons-material';\n  // const defaultTheme = createTheme();\n\n  // export default function SignIn() {\n\n  //   let dis= useDispatch()\n\n  //   let userAdd={\n  //       tz:\"\",\n  //       fullName:\"\",\n  //       Password:\"\",\n  //       telephone:\"\",\n  //       city:\"\",\n  //       street:\"\",\n  //       houseNumber:\"\"\n  //   }\n\n  //       const add=(e)=>{\n  //           e.preventDefault()// מבטל ברירת מחדל \n  //           dis(postUser(userAdd))\n  //       }\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: defaultTheme,\n    onSubmit: handleSubmit(onSubmit),\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          sx: {\n            m: 1,\n            bgcolor: 'lightpink'\n          },\n          children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          noValidate: true,\n          sx: {\n            mt: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                autoComplete: \"given-name\",\n                name: \"tz\",\n                required: true,\n                fullWidth: true,\n                id: \"tz\",\n                label: \" tz\",\n                autoFocus: true,\n                onChange: e => setUser({\n                  tz: e.target.value,\n                  fullName: user.fullName,\n                  password: user.password,\n                  telephone: user.telephone,\n                  city: user.city,\n                  street: user.street,\n                  houseNumber: user.houseNumber\n                }),\n                ...register(\"tz\", {\n                  required: \"field is required\",\n                  pattern: /^\\d{9}$/\n                }),\n                InputLabelProps: {\n                  style: {\n                    color: 'black'\n                  } // Inline style for label\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                autoComplete: \"given-name\",\n                name: \"fullName\",\n                required: true,\n                fullWidth: true,\n                id: \"fullName\",\n                label: \" fullName\",\n                autoFocus: true,\n                onChange: e => setUser({\n                  tz: user.tz,\n                  fullName: e.target.value,\n                  password: user.password,\n                  telephone: user.telephone,\n                  city: user.city,\n                  street: user.street,\n                  houseNumber: user.houseNumber\n                }),\n                ...register(\"name\", {\n                  required: \"field is required\",\n                  pattern: /^[A-Za-z]+$/i\n                }),\n                InputLabelProps: {\n                  style: {\n                    color: 'black'\n                  } // Inline style for label\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                fullWidth: true,\n                name: \"password\",\n                label: \"Password\",\n                type: \"password\",\n                id: \"password\",\n                autoComplete: \"new-password\",\n                onChange: e => setUser({\n                  tz: user.tz,\n                  fullName: user.fullName,\n                  password: e.target.value,\n                  telephone: user.telephone,\n                  city: user.city,\n                  street: user.street,\n                  houseNumber: user.houseNumber\n                }),\n                ...register(\"password\", {\n                  required: \"field is required\"\n                }),\n                InputLabelProps: {\n                  style: {\n                    color: 'black'\n                  } // Inline style for label\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                fullWidth: true,\n                name: \"telephone\",\n                label: \"telephone\",\n                type: \"telephone\",\n                id: \"telephone\",\n                autoComplete: \"new-telephone\",\n                onChange: e => setUser({\n                  tz: user.tz,\n                  fullName: user.fullName,\n                  password: user.password,\n                  telephone: e.target.value,\n                  city: user.city,\n                  street: user.street,\n                  houseNumber: user.houseNumber\n                }),\n                ...register(\"telephone\", {\n                  required: 'enter a phone number',\n                  pattern: {\n                    value: /^[0-9]{10}$/,\n                    message: 'the phone number is incorrect'\n                  }\n                }),\n                InputLabelProps: {\n                  style: {\n                    color: 'black'\n                  } // Inline style for label\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                fullWidth: true,\n                name: \"city\",\n                label: \"city\",\n                type: \"city\",\n                id: \"city\",\n                autoComplete: \"new-city\",\n                onChange: e => setUser({\n                  tz: user.tz,\n                  fullName: user.fullName,\n                  password: user.password,\n                  telephone: user.telephone,\n                  city: e.target.value,\n                  street: user.street,\n                  houseNumber: user.houseNumber\n                }),\n                ...register(\"name\", {\n                  required: \"field is required\",\n                  pattern: /^[A-Za-z]+$/i\n                }),\n                InputLabelProps: {\n                  style: {\n                    color: 'black'\n                  } // Inline style for label\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                fullWidth: true,\n                name: \"street\",\n                label: \"street\",\n                type: \"street\",\n                id: \"street\",\n                autoComplete: \"new-street\",\n                onChange: e => setUser({\n                  tz: user.tz,\n                  fullName: user.fullName,\n                  password: user.password,\n                  telephone: user.telephone,\n                  city: user.city,\n                  street: e.target.value,\n                  houseNumber: user.houseNumber\n                }),\n                ...register(\"name\", {\n                  required: \"field is required\",\n                  pattern: /^[A-Za-z]+$/i\n                }),\n                InputLabelProps: {\n                  style: {\n                    color: 'black'\n                  } // Inline style for label\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                fullWidth: true,\n                name: \"houseNumber\",\n                label: \"houseNumber\",\n                type: \"houseNumber\",\n                id: \"houseNumber\",\n                autoComplete: \"new-houseNumber\",\n                onChange: e => setUser({\n                  tz: user.tz,\n                  fullName: user.fullName,\n                  password: user.password,\n                  telephone: user.telephone,\n                  city: user.city,\n                  street: user.street,\n                  houseNumber: e.target.value\n                }),\n                ...register(\"telephone\", {\n                  required: 'enter a phone number',\n                  pattern: {\n                    value: /^[0-9]$/,\n                    message: 'the number number is incorrect'\n                  }\n                }),\n                InputLabelProps: {\n                  style: {\n                    color: 'black'\n                  } // Inline style for label\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"inherit\",\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            sx: {\n              mt: 3,\n              mb: 2,\n              bgcolor: 'lightpink'\n            },\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justifyContent: \"flex-end\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                href: \"\\\\login\",\n                style: {\n                  color: 'pink',\n                  textDecoration: 'none'\n                },\n                children: \"Already have an account? Sign in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 1\n  }, this);\n};\n_s(SignIn, \"GcXpVi5HychB7usieGfYreqExpk=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useNavigate, useForm];\n});\n_c = SignIn;\nvar _c;\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"names":["useForm","TextField","React","useState","useDispatch","useSelector","useNavigate","Avatar","Button","CssBaseline","FormControlLabel","Checkbox","Link","Grid","Box","LockOutlinedIcon","Typography","Container","createTheme","ThemeProvider","Password","postUser","jsxDEV","_jsxDEV","SignIn","_s","user","setUser","tz","fullName","password","telephone","arrU","x","users","arrUser","currentUser","u","dispatch","nav","defaultTheme","register","handleSubmit","getValues","formState","errors","dirtyFields","isValid","mode","onSubmit","data","console","log","theme","children","component","maxWidth","fileName","_jsxFileName","lineNumber","columnNumber","sx","marginTop","display","flexDirection","alignItems","m","bgcolor","variant","noValidate","mt","container","spacing","item","xs","sm","autoComplete","name","required","fullWidth","id","label","autoFocus","onChange","e","target","value","city","street","houseNumber","pattern","InputLabelProps","style","color","type","message","mb","justifyContent","href","textDecoration","_c","$RefreshReg$"],"sources":["C:/Users/שיפי וינגרטן/Pictures/Saved Pictures/סמינר/כיתה יד/תכנות/react/פרויקט/finalproject/src/components/screens/user/SignIn.js"],"sourcesContent":["import { useForm } from \"react-hook-form\";\r\nimport TextField from '@mui/material/TextField';\r\nimport React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { Password } from '@mui/icons-material';\r\nimport { postUser} from '../../features//User/UserSlice';\r\n\r\nconst SignIn = () => {\r\n    const [user, setUser] = useState({ tz:\" \",fullName:\" \", password:\" \" ,telephone:\" \"});\r\n    const arrU = useSelector(x => x.users.arrUser);\r\n    const currentUser = useSelector(u => u.users.currentUser);\r\n    const dispatch = useDispatch();\r\n    const nav=useNavigate()\r\nconst defaultTheme = createTheme();\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        getValues,\r\n        formState: { errors, dirtyFields, isValid },\r\n    } = useForm({ mode: 'onBlur' });\r\n\r\n    const onSubmit = (data) => {\r\n       // event.preventDefault();\r\n        //const data = new FormData(event.currentTarget);\r\n        //dispatch(addUser({\"tz\":data.get('tz'), \"name\":data.get('name'), \"password\":data.get('password'),\"telephone\":data.get('telephone'), \"email\":data.get('email')}))//tz:data.tz, name:data.name, password:data.password, telephone:data.telephone, email:data.email\r\n        dispatch(postUser({tz:data.tz, fullName:data.fullName, password:data.password, telephone:data.telephone}))\r\n        console.log(\"add user\")\r\n        console.log(currentUser)\r\n         nav('/user')\r\n        // כאן תוכל להוסיף את הלוגיקה שלך לטיפול בהגשת הטופס\r\n        // לדוג', שליחת המידע לשרת או עדכון המצב באפליקציה\r\n    };\r\n\r\n//     return (\r\n//         <>\r\n//             <form onSubmit={handleSubmit(onSubmit)}>\r\n//                 <div>\r\n//                     <TextField\r\n//                         id=\"filled-basic\"\r\n//                         label=\"tz:\"\r\n//                         variant=\"filled\"\r\n//                         onChange={(e) => setUser({ tz: e.target.value, fullName:user.fullName, password: user.password, telephone:user.telephone })}\r\n//                         {...register(\"tz\", { required: \"field is required\", pattern: /^\\d{9}$/ })}\r\n//                     />\r\n//                     {errors.tz && <p>The id number is incorrect</p>}\r\n//                     {dirtyFields.tz && <p>✔️</p>}\r\n//                 </div>\r\n//                 <br />\r\n//                 <div>\r\n//                     <TextField\r\n//                         id=\"filled-basic\"\r\n//                         label=\"name:\"\r\n//                         variant=\"filled\"\r\n//                         onChange={(e) => setUser({ tz: user.tz, fullName:e.target.value, password: user.password, telephone:user.telephone})}\r\n//                         {...register(\"name\", { required: \"field is required\", pattern: /^[A-Za-z]+$/i })}\r\n//                     />\r\n//                     {errors.name?.type === 'required' && <p>{errors.name.message}</p>}\r\n//                     {errors.name?.type === 'pattern' && <p>enter in english</p>}\r\n//                     {dirtyFields.name && <p>✔️</p>}\r\n//                 </div>\r\n//                 <br />\r\n//                 <div>\r\n//                     <TextField\r\n//                         id=\"filled-basic\"\r\n//                         label=\"password:\"\r\n//                         type=\"password\"\r\n//                         variant=\"filled\"\r\n//                         onChange={(e) => setUser({ tz:user.tz,fullName:user.fullName, password:e.target.value, telephone:user.telephone ,city:user.city,street:user.street,houseNumber:user.houseNumber})}\r\n//                         {...register(\"password\",{required: \"field is required\"})}\r\n//                     />\r\n//                    {errors.password?.type === 'required' && <p>{errors.password.message}</p>}\r\n//                     {dirtyFields.password && <p>✔️</p>}\r\n//                 </div>\r\n//                 <br />\r\n//                 <div>\r\n//                     <TextField\r\n//                         id=\"filled-basic\"\r\n//                         label=\"telephone:\"\r\n//                         type=\"telephone\"\r\n//                         variant=\"filled\"\r\n//                         onChange={(e) => setUser({ tz: user.tz,fullName:user.fullName, password: user.password, telephone:e.target.value})}\r\n//                         {...register(\"telephone\", {\r\n//                             required: 'enter a phone number',\r\n//                             pattern: {\r\n//                                 value: /^[0-9]{10}$/,\r\n//                                 message: 'the phone number is incorrect',\r\n//                             },\r\n//                         })}\r\n//                     />\r\n//                     {errors.telephone && <p>{errors.telephone.message}</p>}\r\n//                     {dirtyFields.telephone && <p>✔️</p>}\r\n//                 </div>\r\n//                 <br />\r\n//                 <div>\r\n//                     <TextField\r\n//                         id=\"filled-basic\"\r\n//                         label=\"mail:\"\r\n//                         type=\"email\"\r\n//                         variant=\"filled\"\r\n//                         onChange={(e) => setUser({ tz: user.tz, fullName:user.fullName, password: user.password, telephone:user.telephone})}\r\n//                         {...register(\"email\",{required: \"field is required\"})}\r\n//                     />\r\n//                     {dirtyFields.email && <p>✔️</p>}\r\n//                 </div>\r\n//                 <br />\r\n//                 <div>\r\n//                     <TextField\r\n//                         id=\"filled-basic\"\r\n//                         label=\"Confirm email:\"\r\n//                         type=\"email\"\r\n//                         variant=\"filled\"\r\n//                         {...register(\"confirmEmail\", {\r\n//                           validate: value => getValues('email') === value\r\n//                         })}\r\n//                     />\r\n//                     {errors.confirmEmail && <p>email is wrong</p>}\r\n//                 </div>\r\n//                 <input type=\"submit\"  />\r\n//             </form>\r\n//         </>\r\n//     );\r\n// }\r\n\r\n// export default SignIn;\r\n\r\n// import * as React from 'react';\r\n// import Avatar from '@mui/material/Avatar';\r\n// import Button from '@mui/material/Button';\r\n// import CssBaseline from '@mui/material/CssBaseline';\r\n// import TextField from '@mui/material/TextField';\r\n// import FormControlLabel from '@mui/material/FormControlLabel';\r\n// import Checkbox from '@mui/material/Checkbox';\r\n// import Link from '@mui/material/Link';\r\n// import Grid from '@mui/material/Grid';\r\n// import Box from '@mui/material/Box';\r\n// import LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\n// import Typography from '@mui/material/Typography';\r\n// import Container from '@mui/material/Container';\r\n// import { createTheme, ThemeProvider } from '@mui/material/styles';\r\n// import { useSelector, useDispatch } from 'react-redux'\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import {postUser} from '../../features/User/UserSlice';\r\n// import { Password } from '@mui/icons-material';\r\n// const defaultTheme = createTheme();\r\n\r\n// export default function SignIn() {\r\n\r\n//   let dis= useDispatch()\r\n\r\n//   let userAdd={\r\n//       tz:\"\",\r\n//       fullName:\"\",\r\n//       Password:\"\",\r\n//       telephone:\"\",\r\n//       city:\"\",\r\n//       street:\"\",\r\n//       houseNumber:\"\"\r\n//   }\r\n  \r\n//       const add=(e)=>{\r\n//           e.preventDefault()// מבטל ברירת מחדל \r\n//           dis(postUser(userAdd))\r\n//       }\r\n  return (\r\n<ThemeProvider theme={defaultTheme} onSubmit={handleSubmit(onSubmit)}>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: 'lightpink' }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign Up\r\n          </Typography>\r\n          <Box component=\"form\" noValidate \r\n           sx={{ mt: 3 }}>\r\n            <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  autoComplete=\"given-name\"\r\n                  name=\"tz\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"tz\"\r\n                  label=\" tz\"\r\n                  autoFocus\r\n                  onChange={(e) => setUser({ tz: e.target.value, fullName:user.fullName, password: user.password, telephone:user.telephone ,city:user.city,street:user.street,houseNumber:user.houseNumber})}\r\n                  {...register(\"tz\", { required: \"field is required\", pattern: /^\\d{9}$/ })}\r\n                  InputLabelProps={{\r\n                    style: { color: 'black' }, // Inline style for label\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  autoComplete=\"given-name\"\r\n                  name=\"fullName\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"fullName\"\r\n                  label=\" fullName\"\r\n                  autoFocus\r\n                  onChange={(e) => setUser({ tz: user.tz, fullName:e.target.value, password: user.password, telephone:user.telephone ,city:user.city,street:user.street,houseNumber:user.houseNumber})}\r\n                {...register(\"name\", { required: \"field is required\", pattern: /^[A-Za-z]+$/i })}\r\n                  InputLabelProps={{\r\n                    style: { color: 'black' }, // Inline style for label\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"new-password\"\r\n                   onChange={(e) => setUser({ tz:user.tz,fullName:user.fullName, password:e.target.value, telephone:user.telephone ,city:user.city,street:user.street,houseNumber:user.houseNumber})}\r\n                         {...register(\"password\",{required: \"field is required\"})}\r\n                  InputLabelProps={{\r\n                    style: { color: 'black' }, // Inline style for label\r\n                  }}\r\n                  \r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  name=\"telephone\"\r\n                  label=\"telephone\"\r\n                  type=\"telephone\"\r\n                  id=\"telephone\"\r\n                  autoComplete=\"new-telephone\"\r\n                  onChange={(e) => setUser({ tz: user.tz,fullName:user.fullName, password: user.password, telephone:e.target.value ,city:user.city,street:user.street,houseNumber:user.houseNumber})}\r\n                                           {...register(\"telephone\", {\r\n                                               required: 'enter a phone number',\r\n                                               pattern: {\r\n                                                   value: /^[0-9]{10}$/,\r\n                                                   message: 'the phone number is incorrect',\r\n                                               },\r\n                                           })}\r\n                  InputLabelProps={{\r\n                    style: { color: 'black' }, // Inline style for label\r\n                  }}\r\n                  \r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  name=\"city\"\r\n                  label=\"city\"\r\n                  type=\"city\"\r\n                  id=\"city\"\r\n                  autoComplete=\"new-city\"\r\n                  onChange={(e) => setUser({ tz: user.tz, fullName:user.fullName, password: user.password, telephone:user.telephone ,city:e.target.value,street:user.street,houseNumber:user.houseNumber})}\r\n                {...register(\"name\", { required: \"field is required\", pattern: /^[A-Za-z]+$/i })}\r\n                  InputLabelProps={{\r\n                    style: { color: 'black' }, // Inline style for label\r\n                  }}\r\n                  \r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  name=\"street\"\r\n                  label=\"street\"\r\n                  type=\"street\"\r\n                  id=\"street\"\r\n                  autoComplete=\"new-street\"\r\n                  onChange={(e) => setUser({ tz: user.tz, fullName:user.fullName, password: user.password, telephone:user.telephone ,city:user.city,street:e.target.value,houseNumber:user.houseNumber})}\r\n                {...register(\"name\", { required: \"field is required\", pattern: /^[A-Za-z]+$/i })}\r\n                  InputLabelProps={{\r\n                    style: { color: 'black' }, // Inline style for label\r\n                  }}\r\n                  \r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  name=\"houseNumber\"\r\n                  label=\"houseNumber\"\r\n                  type=\"houseNumber\"\r\n                  id=\"houseNumber\"\r\n                  autoComplete=\"new-houseNumber\"\r\n                  onChange={(e) => setUser({ tz: user.tz,fullName:user.fullName, password: user.password, telephone:user.telephone ,city:user.city,street:user.street,houseNumber:e.target.value})}\r\n                                           {...register(\"telephone\", {\r\n                                               required: 'enter a phone number',\r\n                                               pattern: {\r\n                                                   value: /^[0-9]$/,\r\n                                                   message: 'the number number is incorrect',\r\n                                               },\r\n                                           })}\r\n                  InputLabelProps={{\r\n                    style: { color: 'black' }, // Inline style for label\r\n                  }}\r\n                  \r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n            color='inherit'\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2, bgcolor:'lightpink' }}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n            <Grid container justifyContent=\"flex-end\">\r\n              <Grid item>\r\n                <Link  href=\"\\login\" style={{ color: 'pink' ,textDecoration:'none'}} >\r\n                  Already have an account? Sign in\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\n"],"mappings":";;AAAA,SAASA,OAAO,QAAQ,iBAAiB;AACzC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,gBAAgB,MAAM,gCAAgC;AAC7D,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,gBAAgB,MAAM,kCAAkC;AAC/D,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,WAAW,EAAEC,aAAa,QAAQ,sBAAsB;AACjE,SAASC,QAAQ,QAAQ,qBAAqB;AAC9C,SAASC,QAAQ,QAAO,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGxB,QAAQ,CAAC;IAAEyB,EAAE,EAAC,GAAG;IAACC,QAAQ,EAAC,GAAG;IAAEC,QAAQ,EAAC,GAAG;IAAEC,SAAS,EAAC;EAAG,CAAC,CAAC;EACrF,MAAMC,IAAI,GAAG3B,WAAW,CAAC4B,CAAC,IAAIA,CAAC,CAACC,KAAK,CAACC,OAAO,CAAC;EAC9C,MAAMC,WAAW,GAAG/B,WAAW,CAACgC,CAAC,IAAIA,CAAC,CAACH,KAAK,CAACE,WAAW,CAAC;EACzD,MAAME,QAAQ,GAAGlC,WAAW,CAAC,CAAC;EAC9B,MAAMmC,GAAG,GAACjC,WAAW,CAAC,CAAC;EAC3B,MAAMkC,YAAY,GAAGtB,WAAW,CAAC,CAAC;EAE9B,MAAM;IACFuB,QAAQ;IACRC,YAAY;IACZC,SAAS;IACTC,SAAS,EAAE;MAAEC,MAAM;MAAEC,WAAW;MAAEC;IAAQ;EAC9C,CAAC,GAAG/C,OAAO,CAAC;IAAEgD,IAAI,EAAE;EAAS,CAAC,CAAC;EAE/B,MAAMC,QAAQ,GAAIC,IAAI,IAAK;IACxB;IACC;IACA;IACAZ,QAAQ,CAACjB,QAAQ,CAAC;MAACO,EAAE,EAACsB,IAAI,CAACtB,EAAE;MAAEC,QAAQ,EAACqB,IAAI,CAACrB,QAAQ;MAAEC,QAAQ,EAACoB,IAAI,CAACpB,QAAQ;MAAEC,SAAS,EAACmB,IAAI,CAACnB;IAAS,CAAC,CAAC,CAAC;IAC1GoB,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;IACvBD,OAAO,CAACC,GAAG,CAAChB,WAAW,CAAC;IACvBG,GAAG,CAAC,OAAO,CAAC;IACb;IACA;EACJ,CAAC;;EAEL;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACE,oBACFhB,OAAA,CAACJ,aAAa;IAACkC,KAAK,EAAEb,YAAa;IAACS,QAAQ,EAAEP,YAAY,CAACO,QAAQ,CAAE;IAAAK,QAAA,eAC/D/B,OAAA,CAACN,SAAS;MAACsC,SAAS,EAAC,MAAM;MAACC,QAAQ,EAAC,IAAI;MAAAF,QAAA,gBACvC/B,OAAA,CAACd,WAAW;QAAAgD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACfrC,OAAA,CAACT,GAAG;QACF+C,EAAE,EAAE;UACFC,SAAS,EAAE,CAAC;UACZC,OAAO,EAAE,MAAM;UACfC,aAAa,EAAE,QAAQ;UACvBC,UAAU,EAAE;QACd,CAAE;QAAAX,QAAA,gBAEF/B,OAAA,CAAChB,MAAM;UAACsD,EAAE,EAAE;YAAEK,CAAC,EAAE,CAAC;YAAEC,OAAO,EAAE;UAAY,CAAE;UAAAb,QAAA,eACzC/B,OAAA,CAACR,gBAAgB;YAAA0C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd,CAAC,eACTrC,OAAA,CAACP,UAAU;UAACuC,SAAS,EAAC,IAAI;UAACa,OAAO,EAAC,IAAI;UAAAd,QAAA,EAAC;QAExC;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACbrC,OAAA,CAACT,GAAG;UAACyC,SAAS,EAAC,MAAM;UAACc,UAAU;UAC/BR,EAAE,EAAE;YAAES,EAAE,EAAE;UAAE,CAAE;UAAAhB,QAAA,gBACb/B,OAAA,CAACV,IAAI;YAAC0D,SAAS;YAACC,OAAO,EAAE,CAAE;YAAAlB,QAAA,gBAC3B/B,OAAA,CAACV,IAAI;cAAC4D,IAAI;cAACC,EAAE,EAAE,EAAG;cAACC,EAAE,EAAE,CAAE;cAAArB,QAAA,eACrB/B,OAAA,CAACtB,SAAS;gBACR2E,YAAY,EAAC,YAAY;gBACzBC,IAAI,EAAC,IAAI;gBACTC,QAAQ;gBACRC,SAAS;gBACTC,EAAE,EAAC,IAAI;gBACPC,KAAK,EAAC,KAAK;gBACXC,SAAS;gBACTC,QAAQ,EAAGC,CAAC,IAAKzD,OAAO,CAAC;kBAAEC,EAAE,EAAEwD,CAAC,CAACC,MAAM,CAACC,KAAK;kBAAEzD,QAAQ,EAACH,IAAI,CAACG,QAAQ;kBAAEC,QAAQ,EAAEJ,IAAI,CAACI,QAAQ;kBAAEC,SAAS,EAACL,IAAI,CAACK,SAAS;kBAAEwD,IAAI,EAAC7D,IAAI,CAAC6D,IAAI;kBAACC,MAAM,EAAC9D,IAAI,CAAC8D,MAAM;kBAACC,WAAW,EAAC/D,IAAI,CAAC+D;gBAAW,CAAC,CAAE;gBAAA,GACvLhD,QAAQ,CAAC,IAAI,EAAE;kBAAEqC,QAAQ,EAAE,mBAAmB;kBAAEY,OAAO,EAAE;gBAAU,CAAC,CAAC;gBACzEC,eAAe,EAAE;kBACfC,KAAK,EAAE;oBAAEC,KAAK,EAAE;kBAAQ,CAAC,CAAE;gBAC7B;cAAE;gBAAApC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,eACPrC,OAAA,CAACV,IAAI;cAAC4D,IAAI;cAACC,EAAE,EAAE,EAAG;cAACC,EAAE,EAAE,CAAE;cAAArB,QAAA,eACvB/B,OAAA,CAACtB,SAAS;gBACR2E,YAAY,EAAC,YAAY;gBACzBC,IAAI,EAAC,UAAU;gBACfC,QAAQ;gBACRC,SAAS;gBACTC,EAAE,EAAC,UAAU;gBACbC,KAAK,EAAC,WAAW;gBACjBC,SAAS;gBACTC,QAAQ,EAAGC,CAAC,IAAKzD,OAAO,CAAC;kBAAEC,EAAE,EAAEF,IAAI,CAACE,EAAE;kBAAEC,QAAQ,EAACuD,CAAC,CAACC,MAAM,CAACC,KAAK;kBAAExD,QAAQ,EAAEJ,IAAI,CAACI,QAAQ;kBAAEC,SAAS,EAACL,IAAI,CAACK,SAAS;kBAAEwD,IAAI,EAAC7D,IAAI,CAAC6D,IAAI;kBAACC,MAAM,EAAC9D,IAAI,CAAC8D,MAAM;kBAACC,WAAW,EAAC/D,IAAI,CAAC+D;gBAAW,CAAC,CAAE;gBAAA,GACnLhD,QAAQ,CAAC,MAAM,EAAE;kBAAEqC,QAAQ,EAAE,mBAAmB;kBAAEY,OAAO,EAAE;gBAAe,CAAC,CAAC;gBAC9EC,eAAe,EAAE;kBACfC,KAAK,EAAE;oBAAEC,KAAK,EAAE;kBAAQ,CAAC,CAAE;gBAC7B;cAAE;gBAAApC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,eACPrC,OAAA,CAACV,IAAI;cAAC4D,IAAI;cAACC,EAAE,EAAE,EAAG;cAAApB,QAAA,eAChB/B,OAAA,CAACtB,SAAS;gBACR6E,QAAQ;gBACRC,SAAS;gBACTF,IAAI,EAAC,UAAU;gBACfI,KAAK,EAAC,UAAU;gBAChBa,IAAI,EAAC,UAAU;gBACfd,EAAE,EAAC,UAAU;gBACbJ,YAAY,EAAC,cAAc;gBAC1BO,QAAQ,EAAGC,CAAC,IAAKzD,OAAO,CAAC;kBAAEC,EAAE,EAACF,IAAI,CAACE,EAAE;kBAACC,QAAQ,EAACH,IAAI,CAACG,QAAQ;kBAAEC,QAAQ,EAACsD,CAAC,CAACC,MAAM,CAACC,KAAK;kBAAEvD,SAAS,EAACL,IAAI,CAACK,SAAS;kBAAEwD,IAAI,EAAC7D,IAAI,CAAC6D,IAAI;kBAACC,MAAM,EAAC9D,IAAI,CAAC8D,MAAM;kBAACC,WAAW,EAAC/D,IAAI,CAAC+D;gBAAW,CAAC,CAAE;gBAAA,GACxKhD,QAAQ,CAAC,UAAU,EAAC;kBAACqC,QAAQ,EAAE;gBAAmB,CAAC,CAAC;gBAC/Da,eAAe,EAAE;kBACfC,KAAK,EAAE;oBAAEC,KAAK,EAAE;kBAAQ,CAAC,CAAE;gBAC7B;cAAE;gBAAApC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEH;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,eACPrC,OAAA,CAACV,IAAI;cAAC4D,IAAI;cAACC,EAAE,EAAE,EAAG;cAAApB,QAAA,eAChB/B,OAAA,CAACtB,SAAS;gBACR6E,QAAQ;gBACRC,SAAS;gBACTF,IAAI,EAAC,WAAW;gBAChBI,KAAK,EAAC,WAAW;gBACjBa,IAAI,EAAC,WAAW;gBAChBd,EAAE,EAAC,WAAW;gBACdJ,YAAY,EAAC,eAAe;gBAC5BO,QAAQ,EAAGC,CAAC,IAAKzD,OAAO,CAAC;kBAAEC,EAAE,EAAEF,IAAI,CAACE,EAAE;kBAACC,QAAQ,EAACH,IAAI,CAACG,QAAQ;kBAAEC,QAAQ,EAAEJ,IAAI,CAACI,QAAQ;kBAAEC,SAAS,EAACqD,CAAC,CAACC,MAAM,CAACC,KAAK;kBAAEC,IAAI,EAAC7D,IAAI,CAAC6D,IAAI;kBAACC,MAAM,EAAC9D,IAAI,CAAC8D,MAAM;kBAACC,WAAW,EAAC/D,IAAI,CAAC+D;gBAAW,CAAC,CAAE;gBAAA,GACtJhD,QAAQ,CAAC,WAAW,EAAE;kBACtBqC,QAAQ,EAAE,sBAAsB;kBAChCY,OAAO,EAAE;oBACLJ,KAAK,EAAE,aAAa;oBACpBS,OAAO,EAAE;kBACb;gBACJ,CAAC,CAAC;gBAC3BJ,eAAe,EAAE;kBACfC,KAAK,EAAE;oBAAEC,KAAK,EAAE;kBAAQ,CAAC,CAAE;gBAC7B;cAAE;gBAAApC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEH;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,eAEPrC,OAAA,CAACV,IAAI;cAAC4D,IAAI;cAACC,EAAE,EAAE,EAAG;cAAApB,QAAA,eAChB/B,OAAA,CAACtB,SAAS;gBACR6E,QAAQ;gBACRC,SAAS;gBACTF,IAAI,EAAC,MAAM;gBACXI,KAAK,EAAC,MAAM;gBACZa,IAAI,EAAC,MAAM;gBACXd,EAAE,EAAC,MAAM;gBACTJ,YAAY,EAAC,UAAU;gBACvBO,QAAQ,EAAGC,CAAC,IAAKzD,OAAO,CAAC;kBAAEC,EAAE,EAAEF,IAAI,CAACE,EAAE;kBAAEC,QAAQ,EAACH,IAAI,CAACG,QAAQ;kBAAEC,QAAQ,EAAEJ,IAAI,CAACI,QAAQ;kBAAEC,SAAS,EAACL,IAAI,CAACK,SAAS;kBAAEwD,IAAI,EAACH,CAAC,CAACC,MAAM,CAACC,KAAK;kBAACE,MAAM,EAAC9D,IAAI,CAAC8D,MAAM;kBAACC,WAAW,EAAC/D,IAAI,CAAC+D;gBAAW,CAAC,CAAE;gBAAA,GACvLhD,QAAQ,CAAC,MAAM,EAAE;kBAAEqC,QAAQ,EAAE,mBAAmB;kBAAEY,OAAO,EAAE;gBAAe,CAAC,CAAC;gBAC9EC,eAAe,EAAE;kBACfC,KAAK,EAAE;oBAAEC,KAAK,EAAE;kBAAQ,CAAC,CAAE;gBAC7B;cAAE;gBAAApC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEH;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,eACPrC,OAAA,CAACV,IAAI;cAAC4D,IAAI;cAACC,EAAE,EAAE,EAAG;cAAApB,QAAA,eAChB/B,OAAA,CAACtB,SAAS;gBACR6E,QAAQ;gBACRC,SAAS;gBACTF,IAAI,EAAC,QAAQ;gBACbI,KAAK,EAAC,QAAQ;gBACda,IAAI,EAAC,QAAQ;gBACbd,EAAE,EAAC,QAAQ;gBACXJ,YAAY,EAAC,YAAY;gBACzBO,QAAQ,EAAGC,CAAC,IAAKzD,OAAO,CAAC;kBAAEC,EAAE,EAAEF,IAAI,CAACE,EAAE;kBAAEC,QAAQ,EAACH,IAAI,CAACG,QAAQ;kBAAEC,QAAQ,EAAEJ,IAAI,CAACI,QAAQ;kBAAEC,SAAS,EAACL,IAAI,CAACK,SAAS;kBAAEwD,IAAI,EAAC7D,IAAI,CAAC6D,IAAI;kBAACC,MAAM,EAACJ,CAAC,CAACC,MAAM,CAACC,KAAK;kBAACG,WAAW,EAAC/D,IAAI,CAAC+D;gBAAW,CAAC,CAAE;gBAAA,GACrLhD,QAAQ,CAAC,MAAM,EAAE;kBAAEqC,QAAQ,EAAE,mBAAmB;kBAAEY,OAAO,EAAE;gBAAe,CAAC,CAAC;gBAC9EC,eAAe,EAAE;kBACfC,KAAK,EAAE;oBAAEC,KAAK,EAAE;kBAAQ,CAAC,CAAE;gBAC7B;cAAE;gBAAApC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEH;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,eAEPrC,OAAA,CAACV,IAAI;cAAC4D,IAAI;cAACC,EAAE,EAAE,EAAG;cAAApB,QAAA,eAChB/B,OAAA,CAACtB,SAAS;gBACR6E,QAAQ;gBACRC,SAAS;gBACTF,IAAI,EAAC,aAAa;gBAClBI,KAAK,EAAC,aAAa;gBACnBa,IAAI,EAAC,aAAa;gBAClBd,EAAE,EAAC,aAAa;gBAChBJ,YAAY,EAAC,iBAAiB;gBAC9BO,QAAQ,EAAGC,CAAC,IAAKzD,OAAO,CAAC;kBAAEC,EAAE,EAAEF,IAAI,CAACE,EAAE;kBAACC,QAAQ,EAACH,IAAI,CAACG,QAAQ;kBAAEC,QAAQ,EAAEJ,IAAI,CAACI,QAAQ;kBAAEC,SAAS,EAACL,IAAI,CAACK,SAAS;kBAAEwD,IAAI,EAAC7D,IAAI,CAAC6D,IAAI;kBAACC,MAAM,EAAC9D,IAAI,CAAC8D,MAAM;kBAACC,WAAW,EAACL,CAAC,CAACC,MAAM,CAACC;gBAAK,CAAC,CAAE;gBAAA,GACpJ7C,QAAQ,CAAC,WAAW,EAAE;kBACtBqC,QAAQ,EAAE,sBAAsB;kBAChCY,OAAO,EAAE;oBACLJ,KAAK,EAAE,SAAS;oBAChBS,OAAO,EAAE;kBACb;gBACJ,CAAC,CAAC;gBAC3BJ,eAAe,EAAE;kBACfC,KAAK,EAAE;oBAAEC,KAAK,EAAE;kBAAQ,CAAC,CAAE;gBAC7B;cAAE;gBAAApC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEH;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eACPrC,OAAA,CAACf,MAAM;YACPqF,KAAK,EAAC,SAAS;YACbC,IAAI,EAAC,QAAQ;YACbf,SAAS;YACTX,OAAO,EAAC,WAAW;YACnBP,EAAE,EAAE;cAAES,EAAE,EAAE,CAAC;cAAE0B,EAAE,EAAE,CAAC;cAAE7B,OAAO,EAAC;YAAY,CAAE;YAAAb,QAAA,EAC3C;UAED;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTrC,OAAA,CAACV,IAAI;YAAC0D,SAAS;YAAC0B,cAAc,EAAC,UAAU;YAAA3C,QAAA,eACvC/B,OAAA,CAACV,IAAI;cAAC4D,IAAI;cAAAnB,QAAA,eACR/B,OAAA,CAACX,IAAI;gBAAEsF,IAAI,EAAC,SAAQ;gBAACN,KAAK,EAAE;kBAAEC,KAAK,EAAE,MAAM;kBAAEM,cAAc,EAAC;gBAAM,CAAE;gBAAA7C,QAAA,EAAE;cAEtE;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEpB,CAAC;AAAAnC,EAAA,CA3UKD,MAAM;EAAA,QAEKnB,WAAW,EACJA,WAAW,EACdD,WAAW,EAClBE,WAAW,EAQjBN,OAAO;AAAA;AAAAoG,EAAA,GAbT5E,MAAM;AAAA,IAAA4E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
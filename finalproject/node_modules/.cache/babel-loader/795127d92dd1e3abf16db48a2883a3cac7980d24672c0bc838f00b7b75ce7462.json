{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05E9\\u05D9\\u05E4\\u05D9 \\u05D5\\u05D9\\u05E0\\u05D2\\u05E8\\u05D8\\u05DF\\\\Pictures\\\\Saved Pictures\\\\\\u05E1\\u05DE\\u05D9\\u05E0\\u05E8\\\\\\u05DB\\u05D9\\u05EA\\u05D4 \\u05D9\\u05D3\\\\\\u05EA\\u05DB\\u05E0\\u05D5\\u05EA\\\\react\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05E7\\u05D8\\\\finalproject\\\\src\\\\components\\\\screens\\\\user\\\\SignIn.js\",\n  _s = $RefreshSig$();\nimport { useForm } from \"react-hook-form\";\nimport TextField from '@mui/material/TextField';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from \"react-router-dom\";\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { Password } from '@mui/icons-material';\nimport { postUser } from '../../features//User/UserSlice';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SignIn = () => {\n  _s();\n  var _errors$name, _errors$name2, _errors$password, _errors$address, _errors$name3;\n  const [user, setUser] = useState({\n    tz: \" \",\n    name: \" \",\n    password: \" \",\n    telephone: \" \",\n    address: \"\"\n  });\n  const arrU = useSelector(x => x.users.arrUser);\n  const currentUser = useSelector(u => u.users.currentUser);\n  const dispatch = useDispatch();\n  const nav = useNavigate();\n  const defaultTheme = createTheme();\n  const {\n    register,\n    handleSubmit,\n    getValues,\n    formState: {\n      errors,\n      dirtyFields,\n      isValid\n    }\n  } = useForm({\n    mode: 'onBlur'\n  });\n  const onSubmit = data => {\n    dispatch(postUser({\n      tz: data.tz,\n      name: data.name,\n      password: data.password,\n      telephone: data.telephone,\n      address: data.address\n    }));\n    console.log(\"add user\");\n    console.log(currentUser);\n    nav('/user');\n    // כאן תוכל להוסיף את הלוגיקה שלך לטיפול בהגשת הטופס\n    // לדוג', שליחת המידע לשרת או עדכון המצב באפליקציה\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      marginTop: 8,\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Avatar, {\n      sx: {\n        m: 1,\n        bgcolor: 'lightpink'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        maxWidth: 400,\n        margin: 'auto',\n        padding: 3,\n        boxShadow: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h2\",\n        gutterBottom: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"filled-basic\",\n            label: \"tz:\",\n            variant: \"outlined\",\n            fullWidth: true,\n            margin: \"normal\",\n            onChange: e => setUser({\n              tz: e.target.value,\n              name: user.name,\n              password: user.password,\n              telephone: user.telephone,\n              address: user.address\n            }),\n            ...register(\"tz\", {\n              required: \"field is required\",\n              pattern: /^\\d{9}$/\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this), errors.tz && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"The id number is incorrect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 35\n          }, this), dirtyFields.tz && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u2714\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 40\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"filled-basic\",\n            label: \"name:\",\n            variant: \"outlined\",\n            fullWidth: true,\n            margin: \"normal\",\n            onChange: e => setUser({\n              tz: user.tz,\n              name: e.target.value,\n              password: user.password,\n              telephone: user.telephone,\n              address: user.address\n            }),\n            ...register(\"name\", {\n              required: \"field is required\",\n              pattern: /^[A-Za-z]+$/i\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this), ((_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.type) === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors.name.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 58\n          }, this), ((_errors$name2 = errors.name) === null || _errors$name2 === void 0 ? void 0 : _errors$name2.type) === 'pattern' && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"enter in english\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 57\n          }, this), dirtyFields.name && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u2714\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"filled-basic\",\n            label: \"password:\",\n            type: \"password\",\n            variant: \"outlined\",\n            fullWidth: true,\n            margin: \"normal\",\n            onChange: e => setUser({\n              tz: user.tz,\n              name: user.name,\n              password: e.target.value,\n              telephone: user.telephone,\n              address: user.address\n            }),\n            ...register(\"password\", {\n              required: \"field is required\"\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this), ((_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.type) === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors.password.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 61\n          }, this), dirtyFields.password && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u2714\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"filled-basic\",\n            label: \"telephone:\",\n            type: \"telephone\",\n            variant: \"outlined\",\n            fullWidth: true,\n            margin: \"normal\",\n            onChange: e => setUser({\n              tz: user.tz,\n              name: user.name,\n              password: user.password,\n              telephone: e.target.value,\n              address: user.address\n            }),\n            ...register(\"telephone\", {\n              required: 'enter a phone number',\n              pattern: {\n                value: /^[0-9]{10}$/,\n                message: 'the phone number is incorrect'\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }, this), errors.telephone && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors.telephone.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 42\n          }, this), dirtyFields.telephone && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u2714\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 47\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            fullWidth: true,\n            margin: \"normal\",\n            id: \"filled-basic\",\n            label: \"address:\",\n            onChange: e => setUser({\n              tz: user.tz,\n              name: user.name,\n              password: user.password,\n              telephone: user.telephone,\n              address: e.target.value\n            }),\n            ...register(\"address\", {\n              required: \"field is required\",\n              pattern: /^[A-Za-z]+$/i\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 21\n          }, this), ((_errors$address = errors.address) === null || _errors$address === void 0 ? void 0 : _errors$address.type) === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors.address.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 61\n          }, this), ((_errors$name3 = errors.name) === null || _errors$name3 === void 0 ? void 0 : _errors$name3.type) === 'pattern' && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"enter in english\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 57\n          }, this), dirtyFields.name && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u2714\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"inherit\",\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          sx: {\n            mt: 3,\n            mb: 2,\n            bgcolor: 'lightpink'\n          },\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 1\n    }, this), \"            \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(SignIn, \"tohuF2cOoQ4muFzlhmmxh0J5dW8=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useNavigate, useForm];\n});\n_c = SignIn;\nexport default SignIn;\n\n// import * as React from 'react';\n// import Avatar from '@mui/material/Avatar';\n// import Button from '@mui/material/Button';\n// import CssBaseline from '@mui/material/CssBaseline';\n// import TextField from '@mui/material/TextField';\n// import FormControlLabel from '@mui/material/FormControlLabel';\n// import Checkbox from '@mui/material/Checkbox';\n// import Link from '@mui/material/Link';\n// import Grid from '@mui/material/Grid';\n// import Box from '@mui/material/Box';\n// import LockOutlinedIcon from '@mui/icons-material/LockOutlined';\n// import Typography from '@mui/material/Typography';\n// import Container from '@mui/material/Container';\n// import { createTheme, ThemeProvider } from '@mui/material/styles';\n// import { useSelector, useDispatch } from 'react-redux'\n// import { useNavigate } from \"react-router-dom\";\n// import {postUser} from '../../features/User/UserSlice';\n// import { Password } from '@mui/icons-material';\n// const defaultTheme = createTheme();\n\n// export default function SignIn() {\n\n//   let dis= useDispatch()\n\n//   let userAdd={\n//       tz:\"\",\n//       name:\"\",\n//       Password:\"\",\n//       telephone:\"\",\n//       city:\"\",\n//       street:\"\",\n//       houseNumber:\"\"\n//   }\n\n//       const add=(e)=>{\n//           e.preventDefault()// מבטל ברירת מחדל \n//           dis(postUser(userAdd))\n//       }\n//   return (\n// <ThemeProvider theme={defaultTheme} onSubmit={handleSubmit(onSubmit)}>\n//       <Container component=\"main\" maxWidth=\"xs\">\n//         <CssBaseline />\n//         <Box\n//           sx={{\n//             marginTop: 8,\n//             display: 'flex',\n//             flexDirection: 'column',\n//             alignItems: 'center',\n//           }}\n//         >\n//           <Avatar sx={{ m: 1, bgcolor: 'lightpink' }}>\n//             <LockOutlinedIcon />\n//           </Avatar>\n//           <Typography component=\"h1\" variant=\"h5\">\n//             Sign Up\n//           </Typography>\n//           <Box component=\"form\" noValidate \n//            sx={{ mt: 3 }}>\n//             <Grid container spacing={2}>\n//             <Grid item xs={12} sm={6}>\n//                 <TextField\n//                   autoComplete=\"given-name\"\n//                   name=\"tz\"\n//                   required\n//                   fullWidth\n//                   id=\"tz\"\n//                   label=\" tz\"\n//                   autoFocus\n//                   onChange={(e) => setUser({ tz: e.target.value, name:user.name, password: user.password, telephone:user.telephone ,city:user.city,street:user.street,houseNumber:user.houseNumber})}\n//                   {...register(\"tz\", { required: \"field is required\", pattern: /^\\d{9}$/ })}\n//                   InputLabelProps={{\n//                     style: { color: 'black' }, // Inline style for label\n//                   }}\n//                 />\n//               </Grid>\n//               <Grid item xs={12} sm={6}>\n//                 <TextField\n//                   autoComplete=\"given-name\"\n//                   name=\"name\"\n//                   required\n//                   fullWidth\n//                   id=\"name\"\n//                   label=\" name\"\n//                   autoFocus\n//                   onChange={(e) => setUser({ tz: user.tz, name:e.target.value, password: user.password, telephone:user.telephone ,city:user.city,street:user.street,houseNumber:user.houseNumber})}\n//                 {...register(\"name\", { required: \"field is required\", pattern: /^[A-Za-z]+$/i })}\n//                   InputLabelProps={{\n//                     style: { color: 'black' }, // Inline style for label\n//                   }}\n//                 />\n//               </Grid>\n//               <Grid item xs={12}>\n//                 <TextField\n//                   required\n//                   fullWidth\n//                   name=\"password\"\n//                   label=\"Password\"\n//                   type=\"password\"\n//                   id=\"password\"\n//                   autoComplete=\"new-password\"\n//                    onChange={(e) => setUser({ tz:user.tz,name:user.name, password:e.target.value, telephone:user.telephone ,city:user.city,street:user.street,houseNumber:user.houseNumber})}\n//                          {...register(\"password\",{required: \"field is required\"})}\n//                   InputLabelProps={{\n//                     style: { color: 'black' }, // Inline style for label\n//                   }}\n\n//                 />\n//               </Grid>\n//               <Grid item xs={12}>\n//                 <TextField\n//                   required\n//                   fullWidth\n//                   name=\"telephone\"\n//                   label=\"telephone\"\n//                   type=\"telephone\"\n//                   id=\"telephone\"\n//                   autoComplete=\"new-telephone\"\n//                   onChange={(e) => setUser({ tz: user.tz,name:user.name, password: user.password, telephone:e.target.value ,city:user.city,street:user.street,houseNumber:user.houseNumber})}\n//                                            {...register(\"telephone\", {\n//                                                required: 'enter a phone number',\n//                                                pattern: {\n//                                                    value: /^[0-9]{10}$/,\n//                                                    message: 'the phone number is incorrect',\n//                                                },\n//                                            })}\n//                   InputLabelProps={{\n//                     style: { color: 'black' }, // Inline style for label\n//                   }}\n\n//                 />\n//               </Grid>\n\n//               <Grid item xs={12}>\n//                 <TextField\n//                   required\n//                   fullWidth\n//                   name=\"city\"\n//                   label=\"city\"\n//                   type=\"city\"\n//                   id=\"city\"\n//                   autoComplete=\"new-city\"\n//                   onChange={(e) => setUser({ tz: user.tz, name:user.name, password: user.password, telephone:user.telephone ,city:e.target.value,street:user.street,houseNumber:user.houseNumber})}\n//                 {...register(\"name\", { required: \"field is required\", pattern: /^[A-Za-z]+$/i })}\n//                   InputLabelProps={{\n//                     style: { color: 'black' }, // Inline style for label\n//                   }}\n\n//                 />\n//               </Grid>\n//               <Grid item xs={12}>\n//                 <TextField\n//                   required\n//                   fullWidth\n//                   name=\"street\"\n//                   label=\"street\"\n//                   type=\"street\"\n//                   id=\"street\"\n//                   autoComplete=\"new-street\"\n//                   onChange={(e) => setUser({ tz: user.tz, name:user.name, password: user.password, telephone:user.telephone ,city:user.city,street:e.target.value,houseNumber:user.houseNumber})}\n//                 {...register(\"name\", { required: \"field is required\", pattern: /^[A-Za-z]+$/i })}\n//                   InputLabelProps={{\n//                     style: { color: 'black' }, // Inline style for label\n//                   }}\n\n//                 />\n//               </Grid>\n\n//               <Grid item xs={12}>\n//                 <TextField\n//                   required\n//                   fullWidth\n//                   name=\"houseNumber\"\n//                   label=\"houseNumber\"\n//                   type=\"houseNumber\"\n//                   id=\"houseNumber\"\n//                   autoComplete=\"new-houseNumber\"\n//                   onChange={(e) => setUser({ tz: user.tz,name:user.name, password: user.password, telephone:user.telephone ,city:user.city,street:user.street,houseNumber:e.target.value})}\n//                                            {...register(\"telephone\", {\n//                                                required: 'enter a phone number',\n//                                                pattern: {\n//                                                    value: /^[0-9]$/,\n//                                                    message: 'the number number is incorrect',\n//                                                },\n//                                            })}\n//                   InputLabelProps={{\n//                     style: { color: 'black' }, // Inline style for label\n//                   }}\n\n//                 />\n//               </Grid>\n//             </Grid>\n//             <Button\n//             color='inherit'\n//               type=\"submit\"\n//               fullWidth\n//               variant=\"contained\"\n//               sx={{ mt: 3, mb: 2, bgcolor:'lightpink' }}\n//             >\n//               Sign Up\n//             </Button>\n//             <Grid container justifyContent=\"flex-end\">\n//               <Grid item>\n//                 <Link  href=\"\\login\" style={{ color: 'pink' ,textDecoration:'none'}} >\n//                   Already have an account? Sign in\n//                 </Link>\n//               </Grid>\n//             </Grid>\n//           </Box>\n//         </Box>\n//       </Container>\n//     </ThemeProvider>\n//   );\n// }\n// export default SignIn;\nvar _c;\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"names":["useForm","TextField","React","useState","useDispatch","useSelector","useNavigate","Avatar","Button","CssBaseline","FormControlLabel","Checkbox","Link","Grid","Box","LockOutlinedIcon","Typography","Container","createTheme","ThemeProvider","Password","postUser","jsxDEV","_jsxDEV","Fragment","_Fragment","SignIn","_s","_errors$name","_errors$name2","_errors$password","_errors$address","_errors$name3","user","setUser","tz","name","password","telephone","address","arrU","x","users","arrUser","currentUser","u","dispatch","nav","defaultTheme","register","handleSubmit","getValues","formState","errors","dirtyFields","isValid","mode","onSubmit","data","console","log","sx","marginTop","display","flexDirection","alignItems","children","m","bgcolor","fileName","_jsxFileName","lineNumber","columnNumber","component","variant","maxWidth","margin","padding","boxShadow","gutterBottom","id","label","fullWidth","onChange","e","target","value","required","pattern","type","message","color","mt","mb","_c","$RefreshReg$"],"sources":["C:/Users/שיפי וינגרטן/Pictures/Saved Pictures/סמינר/כיתה יד/תכנות/react/פרויקט/finalproject/src/components/screens/user/SignIn.js"],"sourcesContent":["import { useForm } from \"react-hook-form\";\r\nimport TextField from '@mui/material/TextField';\r\nimport React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { Password } from '@mui/icons-material';\r\nimport { postUser} from '../../features//User/UserSlice';\r\n\r\nconst SignIn = () => {\r\n    const [user, setUser] = useState({ tz:\" \",name:\" \", password:\" \" ,telephone:\" \",address:\"\"});\r\n    const arrU = useSelector(x => x.users.arrUser);\r\n    const currentUser = useSelector(u => u.users.currentUser);\r\n    const dispatch = useDispatch();\r\n    const nav=useNavigate()\r\nconst defaultTheme = createTheme();\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        getValues,\r\n        formState: { errors, dirtyFields, isValid },\r\n    } = useForm({ mode: 'onBlur' });\r\n\r\n    const onSubmit = (data) => {\r\n\r\n        dispatch(postUser({tz:data.tz, name:data.name, password:data.password, telephone:data.telephone,address:data.address}))\r\n        console.log(\"add user\")\r\n        console.log(currentUser)\r\n         nav('/user')\r\n        // כאן תוכל להוסיף את הלוגיקה שלך לטיפול בהגשת הטופס\r\n        // לדוג', שליחת המידע לשרת או עדכון המצב באפליקציה\r\n    };\r\n\r\n    return (\r\n        <Box\r\n        sx={{\r\n          marginTop: 8,\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <Avatar sx={{ m: 1, bgcolor: 'lightpink' }}>\r\n          {/* <LockOutlinedIcon /> */}\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\" >\r\n          Log In\r\n        </Typography>\r\n<Box sx={{ maxWidth: 400, margin: 'auto', padding: 3, boxShadow: 3 }}>\r\n<Typography variant=\"h5\" component=\"h2\" gutterBottom>\r\n</Typography>         \r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <>\r\n                    <TextField\r\n                        id=\"filled-basic\"\r\n                        label=\"tz:\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        margin=\"normal\"                        onChange={(e) => setUser({ tz: e.target.value, name:user.name, password: user.password, telephone:user.telephone ,address:user.address})}\r\n                        {...register(\"tz\", { required: \"field is required\", pattern: /^\\d{9}$/ })}\r\n                    />\r\n                    {errors.tz && <p>The id number is incorrect</p>}\r\n                    {dirtyFields.tz && <p>✔️</p>}\r\n                </>\r\n                <>\r\n                    <TextField\r\n                        id=\"filled-basic\"\r\n                        label=\"name:\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        margin=\"normal\"                        onChange={(e) => setUser({ tz: user.tz, name:e.target.value, password: user.password, telephone:user.telephone,address:user.address})}\r\n                        {...register(\"name\", { required: \"field is required\", pattern: /^[A-Za-z]+$/i })}\r\n                    />\r\n                    {errors.name?.type === 'required' && <p>{errors.name.message}</p>}\r\n                    {errors.name?.type === 'pattern' && <p>enter in english</p>}\r\n                    {dirtyFields.name && <p>✔️</p>}\r\n                </>\r\n                <>\r\n                    <TextField\r\n                        id=\"filled-basic\"\r\n                        label=\"password:\"\r\n                        type=\"password\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        margin=\"normal\"                        onChange={(e) => setUser({ tz:user.tz,name:user.name, password:e.target.value, telephone:user.telephone,address:user.address})}\r\n                        {...register(\"password\",{required: \"field is required\"})}\r\n                    />\r\n                   {errors.password?.type === 'required' && <p>{errors.password.message}</p>}\r\n                    {dirtyFields.password && <p>✔️</p>}\r\n                </>\r\n                <>\r\n                    <TextField\r\n                        id=\"filled-basic\"\r\n                        label=\"telephone:\"\r\n                        type=\"telephone\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        margin=\"normal\"                        onChange={(e) => setUser({ tz: user.tz,name:user.name, password: user.password, telephone:e.target.value,address:user.address})}\r\n                        {...register(\"telephone\", {\r\n                            required: 'enter a phone number',\r\n                            pattern: {\r\n                                value: /^[0-9]{10}$/,\r\n                                message: 'the phone number is incorrect',\r\n                            },\r\n                        })}\r\n                    />\r\n                    {errors.telephone && <p>{errors.telephone.message}</p>}\r\n                    {dirtyFields.telephone && <p>✔️</p>}\r\n                </>\r\n                <>\r\n                    <TextField\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              margin=\"normal\"\r\n                        id=\"filled-basic\"\r\n                        label=\"address:\"\r\n                        onChange={(e) => setUser({ tz: user.tz, name:user.name, password: user.password, telephone:user.telephone,address:e.target.value})}\r\n                        {...register(\"address\", { required: \"field is required\", pattern: /^[A-Za-z]+$/i })}\r\n                    />\r\n                    {errors.address?.type === 'required' && <p>{errors.address.message}</p>}\r\n                    {errors.name?.type === 'pattern' && <p>enter in english</p>}\r\n                    {dirtyFields.name && <p>✔️</p>}\r\n                </>\r\n               \r\n                <Button\r\n              color='inherit'\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2,bgcolor:'lightpink' }}\r\n            >\r\n              Sign In\r\n            </Button> \r\n                       </form>\r\n            </Box>            </Box>\r\n\r\n        \r\n    );\r\n}\r\n\r\nexport default SignIn;\r\n\r\n// import * as React from 'react';\r\n// import Avatar from '@mui/material/Avatar';\r\n// import Button from '@mui/material/Button';\r\n// import CssBaseline from '@mui/material/CssBaseline';\r\n// import TextField from '@mui/material/TextField';\r\n// import FormControlLabel from '@mui/material/FormControlLabel';\r\n// import Checkbox from '@mui/material/Checkbox';\r\n// import Link from '@mui/material/Link';\r\n// import Grid from '@mui/material/Grid';\r\n// import Box from '@mui/material/Box';\r\n// import LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\n// import Typography from '@mui/material/Typography';\r\n// import Container from '@mui/material/Container';\r\n// import { createTheme, ThemeProvider } from '@mui/material/styles';\r\n// import { useSelector, useDispatch } from 'react-redux'\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import {postUser} from '../../features/User/UserSlice';\r\n// import { Password } from '@mui/icons-material';\r\n// const defaultTheme = createTheme();\r\n\r\n// export default function SignIn() {\r\n\r\n//   let dis= useDispatch()\r\n\r\n//   let userAdd={\r\n//       tz:\"\",\r\n//       name:\"\",\r\n//       Password:\"\",\r\n//       telephone:\"\",\r\n//       city:\"\",\r\n//       street:\"\",\r\n//       houseNumber:\"\"\r\n//   }\r\n  \r\n//       const add=(e)=>{\r\n//           e.preventDefault()// מבטל ברירת מחדל \r\n//           dis(postUser(userAdd))\r\n//       }\r\n//   return (\r\n// <ThemeProvider theme={defaultTheme} onSubmit={handleSubmit(onSubmit)}>\r\n//       <Container component=\"main\" maxWidth=\"xs\">\r\n//         <CssBaseline />\r\n//         <Box\r\n//           sx={{\r\n//             marginTop: 8,\r\n//             display: 'flex',\r\n//             flexDirection: 'column',\r\n//             alignItems: 'center',\r\n//           }}\r\n//         >\r\n//           <Avatar sx={{ m: 1, bgcolor: 'lightpink' }}>\r\n//             <LockOutlinedIcon />\r\n//           </Avatar>\r\n//           <Typography component=\"h1\" variant=\"h5\">\r\n//             Sign Up\r\n//           </Typography>\r\n//           <Box component=\"form\" noValidate \r\n//            sx={{ mt: 3 }}>\r\n//             <Grid container spacing={2}>\r\n//             <Grid item xs={12} sm={6}>\r\n//                 <TextField\r\n//                   autoComplete=\"given-name\"\r\n//                   name=\"tz\"\r\n//                   required\r\n//                   fullWidth\r\n//                   id=\"tz\"\r\n//                   label=\" tz\"\r\n//                   autoFocus\r\n//                   onChange={(e) => setUser({ tz: e.target.value, name:user.name, password: user.password, telephone:user.telephone ,city:user.city,street:user.street,houseNumber:user.houseNumber})}\r\n//                   {...register(\"tz\", { required: \"field is required\", pattern: /^\\d{9}$/ })}\r\n//                   InputLabelProps={{\r\n//                     style: { color: 'black' }, // Inline style for label\r\n//                   }}\r\n//                 />\r\n//               </Grid>\r\n//               <Grid item xs={12} sm={6}>\r\n//                 <TextField\r\n//                   autoComplete=\"given-name\"\r\n//                   name=\"name\"\r\n//                   required\r\n//                   fullWidth\r\n//                   id=\"name\"\r\n//                   label=\" name\"\r\n//                   autoFocus\r\n//                   onChange={(e) => setUser({ tz: user.tz, name:e.target.value, password: user.password, telephone:user.telephone ,city:user.city,street:user.street,houseNumber:user.houseNumber})}\r\n//                 {...register(\"name\", { required: \"field is required\", pattern: /^[A-Za-z]+$/i })}\r\n//                   InputLabelProps={{\r\n//                     style: { color: 'black' }, // Inline style for label\r\n//                   }}\r\n//                 />\r\n//               </Grid>\r\n//               <Grid item xs={12}>\r\n//                 <TextField\r\n//                   required\r\n//                   fullWidth\r\n//                   name=\"password\"\r\n//                   label=\"Password\"\r\n//                   type=\"password\"\r\n//                   id=\"password\"\r\n//                   autoComplete=\"new-password\"\r\n//                    onChange={(e) => setUser({ tz:user.tz,name:user.name, password:e.target.value, telephone:user.telephone ,city:user.city,street:user.street,houseNumber:user.houseNumber})}\r\n//                          {...register(\"password\",{required: \"field is required\"})}\r\n//                   InputLabelProps={{\r\n//                     style: { color: 'black' }, // Inline style for label\r\n//                   }}\r\n                  \r\n//                 />\r\n//               </Grid>\r\n//               <Grid item xs={12}>\r\n//                 <TextField\r\n//                   required\r\n//                   fullWidth\r\n//                   name=\"telephone\"\r\n//                   label=\"telephone\"\r\n//                   type=\"telephone\"\r\n//                   id=\"telephone\"\r\n//                   autoComplete=\"new-telephone\"\r\n//                   onChange={(e) => setUser({ tz: user.tz,name:user.name, password: user.password, telephone:e.target.value ,city:user.city,street:user.street,houseNumber:user.houseNumber})}\r\n//                                            {...register(\"telephone\", {\r\n//                                                required: 'enter a phone number',\r\n//                                                pattern: {\r\n//                                                    value: /^[0-9]{10}$/,\r\n//                                                    message: 'the phone number is incorrect',\r\n//                                                },\r\n//                                            })}\r\n//                   InputLabelProps={{\r\n//                     style: { color: 'black' }, // Inline style for label\r\n//                   }}\r\n                  \r\n//                 />\r\n//               </Grid>\r\n\r\n//               <Grid item xs={12}>\r\n//                 <TextField\r\n//                   required\r\n//                   fullWidth\r\n//                   name=\"city\"\r\n//                   label=\"city\"\r\n//                   type=\"city\"\r\n//                   id=\"city\"\r\n//                   autoComplete=\"new-city\"\r\n//                   onChange={(e) => setUser({ tz: user.tz, name:user.name, password: user.password, telephone:user.telephone ,city:e.target.value,street:user.street,houseNumber:user.houseNumber})}\r\n//                 {...register(\"name\", { required: \"field is required\", pattern: /^[A-Za-z]+$/i })}\r\n//                   InputLabelProps={{\r\n//                     style: { color: 'black' }, // Inline style for label\r\n//                   }}\r\n                  \r\n//                 />\r\n//               </Grid>\r\n//               <Grid item xs={12}>\r\n//                 <TextField\r\n//                   required\r\n//                   fullWidth\r\n//                   name=\"street\"\r\n//                   label=\"street\"\r\n//                   type=\"street\"\r\n//                   id=\"street\"\r\n//                   autoComplete=\"new-street\"\r\n//                   onChange={(e) => setUser({ tz: user.tz, name:user.name, password: user.password, telephone:user.telephone ,city:user.city,street:e.target.value,houseNumber:user.houseNumber})}\r\n//                 {...register(\"name\", { required: \"field is required\", pattern: /^[A-Za-z]+$/i })}\r\n//                   InputLabelProps={{\r\n//                     style: { color: 'black' }, // Inline style for label\r\n//                   }}\r\n                  \r\n//                 />\r\n//               </Grid>\r\n\r\n//               <Grid item xs={12}>\r\n//                 <TextField\r\n//                   required\r\n//                   fullWidth\r\n//                   name=\"houseNumber\"\r\n//                   label=\"houseNumber\"\r\n//                   type=\"houseNumber\"\r\n//                   id=\"houseNumber\"\r\n//                   autoComplete=\"new-houseNumber\"\r\n//                   onChange={(e) => setUser({ tz: user.tz,name:user.name, password: user.password, telephone:user.telephone ,city:user.city,street:user.street,houseNumber:e.target.value})}\r\n//                                            {...register(\"telephone\", {\r\n//                                                required: 'enter a phone number',\r\n//                                                pattern: {\r\n//                                                    value: /^[0-9]$/,\r\n//                                                    message: 'the number number is incorrect',\r\n//                                                },\r\n//                                            })}\r\n//                   InputLabelProps={{\r\n//                     style: { color: 'black' }, // Inline style for label\r\n//                   }}\r\n                  \r\n//                 />\r\n//               </Grid>\r\n//             </Grid>\r\n//             <Button\r\n//             color='inherit'\r\n//               type=\"submit\"\r\n//               fullWidth\r\n//               variant=\"contained\"\r\n//               sx={{ mt: 3, mb: 2, bgcolor:'lightpink' }}\r\n//             >\r\n//               Sign Up\r\n//             </Button>\r\n//             <Grid container justifyContent=\"flex-end\">\r\n//               <Grid item>\r\n//                 <Link  href=\"\\login\" style={{ color: 'pink' ,textDecoration:'none'}} >\r\n//                   Already have an account? Sign in\r\n//                 </Link>\r\n//               </Grid>\r\n//             </Grid>\r\n//           </Box>\r\n//         </Box>\r\n//       </Container>\r\n//     </ThemeProvider>\r\n//   );\r\n// }\r\n// export default SignIn;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
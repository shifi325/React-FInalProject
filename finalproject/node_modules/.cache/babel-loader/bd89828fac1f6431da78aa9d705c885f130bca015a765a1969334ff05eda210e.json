{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05E9\\u05D9\\u05E4\\u05D9 \\u05D5\\u05D9\\u05E0\\u05D2\\u05E8\\u05D8\\u05DF\\\\Pictures\\\\Saved Pictures\\\\\\u05E1\\u05DE\\u05D9\\u05E0\\u05E8\\\\\\u05DB\\u05D9\\u05EA\\u05D4 \\u05D9\\u05D3\\\\\\u05EA\\u05DB\\u05E0\\u05D5\\u05EA\\\\react\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05E7\\u05D8\\\\finalproject\\\\src\\\\components\\\\screens\\\\user\\\\SignIn.js\",\n  _s = $RefreshSig$();\nimport { useForm } from \"react-hook-form\";\nimport TextField from '@mui/material/TextField';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from \"react-router-dom\";\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { Password } from '@mui/icons-material';\nimport { postUser } from '../../features//User/UserSlice';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SignIn = () => {\n  _s();\n  var _errors$name, _errors$name2, _errors$password;\n  const [user, setUser] = useState({\n    tz: \" \",\n    fullName: \" \",\n    password: \" \",\n    telephone: \" \"\n  });\n  const arrU = useSelector(x => x.users.arrUser);\n  const currentUser = useSelector(u => u.users.currentUser);\n  const dispatch = useDispatch();\n  const nav = useNavigate();\n  const defaultTheme = createTheme();\n  const {\n    register,\n    handleSubmit,\n    getValues,\n    formState: {\n      errors,\n      dirtyFields,\n      isValid\n    }\n  } = useForm({\n    mode: 'onBlur'\n  });\n  const onSubmit = data => {\n    // event.preventDefault();\n    //const data = new FormData(event.currentTarget);\n    //dispatch(addUser({\"tz\":data.get('tz'), \"name\":data.get('name'), \"password\":data.get('password'),\"telephone\":data.get('telephone'), \"email\":data.get('email')}))//tz:data.tz, name:data.name, password:data.password, telephone:data.telephone, email:data.email\n    dispatch(postUser({\n      tz: data.tz,\n      fullName: data.fullName,\n      password: data.password,\n      telephone: data.telephone,\n      city: data.city,\n      street: data.street,\n      houseNumber: data.houseNumber\n    }));\n    console.log(\"add user\");\n    console.log(currentUser);\n    nav('/user');\n    // כאן תוכל להוסיף את הלוגיקה שלך לטיפול בהגשת הטופס\n    // לדוג', שליחת המידע לשרת או עדכון המצב באפליקציה\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"filled-basic\",\n          label: \"tz:\",\n          variant: \"filled\",\n          onChange: e => setUser({\n            tz: e.target.value,\n            fullName: user.fullName,\n            password: user.password,\n            telephone: user.telephone\n          }),\n          ...register(\"tz\", {\n            required: \"field is required\",\n            pattern: /^\\d{9}$/\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), errors.tz && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"The id number is incorrect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 35\n        }, this), dirtyFields.tz && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2714\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"filled-basic\",\n          label: \"name:\",\n          variant: \"filled\",\n          onChange: e => setUser({\n            tz: user.tz,\n            fullName: e.target.value,\n            password: user.password,\n            telephone: user.telephone\n          }),\n          ...register(\"name\", {\n            required: \"field is required\",\n            pattern: /^[A-Za-z]+$/i\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), ((_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.type) === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.name.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 58\n        }, this), ((_errors$name2 = errors.name) === null || _errors$name2 === void 0 ? void 0 : _errors$name2.type) === 'pattern' && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"enter in english\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 57\n        }, this), dirtyFields.name && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2714\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 42\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"filled-basic\",\n          label: \"password:\",\n          type: \"password\",\n          variant: \"filled\",\n          onChange: e => setUser({\n            tz: user.tz,\n            fullName: user.fullName,\n            password: e.target.value,\n            telephone: user.telephone,\n            city: user.city,\n            street: user.street,\n            houseNumber: user.houseNumber\n          }),\n          ...register(\"password\", {\n            required: \"field is required\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), ((_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.type) === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.password.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 61\n        }, this), dirtyFields.password && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2714\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 46\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"filled-basic\",\n          label: \"telephone:\",\n          type: \"telephone\",\n          variant: \"filled\",\n          onChange: e => setUser({\n            tz: user.tz,\n            fullName: user.fullName,\n            password: user.password,\n            telephone: e.target.value\n          }),\n          ...register(\"telephone\", {\n            required: 'enter a phone number',\n            pattern: {\n              value: /^[0-9]{10}$/,\n              message: 'the phone number is incorrect'\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), errors.telephone && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.telephone.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 42\n        }, this), dirtyFields.telephone && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2714\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"filled-basic\",\n          label: \"mail:\",\n          type: \"email\",\n          variant: \"filled\",\n          onChange: e => setUser({\n            tz: user.tz,\n            fullName: user.fullName,\n            password: user.password,\n            telephone: user.telephone\n          }),\n          ...register(\"email\", {\n            required: \"field is required\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), dirtyFields.email && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2714\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 43\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"filled-basic\",\n          label: \"Confirm email:\",\n          type: \"email\",\n          variant: \"filled\",\n          ...register(\"confirmEmail\", {\n            validate: value => getValues('email') === value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), errors.confirmEmail && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"email is wrong\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 45\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(SignIn, \"GcXpVi5HychB7usieGfYreqExpk=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useNavigate, useForm];\n});\n_c = SignIn;\nexport default SignIn;\n\n// import * as React from 'react';\n// import Avatar from '@mui/material/Avatar';\n// import Button from '@mui/material/Button';\n// import CssBaseline from '@mui/material/CssBaseline';\n// import TextField from '@mui/material/TextField';\n// import FormControlLabel from '@mui/material/FormControlLabel';\n// import Checkbox from '@mui/material/Checkbox';\n// import Link from '@mui/material/Link';\n// import Grid from '@mui/material/Grid';\n// import Box from '@mui/material/Box';\n// import LockOutlinedIcon from '@mui/icons-material/LockOutlined';\n// import Typography from '@mui/material/Typography';\n// import Container from '@mui/material/Container';\n// import { createTheme, ThemeProvider } from '@mui/material/styles';\n// import { useSelector, useDispatch } from 'react-redux'\n// import { useNavigate } from \"react-router-dom\";\n// import {postUser} from '../../features/User/UserSlice';\n// import { Password } from '@mui/icons-material';\n// const defaultTheme = createTheme();\n\n// export default function SignIn() {\n\n//   let dis= useDispatch()\n\n//   let userAdd={\n//       tz:\"\",\n//       fullName:\"\",\n//       Password:\"\",\n//       telephone:\"\",\n//       city:\"\",\n//       street:\"\",\n//       houseNumber:\"\"\n//   }\n\n//       const add=(e)=>{\n//           e.preventDefault()// מבטל ברירת מחדל \n//           dis(postUser(userAdd))\n//       }\n//   return (\n// <form  onSubmit={handleSubmit(onSubmit)}>\n//       <Container component=\"main\" maxWidth=\"xs\">\n//         <CssBaseline />\n//         <Box\n//           sx={{\n//             marginTop: 8,\n//             display: 'flex',\n//             flexDirection: 'column',\n//             alignItems: 'center',\n//           }}\n//         >\n//           <Avatar sx={{ m: 1, bgcolor: 'lightpink' }}>\n//             <LockOutlinedIcon />\n//           </Avatar>\n//           <Typography component=\"h1\" variant=\"h5\">\n//             Sign Up\n//           </Typography>\n//           <Box component=\"form\" noValidate \n//            sx={{ mt: 3 }}>\n//             <Grid container spacing={2}>\n//             <Grid item xs={12} sm={6}>\n//                 <TextField\n//                   autoComplete=\"given-name\"\n//                   name=\"tz\"\n//                   required\n//                   fullWidth\n//                   id=\"tz\"\n//                   label=\" tz\"\n//                   autoFocus\n//                   onChange={(e) => setUser({ tz: e.target.value, fullName:user.fullName, password: user.password, telephone:user.telephone ,city:user.city,street:user.street,houseNumber:user.houseNumber})}\n//                   {...register(\"tz\", { required: \"field is required\", pattern: /^\\d{9}$/ })}\n//                   InputLabelProps={{\n//                     style: { color: 'black' }, // Inline style for label\n//                   }}\n//                 />\n//               </Grid>\n//               <Grid item xs={12} sm={6}>\n//                 <TextField\n//                   autoComplete=\"given-name\"\n//                   name=\"fullName\"\n//                   required\n//                   fullWidth\n//                   id=\"fullName\"\n//                   label=\" fullName\"\n//                   autoFocus\n//                   onChange={(e) => setUser({ tz: user.tz, fullName:e.target.value, password: user.password, telephone:user.telephone ,city:user.city,street:user.street,houseNumber:user.houseNumber})}\n//                 {...register(\"name\", { required: \"field is required\", pattern: /^[A-Za-z]+$/i })}\n//                   InputLabelProps={{\n//                     style: { color: 'black' }, // Inline style for label\n//                   }}\n//                 />\n//               </Grid>\n//               <Grid item xs={12}>\n//                 <TextField\n//                   required\n//                   fullWidth\n//                   name=\"password\"\n//                   label=\"Password\"\n//                   type=\"password\"\n//                   id=\"password\"\n//                   autoComplete=\"new-password\"\n//                    onChange={(e) => setUser({ tz:user.tz,fullName:user.fullName, password:e.target.value, telephone:user.telephone ,city:user.city,street:user.street,houseNumber:user.houseNumber})}\n//                          {...register(\"password\",{required: \"field is required\"})}\n//                   InputLabelProps={{\n//                     style: { color: 'black' }, // Inline style for label\n//                   }}\n\n//                 />\n//               </Grid>\n//               <Grid item xs={12}>\n//                 <TextField\n//                   required\n//                   fullWidth\n//                   name=\"telephone\"\n//                   label=\"telephone\"\n//                   type=\"telephone\"\n//                   id=\"telephone\"\n//                   autoComplete=\"new-telephone\"\n//                   onChange={(e) => setUser({ tz: user.tz,fullName:user.fullName, password: user.password, telephone:e.target.value ,city:user.city,street:user.street,houseNumber:user.houseNumber})}\n//                                            {...register(\"telephone\", {\n//                                                required: 'enter a phone number',\n//                                                pattern: {\n//                                                    value: /^[0-9]{10}$/,\n//                                                    message: 'the phone number is incorrect',\n//                                                },\n//                                            })}\n//                   InputLabelProps={{\n//                     style: { color: 'black' }, // Inline style for label\n//                   }}\n\n//                 />\n//               </Grid>\n\n//               <Grid item xs={12}>\n//                 <TextField\n//                   required\n//                   fullWidth\n//                   name=\"city\"\n//                   label=\"city\"\n//                   type=\"city\"\n//                   id=\"city\"\n//                   autoComplete=\"new-city\"\n//                   onChange={(e) => setUser({ tz: user.tz, fullName:user.fullName, password: user.password, telephone:user.telephone ,city:e.target.value,street:user.street,houseNumber:user.houseNumber})}\n//                 {...register(\"name\", { required: \"field is required\", pattern: /^[A-Za-z]+$/i })}\n//                   InputLabelProps={{\n//                     style: { color: 'black' }, // Inline style for label\n//                   }}\n\n//                 />\n//               </Grid>\n//               <Grid item xs={12}>\n//                 <TextField\n//                   required\n//                   fullWidth\n//                   name=\"street\"\n//                   label=\"street\"\n//                   type=\"street\"\n//                   id=\"street\"\n//                   autoComplete=\"new-street\"\n//                   onChange={(e) => setUser({ tz: user.tz, fullName:user.fullName, password: user.password, telephone:user.telephone ,city:user.city,street:e.target.value,houseNumber:user.houseNumber})}\n//                 {...register(\"name\", { required: \"field is required\", pattern: /^[A-Za-z]+$/i })}\n//                   InputLabelProps={{\n//                     style: { color: 'black' }, // Inline style for label\n//                   }}\n\n//                 />\n//               </Grid>\n\n//               <Grid item xs={12}>\n//                 <TextField\n//                   required\n//                   fullWidth\n//                   name=\"houseNumber\"\n//                   label=\"houseNumber\"\n//                   type=\"houseNumber\"\n//                   id=\"houseNumber\"\n//                   autoComplete=\"new-houseNumber\"\n//                   onChange={(e) => setUser({ tz: user.tz,fullName:user.fullName, password: user.password, telephone:user.telephone ,city:user.city,street:user.street,houseNumber:e.target.value})}\n//                                            {...register(\"telephone\", {\n//                                                required: 'enter a phone number',\n//                                                pattern: {\n//                                                    value: /^[0-9]$/,\n//                                                    message: 'the number number is incorrect',\n//                                                },\n//                                            })}\n//                   InputLabelProps={{\n//                     style: { color: 'black' }, // Inline style for label\n//                   }}\n\n//                 />\n//               </Grid>\n//             </Grid>\n//             <Button\n//             color='inherit'\n//               type=\"submit\"\n//               fullWidth\n//               variant=\"contained\"\n//               sx={{ mt: 3, mb: 2, bgcolor:'lightpink' }}\n//             >\n//               Sign Up\n//             </Button>\n//             <Grid container justifyContent=\"flex-end\">\n//               <Grid item>\n//                 <Link  href=\"\\login\" style={{ color: 'pink' ,textDecoration:'none'}} >\n//                   Already have an account? Sign in\n//                 </Link>\n//               </Grid>\n//             </Grid>\n//           </Box>\n//         </Box>\n//       </Container>\n//     </form>\n//   );\n// }\n// export default SignIn;\nvar _c;\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"names":["useForm","TextField","React","useState","useDispatch","useSelector","useNavigate","Avatar","Button","CssBaseline","FormControlLabel","Checkbox","Link","Grid","Box","LockOutlinedIcon","Typography","Container","createTheme","ThemeProvider","Password","postUser","jsxDEV","_jsxDEV","Fragment","_Fragment","SignIn","_s","_errors$name","_errors$name2","_errors$password","user","setUser","tz","fullName","password","telephone","arrU","x","users","arrUser","currentUser","u","dispatch","nav","defaultTheme","register","handleSubmit","getValues","formState","errors","dirtyFields","isValid","mode","onSubmit","data","city","street","houseNumber","console","log","children","id","label","variant","onChange","e","target","value","required","pattern","fileName","_jsxFileName","lineNumber","columnNumber","name","type","message","email","validate","confirmEmail","_c","$RefreshReg$"],"sources":["C:/Users/שיפי וינגרטן/Pictures/Saved Pictures/סמינר/כיתה יד/תכנות/react/פרויקט/finalproject/src/components/screens/user/SignIn.js"],"sourcesContent":["import { useForm } from \"react-hook-form\";\r\nimport TextField from '@mui/material/TextField';\r\nimport React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { Password } from '@mui/icons-material';\r\nimport { postUser} from '../../features//User/UserSlice';\r\n\r\nconst SignIn = () => {\r\n    const [user, setUser] = useState({ tz:\" \",fullName:\" \", password:\" \" ,telephone:\" \"});\r\n    const arrU = useSelector(x => x.users.arrUser);\r\n    const currentUser = useSelector(u => u.users.currentUser);\r\n    const dispatch = useDispatch();\r\n    const nav=useNavigate()\r\nconst defaultTheme = createTheme();\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        getValues,\r\n        formState: { errors, dirtyFields, isValid },\r\n    } = useForm({ mode: 'onBlur' });\r\n\r\n    const onSubmit = (data) => {\r\n       // event.preventDefault();\r\n        //const data = new FormData(event.currentTarget);\r\n        //dispatch(addUser({\"tz\":data.get('tz'), \"name\":data.get('name'), \"password\":data.get('password'),\"telephone\":data.get('telephone'), \"email\":data.get('email')}))//tz:data.tz, name:data.name, password:data.password, telephone:data.telephone, email:data.email\r\n        dispatch(postUser({tz:data.tz, fullName:data.fullName, password:data.password, telephone:data.telephone,city:data.city,street:data.street,houseNumber:data.houseNumber}))\r\n        console.log(\"add user\")\r\n        console.log(currentUser)\r\n         nav('/user')\r\n        // כאן תוכל להוסיף את הלוגיקה שלך לטיפול בהגשת הטופס\r\n        // לדוג', שליחת המידע לשרת או עדכון המצב באפליקציה\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div>\r\n                    <TextField\r\n                        id=\"filled-basic\"\r\n                        label=\"tz:\"\r\n                        variant=\"filled\"\r\n                        onChange={(e) => setUser({ tz: e.target.value, fullName:user.fullName, password: user.password, telephone:user.telephone })}\r\n                        {...register(\"tz\", { required: \"field is required\", pattern: /^\\d{9}$/ })}\r\n                    />\r\n                    {errors.tz && <p>The id number is incorrect</p>}\r\n                    {dirtyFields.tz && <p>✔️</p>}\r\n                </div>\r\n                <br />\r\n                <div>\r\n                    <TextField\r\n                        id=\"filled-basic\"\r\n                        label=\"name:\"\r\n                        variant=\"filled\"\r\n                        onChange={(e) => setUser({ tz: user.tz, fullName:e.target.value, password: user.password, telephone:user.telephone})}\r\n                        {...register(\"name\", { required: \"field is required\", pattern: /^[A-Za-z]+$/i })}\r\n                    />\r\n                    {errors.name?.type === 'required' && <p>{errors.name.message}</p>}\r\n                    {errors.name?.type === 'pattern' && <p>enter in english</p>}\r\n                    {dirtyFields.name && <p>✔️</p>}\r\n                </div>\r\n                <br />\r\n                <div>\r\n                    <TextField\r\n                        id=\"filled-basic\"\r\n                        label=\"password:\"\r\n                        type=\"password\"\r\n                        variant=\"filled\"\r\n                        onChange={(e) => setUser({ tz:user.tz,fullName:user.fullName, password:e.target.value, telephone:user.telephone ,city:user.city,street:user.street,houseNumber:user.houseNumber})}\r\n                        {...register(\"password\",{required: \"field is required\"})}\r\n                    />\r\n                   {errors.password?.type === 'required' && <p>{errors.password.message}</p>}\r\n                    {dirtyFields.password && <p>✔️</p>}\r\n                </div>\r\n                <br />\r\n                <div>\r\n                    <TextField\r\n                        id=\"filled-basic\"\r\n                        label=\"telephone:\"\r\n                        type=\"telephone\"\r\n                        variant=\"filled\"\r\n                        onChange={(e) => setUser({ tz: user.tz,fullName:user.fullName, password: user.password, telephone:e.target.value})}\r\n                        {...register(\"telephone\", {\r\n                            required: 'enter a phone number',\r\n                            pattern: {\r\n                                value: /^[0-9]{10}$/,\r\n                                message: 'the phone number is incorrect',\r\n                            },\r\n                        })}\r\n                    />\r\n                    {errors.telephone && <p>{errors.telephone.message}</p>}\r\n                    {dirtyFields.telephone && <p>✔️</p>}\r\n                </div>\r\n                <br />\r\n                <div>\r\n                    <TextField\r\n                        id=\"filled-basic\"\r\n                        label=\"mail:\"\r\n                        type=\"email\"\r\n                        variant=\"filled\"\r\n                        onChange={(e) => setUser({ tz: user.tz, fullName:user.fullName, password: user.password, telephone:user.telephone})}\r\n                        {...register(\"email\",{required: \"field is required\"})}\r\n                    />\r\n                    {dirtyFields.email && <p>✔️</p>}\r\n                </div>\r\n                <br />\r\n                <div>\r\n                    <TextField\r\n                        id=\"filled-basic\"\r\n                        label=\"Confirm email:\"\r\n                        type=\"email\"\r\n                        variant=\"filled\"\r\n                        {...register(\"confirmEmail\", {\r\n                          validate: value => getValues('email') === value\r\n                        })}\r\n                    />\r\n                    {errors.confirmEmail && <p>email is wrong</p>}\r\n                </div>\r\n                <input type=\"submit\"  />\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SignIn;\r\n\r\n// import * as React from 'react';\r\n// import Avatar from '@mui/material/Avatar';\r\n// import Button from '@mui/material/Button';\r\n// import CssBaseline from '@mui/material/CssBaseline';\r\n// import TextField from '@mui/material/TextField';\r\n// import FormControlLabel from '@mui/material/FormControlLabel';\r\n// import Checkbox from '@mui/material/Checkbox';\r\n// import Link from '@mui/material/Link';\r\n// import Grid from '@mui/material/Grid';\r\n// import Box from '@mui/material/Box';\r\n// import LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\n// import Typography from '@mui/material/Typography';\r\n// import Container from '@mui/material/Container';\r\n// import { createTheme, ThemeProvider } from '@mui/material/styles';\r\n// import { useSelector, useDispatch } from 'react-redux'\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import {postUser} from '../../features/User/UserSlice';\r\n// import { Password } from '@mui/icons-material';\r\n// const defaultTheme = createTheme();\r\n\r\n// export default function SignIn() {\r\n\r\n//   let dis= useDispatch()\r\n\r\n//   let userAdd={\r\n//       tz:\"\",\r\n//       fullName:\"\",\r\n//       Password:\"\",\r\n//       telephone:\"\",\r\n//       city:\"\",\r\n//       street:\"\",\r\n//       houseNumber:\"\"\r\n//   }\r\n  \r\n//       const add=(e)=>{\r\n//           e.preventDefault()// מבטל ברירת מחדל \r\n//           dis(postUser(userAdd))\r\n//       }\r\n//   return (\r\n// <form  onSubmit={handleSubmit(onSubmit)}>\r\n//       <Container component=\"main\" maxWidth=\"xs\">\r\n//         <CssBaseline />\r\n//         <Box\r\n//           sx={{\r\n//             marginTop: 8,\r\n//             display: 'flex',\r\n//             flexDirection: 'column',\r\n//             alignItems: 'center',\r\n//           }}\r\n//         >\r\n//           <Avatar sx={{ m: 1, bgcolor: 'lightpink' }}>\r\n//             <LockOutlinedIcon />\r\n//           </Avatar>\r\n//           <Typography component=\"h1\" variant=\"h5\">\r\n//             Sign Up\r\n//           </Typography>\r\n//           <Box component=\"form\" noValidate \r\n//            sx={{ mt: 3 }}>\r\n//             <Grid container spacing={2}>\r\n//             <Grid item xs={12} sm={6}>\r\n//                 <TextField\r\n//                   autoComplete=\"given-name\"\r\n//                   name=\"tz\"\r\n//                   required\r\n//                   fullWidth\r\n//                   id=\"tz\"\r\n//                   label=\" tz\"\r\n//                   autoFocus\r\n//                   onChange={(e) => setUser({ tz: e.target.value, fullName:user.fullName, password: user.password, telephone:user.telephone ,city:user.city,street:user.street,houseNumber:user.houseNumber})}\r\n//                   {...register(\"tz\", { required: \"field is required\", pattern: /^\\d{9}$/ })}\r\n//                   InputLabelProps={{\r\n//                     style: { color: 'black' }, // Inline style for label\r\n//                   }}\r\n//                 />\r\n//               </Grid>\r\n//               <Grid item xs={12} sm={6}>\r\n//                 <TextField\r\n//                   autoComplete=\"given-name\"\r\n//                   name=\"fullName\"\r\n//                   required\r\n//                   fullWidth\r\n//                   id=\"fullName\"\r\n//                   label=\" fullName\"\r\n//                   autoFocus\r\n//                   onChange={(e) => setUser({ tz: user.tz, fullName:e.target.value, password: user.password, telephone:user.telephone ,city:user.city,street:user.street,houseNumber:user.houseNumber})}\r\n//                 {...register(\"name\", { required: \"field is required\", pattern: /^[A-Za-z]+$/i })}\r\n//                   InputLabelProps={{\r\n//                     style: { color: 'black' }, // Inline style for label\r\n//                   }}\r\n//                 />\r\n//               </Grid>\r\n//               <Grid item xs={12}>\r\n//                 <TextField\r\n//                   required\r\n//                   fullWidth\r\n//                   name=\"password\"\r\n//                   label=\"Password\"\r\n//                   type=\"password\"\r\n//                   id=\"password\"\r\n//                   autoComplete=\"new-password\"\r\n//                    onChange={(e) => setUser({ tz:user.tz,fullName:user.fullName, password:e.target.value, telephone:user.telephone ,city:user.city,street:user.street,houseNumber:user.houseNumber})}\r\n//                          {...register(\"password\",{required: \"field is required\"})}\r\n//                   InputLabelProps={{\r\n//                     style: { color: 'black' }, // Inline style for label\r\n//                   }}\r\n                  \r\n//                 />\r\n//               </Grid>\r\n//               <Grid item xs={12}>\r\n//                 <TextField\r\n//                   required\r\n//                   fullWidth\r\n//                   name=\"telephone\"\r\n//                   label=\"telephone\"\r\n//                   type=\"telephone\"\r\n//                   id=\"telephone\"\r\n//                   autoComplete=\"new-telephone\"\r\n//                   onChange={(e) => setUser({ tz: user.tz,fullName:user.fullName, password: user.password, telephone:e.target.value ,city:user.city,street:user.street,houseNumber:user.houseNumber})}\r\n//                                            {...register(\"telephone\", {\r\n//                                                required: 'enter a phone number',\r\n//                                                pattern: {\r\n//                                                    value: /^[0-9]{10}$/,\r\n//                                                    message: 'the phone number is incorrect',\r\n//                                                },\r\n//                                            })}\r\n//                   InputLabelProps={{\r\n//                     style: { color: 'black' }, // Inline style for label\r\n//                   }}\r\n                  \r\n//                 />\r\n//               </Grid>\r\n\r\n//               <Grid item xs={12}>\r\n//                 <TextField\r\n//                   required\r\n//                   fullWidth\r\n//                   name=\"city\"\r\n//                   label=\"city\"\r\n//                   type=\"city\"\r\n//                   id=\"city\"\r\n//                   autoComplete=\"new-city\"\r\n//                   onChange={(e) => setUser({ tz: user.tz, fullName:user.fullName, password: user.password, telephone:user.telephone ,city:e.target.value,street:user.street,houseNumber:user.houseNumber})}\r\n//                 {...register(\"name\", { required: \"field is required\", pattern: /^[A-Za-z]+$/i })}\r\n//                   InputLabelProps={{\r\n//                     style: { color: 'black' }, // Inline style for label\r\n//                   }}\r\n                  \r\n//                 />\r\n//               </Grid>\r\n//               <Grid item xs={12}>\r\n//                 <TextField\r\n//                   required\r\n//                   fullWidth\r\n//                   name=\"street\"\r\n//                   label=\"street\"\r\n//                   type=\"street\"\r\n//                   id=\"street\"\r\n//                   autoComplete=\"new-street\"\r\n//                   onChange={(e) => setUser({ tz: user.tz, fullName:user.fullName, password: user.password, telephone:user.telephone ,city:user.city,street:e.target.value,houseNumber:user.houseNumber})}\r\n//                 {...register(\"name\", { required: \"field is required\", pattern: /^[A-Za-z]+$/i })}\r\n//                   InputLabelProps={{\r\n//                     style: { color: 'black' }, // Inline style for label\r\n//                   }}\r\n                  \r\n//                 />\r\n//               </Grid>\r\n\r\n//               <Grid item xs={12}>\r\n//                 <TextField\r\n//                   required\r\n//                   fullWidth\r\n//                   name=\"houseNumber\"\r\n//                   label=\"houseNumber\"\r\n//                   type=\"houseNumber\"\r\n//                   id=\"houseNumber\"\r\n//                   autoComplete=\"new-houseNumber\"\r\n//                   onChange={(e) => setUser({ tz: user.tz,fullName:user.fullName, password: user.password, telephone:user.telephone ,city:user.city,street:user.street,houseNumber:e.target.value})}\r\n//                                            {...register(\"telephone\", {\r\n//                                                required: 'enter a phone number',\r\n//                                                pattern: {\r\n//                                                    value: /^[0-9]$/,\r\n//                                                    message: 'the number number is incorrect',\r\n//                                                },\r\n//                                            })}\r\n//                   InputLabelProps={{\r\n//                     style: { color: 'black' }, // Inline style for label\r\n//                   }}\r\n                  \r\n//                 />\r\n//               </Grid>\r\n//             </Grid>\r\n//             <Button\r\n//             color='inherit'\r\n//               type=\"submit\"\r\n//               fullWidth\r\n//               variant=\"contained\"\r\n//               sx={{ mt: 3, mb: 2, bgcolor:'lightpink' }}\r\n//             >\r\n//               Sign Up\r\n//             </Button>\r\n//             <Grid container justifyContent=\"flex-end\">\r\n//               <Grid item>\r\n//                 <Link  href=\"\\login\" style={{ color: 'pink' ,textDecoration:'none'}} >\r\n//                   Already have an account? Sign in\r\n//                 </Link>\r\n//               </Grid>\r\n//             </Grid>\r\n//           </Box>\r\n//         </Box>\r\n//       </Container>\r\n//     </form>\r\n//   );\r\n// }\r\n// export default SignIn;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
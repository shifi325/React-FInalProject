{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05E9\\u05D9\\u05E4\\u05D9 \\u05D5\\u05D9\\u05E0\\u05D2\\u05E8\\u05D8\\u05DF\\\\Pictures\\\\Saved Pictures\\\\\\u05E1\\u05DE\\u05D9\\u05E0\\u05E8\\\\\\u05DB\\u05D9\\u05EA\\u05D4 \\u05D9\\u05D3\\\\\\u05EA\\u05DB\\u05E0\\u05D5\\u05EA\\\\react\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05E7\\u05D8\\\\finalproject\\\\src\\\\components\\\\screens\\\\orders\\\\Payment.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Card, FormControl, FormLabel, OutlinedInput, RadioGroup, Stack, Typography, Button, Alert } from '@mui/material';\nimport CreditCardRoundedIcon from '@mui/icons-material/CreditCardRounded';\nimport SimCardRoundedIcon from '@mui/icons-material/SimCardRounded';\nimport { styled } from '@mui/system';\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { postOrder } from '../../features/Order/OrderSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormGrid = styled('div')(() => ({\n  display: 'flex',\n  flexDirection: 'column'\n}));\n_c = FormGrid;\nexport default function Payment() {\n  _s();\n  const [paymentType, setPaymentType] = useState('creditCard');\n  const [cardNumber, setCardNumber] = useState('');\n  const [cvv, setCvv] = useState('');\n  const [expirationDate, setExpirationDate] = useState('');\n  const [name, setName] = useState('');\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [expirationError, setExpirationError] = useState(false);\n  const cartFromRedux = useSelector(state => state.orders.cart);\n  const currentUserFromRedux = useSelector(state => state.users.currentUser);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (currentUserFromRedux) {\n      setName(currentUserFromRedux.name); // Assuming the name property exists in currentUserFromRedux\n    }\n  }, [currentUserFromRedux]);\n  const handlePaymentTypeChange = event => {\n    setPaymentType(event.target.value);\n  };\n  const handleCardNumberChange = event => {\n    const value = event.target.value.replace(/\\D/g, '');\n    const formattedValue = value.replace(/(\\d{4})(?=\\d)/g, '$1 ');\n    if (value.length <= 16) {\n      setCardNumber(formattedValue);\n    }\n  };\n  const handleCvvChange = event => {\n    const value = event.target.value.replace(/\\D/g, '');\n    if (value.length <= 3) {\n      setCvv(value);\n    }\n  };\n  const handleExpirationDateChange = event => {\n    const value = event.target.value.replace(/\\D/g, '');\n    const formattedValue = value.replace(/(\\d{2})(?=\\d{2})/, '$1/');\n    if (value.length <= 4) {\n      setExpirationDate(formattedValue);\n    }\n  };\n  const handleNameChange = event => {\n    setName(event.target.value);\n  };\n  const handleSubmit = () => {\n    setIsSubmitted(true);\n    if (cardNumber && cvv && name) {\n      const newOrder = {\n        userId: currentUserFromRedux.id,\n        userName: currentUserFromRedux.name,\n        address: currentUserFromRedux.address,\n        cart: cartFromRedux\n      };\n      dispatch(postOrder(newOrder));\n      navigate('/congrat');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    spacing: {\n      xs: 3,\n      sm: 7\n    },\n    useFlexGap: true,\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      component: \"fieldset\",\n      sx: {\n        width: '60%'\n      },\n      children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n        \"aria-label\": \"Payment options\",\n        name: \"paymentType\",\n        value: paymentType,\n        onChange: handlePaymentTypeChange,\n        sx: {\n          flexDirection: {\n            sm: 'column',\n            md: 'row'\n          },\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          raised: paymentType === 'creditCard',\n          sx: {\n            maxWidth: {\n              sm: '80%',\n              md: '10%'\n            },\n            flexGrow: 1,\n            outline: '1px solid',\n            outlineColor: paymentType === 'creditCard' ? '#E91E63' : 'divider' // Pink outline for selected\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          raised: paymentType === 'bankTransfer',\n          sx: {\n            maxWidth: {\n              sm: '100%',\n              md: '50%'\n            },\n            flexGrow: 1,\n            outline: '1px solid',\n            outlineColor: paymentType === 'bankTransfer' ? '#E91E63' : 'divider',\n            // Pink outline for selected\n            backgroundColor: paymentType === 'bankTransfer' ? '#F8BBD0' : '' // Light pink background for selected\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), paymentType === 'creditCard' && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        gap: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'space-between',\n          p: 3,\n          height: {\n            xs: 300,\n            sm: 350,\n            md: 375\n          },\n          marginLeft: '18.2vw',\n          marginTop: '8vh',\n          width: '60%',\n          borderRadius: '20px',\n          border: '2px solid',\n          borderColor: '#E91E63',\n          // Pink border\n          backgroundColor: '#F8BBD0',\n          // Light pink background\n          boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.05)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            sx: {\n              color: '#E91E63',\n              fontSize: 'large'\n            },\n            children: \"Credit card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CreditCardRoundedIcon, {\n            sx: {\n              color: '#E91E63'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SimCardRoundedIcon, {\n          sx: {\n            fontSize: {\n              xs: 48,\n              sm: 56\n            },\n            transform: 'rotate(90deg)',\n            color: '#E91E63'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            gap: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n            sx: {\n              flexGrow: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              htmlFor: \"card-number\",\n              required: true,\n              children: \"Card number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n              id: \"card-number\",\n              autoComplete: \"card-number\",\n              placeholder: \"0000 0000 0000 0000\",\n              required: true,\n              value: cardNumber,\n              onChange: handleCardNumberChange,\n              error: isSubmitted && !cardNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            sx: {\n              maxWidth: '20%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              htmlFor: \"cvv\",\n              required: true,\n              children: \"CVV\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n              id: \"cvv\",\n              autoComplete: \"CVV\",\n              placeholder: \"123\",\n              required: true,\n              value: cvv,\n              onChange: handleCvvChange,\n              error: isSubmitted && !cvv\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            gap: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n            sx: {\n              flexGrow: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              htmlFor: \"card-name\",\n              required: true,\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n              id: \"card-name\",\n              autoComplete: \"card-name\",\n              placeholder: \"John Smith\",\n              required: true,\n              value: name,\n              onChange: handleNameChange,\n              error: isSubmitted && !name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            sx: {\n              flexGrow: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              htmlFor: \"card-expiration\",\n              required: true,\n              children: \"Expiration date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n              id: \"card-expiration\",\n              autoComplete: \"card-expiration\",\n              placeholder: \"MM/YY\",\n              required: true,\n              value: expirationDate,\n              onChange: handleExpirationDateChange,\n              error: isSubmitted && !expirationDate || expirationError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this), expirationError && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          children: \"The expiration date is invalid or has already passed.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      sx: {\n        mt: 2,\n        alignSelf: 'center',\n        backgroundColor: '#E91E63',\n        color: 'white'\n      },\n      onClick: handleSubmit,\n      children: \"\\u05D1\\u05E6\\u05E2 \\u05EA\\u05E9\\u05DC\\u05D5\\u05DD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(Payment, \"PZSC9F1JfviUxrG8dnqcqq8ShmE=\", false, function () {\n  return [useSelector, useSelector, useNavigate, useDispatch];\n});\n_c2 = Payment;\nvar _c, _c2;\n$RefreshReg$(_c, \"FormGrid\");\n$RefreshReg$(_c2, \"Payment\");","map":{"version":3,"names":["React","useState","useEffect","Box","Card","FormControl","FormLabel","OutlinedInput","RadioGroup","Stack","Typography","Button","Alert","CreditCardRoundedIcon","SimCardRoundedIcon","styled","useNavigate","useDispatch","useSelector","postOrder","jsxDEV","_jsxDEV","FormGrid","display","flexDirection","_c","Payment","_s","paymentType","setPaymentType","cardNumber","setCardNumber","cvv","setCvv","expirationDate","setExpirationDate","name","setName","isSubmitted","setIsSubmitted","expirationError","setExpirationError","cartFromRedux","state","orders","cart","currentUserFromRedux","users","currentUser","navigate","dispatch","handlePaymentTypeChange","event","target","value","handleCardNumberChange","replace","formattedValue","length","handleCvvChange","handleExpirationDateChange","handleNameChange","handleSubmit","newOrder","userId","id","userName","address","spacing","xs","sm","useFlexGap","children","component","sx","width","onChange","md","gap","raised","maxWidth","flexGrow","outline","outlineColor","fileName","_jsxFileName","lineNumber","columnNumber","backgroundColor","justifyContent","p","height","marginLeft","marginTop","borderRadius","border","borderColor","boxShadow","variant","color","fontSize","transform","htmlFor","required","autoComplete","placeholder","error","severity","type","mt","alignSelf","onClick","_c2","$RefreshReg$"],"sources":["C:/Users/שיפי וינגרטן/Pictures/Saved Pictures/סמינר/כיתה יד/תכנות/react/פרויקט/finalproject/src/components/screens/orders/Payment.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Box, Card, FormControl, FormLabel, OutlinedInput, RadioGroup, Stack, Typography, Button, Alert } from '@mui/material';\r\nimport CreditCardRoundedIcon from '@mui/icons-material/CreditCardRounded';\r\nimport SimCardRoundedIcon from '@mui/icons-material/SimCardRounded';\r\nimport { styled } from '@mui/system';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { postOrder } from '../../features/Order/OrderSlice';\r\n\r\nconst FormGrid = styled('div')(() => ({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n}));\r\n\r\nexport default function Payment() {\r\n  const [paymentType, setPaymentType] = useState('creditCard');\r\n  const [cardNumber, setCardNumber] = useState('');\r\n  const [cvv, setCvv] = useState('');\r\n  const [expirationDate, setExpirationDate] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n  const [expirationError, setExpirationError] = useState(false);\r\n  const cartFromRedux = useSelector((state) => state.orders.cart);\r\n  const currentUserFromRedux = useSelector((state) => state.users.currentUser);\r\n\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (currentUserFromRedux) {\r\n      setName(currentUserFromRedux.name); // Assuming the name property exists in currentUserFromRedux\r\n    }\r\n  }, [currentUserFromRedux]);\r\n\r\n  const handlePaymentTypeChange = (event) => {\r\n    setPaymentType(event.target.value);\r\n  };\r\n\r\n  const handleCardNumberChange = (event) => {\r\n    const value = event.target.value.replace(/\\D/g, '');\r\n    const formattedValue = value.replace(/(\\d{4})(?=\\d)/g, '$1 ');\r\n    if (value.length <= 16) {\r\n      setCardNumber(formattedValue);\r\n    }\r\n  };\r\n\r\n  const handleCvvChange = (event) => {\r\n    const value = event.target.value.replace(/\\D/g, '');\r\n    if (value.length <= 3) {\r\n      setCvv(value);\r\n    }\r\n  };\r\n\r\n  const handleExpirationDateChange = (event) => {\r\n    const value = event.target.value.replace(/\\D/g, '');\r\n    const formattedValue = value.replace(/(\\d{2})(?=\\d{2})/, '$1/');\r\n    if (value.length <= 4) {\r\n      setExpirationDate(formattedValue);\r\n    }\r\n  };\r\n\r\n  const handleNameChange = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    setIsSubmitted(true);\r\n\r\n    if (cardNumber && cvv && name) {\r\n      const newOrder = {\r\n        userId: currentUserFromRedux.id,\r\n        userName: currentUserFromRedux.name,\r\n        address: currentUserFromRedux.address,\r\n        cart: cartFromRedux\r\n      };\r\n      dispatch(postOrder(newOrder));\r\n      navigate('/congrat')\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Stack spacing={{ xs: 3, sm: 7 }} useFlexGap>\r\n      <FormControl component=\"fieldset\" sx={{ width: '60%' }}>\r\n        <RadioGroup\r\n          aria-label=\"Payment options\"\r\n          name=\"paymentType\"\r\n          value={paymentType}\r\n          onChange={handlePaymentTypeChange}\r\n          sx={{\r\n            flexDirection: { sm: 'column', md: 'row' },\r\n            gap: 2,\r\n          }}>\r\n          <Card\r\n            raised={paymentType === 'creditCard'}\r\n            sx={{\r\n              maxWidth: { sm: '80%', md: '10%' },\r\n              flexGrow: 1,\r\n              outline: '1px solid',\r\n              outlineColor: paymentType === 'creditCard' ? '#E91E63' : 'divider', // Pink outline for selected\r\n            }}\r\n          />\r\n          <Card\r\n            raised={paymentType === 'bankTransfer'}\r\n            sx={{\r\n              maxWidth: { sm: '100%', md: '50%' },\r\n              flexGrow: 1,\r\n              outline: '1px solid',\r\n              outlineColor: paymentType === 'bankTransfer' ? '#E91E63' : 'divider', // Pink outline for selected\r\n              backgroundColor: paymentType === 'bankTransfer' ? '#F8BBD0' : '', // Light pink background for selected\r\n            }}\r\n          />\r\n        </RadioGroup>\r\n      </FormControl>\r\n      {paymentType === 'creditCard' && (\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            gap: 2,\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              justifyContent: 'space-between',\r\n              p: 3,\r\n              height: { xs: 300, sm: 350, md: 375 },\r\n              marginLeft: '18.2vw',\r\n              marginTop: '8vh',\r\n              width: '60%',\r\n              borderRadius: '20px',\r\n              border: '2px solid',\r\n              borderColor: '#E91E63', // Pink border\r\n              backgroundColor: '#F8BBD0', // Light pink background\r\n              boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.05)',\r\n            }}\r\n          >\r\n            <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\r\n              <Typography variant=\"subtitle2\" sx={{ color: '#E91E63', fontSize: 'large' }}>Credit card</Typography>\r\n              <CreditCardRoundedIcon sx={{ color: '#E91E63' }} />\r\n            </Box>\r\n            <SimCardRoundedIcon\r\n              sx={{\r\n                fontSize: { xs: 48, sm: 56 },\r\n                transform: 'rotate(90deg)',\r\n                color: '#E91E63',\r\n              }}\r\n            />\r\n            <Box\r\n              sx={{\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                gap: 2,\r\n              }}\r\n            >\r\n              <FormGrid sx={{ flexGrow: 1 }}>\r\n                <FormLabel htmlFor=\"card-number\" required>\r\n                  Card number\r\n                </FormLabel>\r\n                <OutlinedInput\r\n                  id=\"card-number\"\r\n                  autoComplete=\"card-number\"\r\n                  placeholder=\"0000 0000 0000 0000\"\r\n                  required\r\n                  value={cardNumber}\r\n                  onChange={handleCardNumberChange}\r\n                  error={isSubmitted && !cardNumber}\r\n                />\r\n              </FormGrid>\r\n              <FormGrid sx={{ maxWidth: '20%' }}>\r\n                <FormLabel htmlFor=\"cvv\" required>\r\n                  CVV\r\n                </FormLabel>\r\n                <OutlinedInput\r\n                  id=\"cvv\"\r\n                  autoComplete=\"CVV\"\r\n                  placeholder=\"123\"\r\n                  required\r\n                  value={cvv}\r\n                  onChange={handleCvvChange}\r\n                  error={isSubmitted && !cvv}\r\n                />\r\n              </FormGrid>\r\n            </Box>\r\n            <Box sx={{ display: 'flex', gap: 2 }}>\r\n              <FormGrid sx={{ flexGrow: 1 }}>\r\n                <FormLabel htmlFor=\"card-name\" required>\r\n                  Name\r\n                </FormLabel>\r\n                <OutlinedInput\r\n                  id=\"card-name\"\r\n                  autoComplete=\"card-name\"\r\n                  placeholder=\"John Smith\"\r\n                  required\r\n                  value={name}\r\n                  onChange={handleNameChange}\r\n                  error={isSubmitted && !name}\r\n                />\r\n              </FormGrid>\r\n              <FormGrid sx={{ flexGrow: 1 }}>\r\n                <FormLabel htmlFor=\"card-expiration\" required>\r\n                  Expiration date\r\n                </FormLabel>\r\n                <OutlinedInput\r\n                  id=\"card-expiration\"\r\n                  autoComplete=\"card-expiration\"\r\n                  placeholder=\"MM/YY\"\r\n                  required\r\n                  value={expirationDate}\r\n                  onChange={handleExpirationDateChange}\r\n                  error={(isSubmitted && !expirationDate) || expirationError}\r\n                />\r\n              </FormGrid>\r\n            </Box>\r\n            {expirationError && (\r\n              <Alert severity=\"error\">\r\n                The expiration date is invalid or has already passed.\r\n              </Alert>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      )}\r\n      <Button\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        sx={{ mt: 2, alignSelf: 'center', backgroundColor: '#E91E63', color: 'white' }}\r\n        onClick={handleSubmit}\r\n      >\r\n        בצע תשלום\r\n      </Button>\r\n    </Stack>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
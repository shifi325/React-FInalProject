{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05E9\\u05D9\\u05E4\\u05D9 \\u05D5\\u05D9\\u05E0\\u05D2\\u05E8\\u05D8\\u05DF\\\\Pictures\\\\Saved Pictures\\\\\\u05E1\\u05DE\\u05D9\\u05E0\\u05E8\\\\\\u05DB\\u05D9\\u05EA\\u05D4 \\u05D9\\u05D3\\\\\\u05EA\\u05DB\\u05E0\\u05D5\\u05EA\\\\react\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05E7\\u05D8\\\\finalproject\\\\src\\\\components\\\\screens\\\\user\\\\LogIn.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { TextField, Button, Typography, Box } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { login } from '../../features/User/UserSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LogIn = () => {\n  _s();\n  let nav = useNavigate();\n  const dispatch = useDispatch();\n  const [formData, setFormData] = useState({\n    tz: '',\n    name: '',\n    password: '',\n    telephone: '',\n    address: ''\n  });\n  const {\n    loading,\n    error\n  } = useSelector(state => state.users);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const result = await dispatch(login({\n      tz: formData.tz,\n      password: formData.password\n    }));\n    if (result.meta.requestStatus === 'fulfilled') {\n      nav('/usernav');\n    } else {\n      nav('/signin');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      maxWidth: 400,\n      margin: 'auto',\n      padding: 3,\n      boxShadow: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      component: \"h2\",\n      gutterBottom: true,\n      children: isLogin ? 'Login' : 'Register'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"ID Number\",\n        variant: \"outlined\",\n        fullWidth: true,\n        name: \"tz\",\n        value: formData.tz,\n        onChange: handleInputChange,\n        margin: \"normal\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Password\",\n        variant: \"outlined\",\n        fullWidth: true,\n        name: \"password\",\n        type: \"password\",\n        value: formData.password,\n        onChange: handleInputChange,\n        margin: \"normal\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        fullWidth: true,\n        disabled: loading === 'loading'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: toggleMode,\n      fullWidth: true,\n      children: isLogin ? \"Don't have an account? Register\" : 'Already have an account? Login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(LogIn, \"DsqDWpbu79Nk6VMSW07ZI4R9XSQ=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n_c = LogIn;\nexport default LogIn;\n\n// import React,{useState} from 'react';\n// import { useForm } from 'react-hook-form';\n\n// import Avatar from '@mui/material/Avatar';\n// import Button from '@mui/material/Button';\n// import CssBaseline from '@mui/material/CssBaseline';\n// import TextField from '@mui/material/TextField';\n// import FormControlLabel from '@mui/material/FormControlLabel';\n// import Checkbox from '@mui/material/Checkbox';\n// import Link from '@mui/material/Link';\n// import Grid from '@mui/material/Grid';\n// import Box from '@mui/material/Box';\n// import LockOutlinedIcon from '@mui/icons-material/LockOutlined';\n// import Typography from '@mui/material/Typography';\n// import Container from '@mui/material/Container';\n// import { createTheme, ThemeProvider } from '@mui/material/styles';\n// import { getUserById, login,setCurrentUser } from '../../features/User/UserSlice'\n// import { useSelector, useDispatch, Provider } from 'react-redux'\n// import { useNavigate } from \"react-router-dom\";\n// import { colors } from '@mui/material';\n// import { lightGreen, pink } from '@mui/material/colors';\n\n//   // TODO remove, this demo shouldn't need to reset the theme.\n\n//   const defaultTheme = createTheme();\n// export default function LogIn() {\n//   const { register, handleSubmit, formState: { errors } } = useForm();\n//   const [user, setUser] = useState({ tz: \"\", password: \"\" });\n//   const arrFromRedux = useSelector(state => state.users.arrUsers)\n\n//     let myUser=useSelector(s=>s.users.currentUser)\n//     const dis = useDispatch();\n//     let nav = useNavigate()\n\n//     const onSubmit = (event) => {\n//         // event.preventDefault();\n//         // const data = new FormData(event.currentTarget);\n//         dis(login({ tz: event.tz, password: event.password }))\n//         // console.log(response.requestStatus==='fulfilled')\n//         if(myUser!=null)\n//         nav('/usernav');\n//       else\n//       nav('signin')\n//       };\n//       return (<>\n//        <ThemeProvider theme={defaultTheme}>\n//       <Container component=\"main\" maxWidth=\"xs\">\n//         <CssBaseline />\n//         <Box\n//           sx={{\n//             marginTop: 8,\n//             display: 'flex',\n//             flexDirection: 'column',\n//             alignItems: 'center',\n//           }}\n//         >\n//           <Avatar sx={{ m: 1, bgcolor: 'lightpink' }}>\n//             {/* <LockOutlinedIcon /> */}\n//           </Avatar>\n//           <Typography component=\"h1\" variant=\"h5\" >\n//             Log In\n//           </Typography>\n//           <Box component=\"form\" onSubmit={handleSubmit(onSubmit)} noValidate sx={{ mt: 1 }}>\n//             <TextField\n//               bgcolor=\"lightpink\"\n//               margin=\"normal\"\n//               required\n//               fullWidth\n//               id=\" tz\"\n//               label=\" tz\"\n//               name=\"  tz\"\n//               autoComplete=\" tz\"\n//               onChange={(e) => setUser({  tz: e.target.value, password: user.password })}\n\n//               autoFocus\n//               InputLabelProps={{\n//                 style: { color: 'black' }, // Inline style for label\n//               }}\n//             />\n//             <TextField  \n//               InputLabelProps={{\n//                 style: { color: 'black' }, // Inline style for label\n\n//               }}\n//               margin=\"normal\"\n//               required\n//               fullWidth\n//               name=\"password\"\n//               label=\"Password\"\n//               type=\"password\"\n//               id=\"password\"\n//               autoComplete=\"current-password\"\n//               onChange={(e) => setUser({  tz: user. tz, password: e.target.value })}\n\n//             />\n//             <FormControlLabel\n//               control={<Checkbox value=\"remember\" color=\"default\" />}\n//               label=\"Remember me\"\n//             />\n//             <Button\n//               color='inherit'\n//               type=\"submit\"\n//               fullWidth\n//               variant=\"contained\"\n//               sx={{ mt: 3, mb: 2,bgcolor:'lightpink' }}\n//             >\n//               Sign In\n//             </Button>\n//             <Grid container>\n//               <Grid item  >\n//                 <Link href=\"\\signIn\" style={{ color: 'pink' ,textDecoration:'none'}}                >\n//                   {\"Don't have an account? Sign Up\"}\n//                 </Link>\n//               </Grid>\n//             </Grid>\n//           </Box>\n//         </Box>\n//       </Container>\n//     </ThemeProvider>\n\n//  </> )\n// }\nvar _c;\n$RefreshReg$(_c, \"LogIn\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","TextField","Button","Typography","Box","useNavigate","login","jsxDEV","_jsxDEV","LogIn","_s","nav","dispatch","formData","setFormData","tz","name","password","telephone","address","loading","error","state","users","handleInputChange","e","value","target","handleSubmit","preventDefault","result","meta","requestStatus","sx","maxWidth","margin","padding","boxShadow","children","variant","component","gutterBottom","isLogin","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","label","fullWidth","onChange","required","type","color","disabled","onClick","toggleMode","_c","$RefreshReg$"],"sources":["C:/Users/שיפי וינגרטן/Pictures/Saved Pictures/סמינר/כיתה יד/תכנות/react/פרויקט/finalproject/src/components/screens/user/LogIn.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { TextField, Button, Typography, Box } from '@mui/material';\r\nimport {useNavigate} from 'react-router-dom'\r\nimport { login } from '../../features/User/UserSlice';\r\n\r\nconst LogIn = () => {\r\n    let nav = useNavigate()\r\n  const dispatch = useDispatch();\r\n  const [formData, setFormData] = useState({ tz: '', name: '', password: '', telephone: '' ,address:''});\r\n  const { loading, error } = useSelector((state) => state.users);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n      const result = await dispatch(login({ tz: formData.tz, password: formData.password }));\r\n      if (result.meta.requestStatus === 'fulfilled') {\r\n        nav('/usernav')\r\n      }\r\n    else {\r\n      nav('/signin')\r\n     \r\n      }\r\n    \r\n  };\r\n  \r\n\r\n\r\n  return (\r\n    <Box sx={{ maxWidth: 400, margin: 'auto', padding: 3, boxShadow: 3 }}>\r\n      <Typography variant=\"h5\" component=\"h2\" gutterBottom>\r\n        {isLogin ? 'Login' : 'Register'}\r\n      </Typography>\r\n      <form onSubmit={handleSubmit}>\r\n        <TextField\r\n          label=\"ID Number\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          name=\"tz\"\r\n          value={formData.tz}\r\n          onChange={handleInputChange}\r\n          margin=\"normal\"\r\n          required\r\n        />\r\n    \r\n        <TextField\r\n          label=\"Password\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          name=\"password\"\r\n          type=\"password\"\r\n          value={formData.password}\r\n          onChange={handleInputChange}\r\n          margin=\"normal\"\r\n          required\r\n        />\r\n        {error && <Typography color=\"error\">{error}</Typography>}\r\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\" fullWidth disabled={loading === 'loading'}>\r\n        </Button>\r\n      </form>\r\n      <Button onClick={toggleMode} fullWidth>\r\n        {isLogin ? \"Don't have an account? Register\" : 'Already have an account? Login'}\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default LogIn;\r\n\r\n// import React,{useState} from 'react';\r\n// import { useForm } from 'react-hook-form';\r\n\r\n// import Avatar from '@mui/material/Avatar';\r\n// import Button from '@mui/material/Button';\r\n// import CssBaseline from '@mui/material/CssBaseline';\r\n// import TextField from '@mui/material/TextField';\r\n// import FormControlLabel from '@mui/material/FormControlLabel';\r\n// import Checkbox from '@mui/material/Checkbox';\r\n// import Link from '@mui/material/Link';\r\n// import Grid from '@mui/material/Grid';\r\n// import Box from '@mui/material/Box';\r\n// import LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\n// import Typography from '@mui/material/Typography';\r\n// import Container from '@mui/material/Container';\r\n// import { createTheme, ThemeProvider } from '@mui/material/styles';\r\n// import { getUserById, login,setCurrentUser } from '../../features/User/UserSlice'\r\n// import { useSelector, useDispatch, Provider } from 'react-redux'\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import { colors } from '@mui/material';\r\n// import { lightGreen, pink } from '@mui/material/colors';\r\n\r\n\r\n//   // TODO remove, this demo shouldn't need to reset the theme.\r\n  \r\n//   const defaultTheme = createTheme();\r\n// export default function LogIn() {\r\n//   const { register, handleSubmit, formState: { errors } } = useForm();\r\n//   const [user, setUser] = useState({ tz: \"\", password: \"\" });\r\n//   const arrFromRedux = useSelector(state => state.users.arrUsers)\r\n\r\n//     let myUser=useSelector(s=>s.users.currentUser)\r\n//     const dis = useDispatch();\r\n//     let nav = useNavigate()\r\n\r\n//     const onSubmit = (event) => {\r\n//         // event.preventDefault();\r\n//         // const data = new FormData(event.currentTarget);\r\n//         dis(login({ tz: event.tz, password: event.password }))\r\n//         // console.log(response.requestStatus==='fulfilled')\r\n//         if(myUser!=null)\r\n//         nav('/usernav');\r\n//       else\r\n//       nav('signin')\r\n//       };\r\n//       return (<>\r\n//        <ThemeProvider theme={defaultTheme}>\r\n//       <Container component=\"main\" maxWidth=\"xs\">\r\n//         <CssBaseline />\r\n//         <Box\r\n//           sx={{\r\n//             marginTop: 8,\r\n//             display: 'flex',\r\n//             flexDirection: 'column',\r\n//             alignItems: 'center',\r\n//           }}\r\n//         >\r\n//           <Avatar sx={{ m: 1, bgcolor: 'lightpink' }}>\r\n//             {/* <LockOutlinedIcon /> */}\r\n//           </Avatar>\r\n//           <Typography component=\"h1\" variant=\"h5\" >\r\n//             Log In\r\n//           </Typography>\r\n//           <Box component=\"form\" onSubmit={handleSubmit(onSubmit)} noValidate sx={{ mt: 1 }}>\r\n//             <TextField\r\n//               bgcolor=\"lightpink\"\r\n//               margin=\"normal\"\r\n//               required\r\n//               fullWidth\r\n//               id=\" tz\"\r\n//               label=\" tz\"\r\n//               name=\"  tz\"\r\n//               autoComplete=\" tz\"\r\n//               onChange={(e) => setUser({  tz: e.target.value, password: user.password })}\r\n\r\n//               autoFocus\r\n//               InputLabelProps={{\r\n//                 style: { color: 'black' }, // Inline style for label\r\n//               }}\r\n//             />\r\n//             <TextField  \r\n//               InputLabelProps={{\r\n//                 style: { color: 'black' }, // Inline style for label\r\n                \r\n//               }}\r\n//               margin=\"normal\"\r\n//               required\r\n//               fullWidth\r\n//               name=\"password\"\r\n//               label=\"Password\"\r\n//               type=\"password\"\r\n//               id=\"password\"\r\n//               autoComplete=\"current-password\"\r\n//               onChange={(e) => setUser({  tz: user. tz, password: e.target.value })}\r\n\r\n//             />\r\n//             <FormControlLabel\r\n//               control={<Checkbox value=\"remember\" color=\"default\" />}\r\n//               label=\"Remember me\"\r\n//             />\r\n//             <Button\r\n//               color='inherit'\r\n//               type=\"submit\"\r\n//               fullWidth\r\n//               variant=\"contained\"\r\n//               sx={{ mt: 3, mb: 2,bgcolor:'lightpink' }}\r\n//             >\r\n//               Sign In\r\n//             </Button>\r\n//             <Grid container>\r\n//               <Grid item  >\r\n//                 <Link href=\"\\signIn\" style={{ color: 'pink' ,textDecoration:'none'}}                >\r\n//                   {\"Don't have an account? Sign Up\"}\r\n//                 </Link>\r\n//               </Grid>\r\n//             </Grid>\r\n//           </Box>\r\n//         </Box>\r\n//       </Container>\r\n//     </ThemeProvider>\r\n  \r\n//  </> )\r\n// }\r\n\r\n "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05E9\\u05D9\\u05E4\\u05D9 \\u05D5\\u05D9\\u05E0\\u05D2\\u05E8\\u05D8\\u05DF\\\\Pictures\\\\Saved Pictures\\\\\\u05E1\\u05DE\\u05D9\\u05E0\\u05E8\\\\\\u05DB\\u05D9\\u05EA\\u05D4 \\u05D9\\u05D3\\\\\\u05EA\\u05DB\\u05E0\\u05D5\\u05EA\\\\react\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05E7\\u05D8\\\\finalproject\\\\src\\\\components\\\\screens\\\\user\\\\LogIn.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { TextField, Button,Avatar, Typography, Box,Link } from '@mui/material';\n// import {useNavigate} from 'react-router-dom'\n// import { login ,admin} from '../../features/User/UserSlice';\n// import { useForm } from 'react-hook-form';\n\n// const LogIn = () => {\n//     let nav = useNavigate()\n//   const dis = useDispatch();\n//   const { register, handleSubmit, formState: { errors, isValid } } = useForm({ mode: 'onBlur', validateCriteriaMode: 'firstError' })\n//   const [formData, setFormData] = useState({ tz: '', name: '', password: '', telephone: '' ,address:''});\n//   const { loading, error } = useSelector((state) => state.users);\n//   const myUser=useSelector(s=>s.users.status)\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({ ...formData, [name]: value });\n//   };\n\n//   const onSubmit =  () => {\n//     dis(login({ tz: formData.tz, password: formData.password }));\n//     console.log(myUser)\n//       if(formData.tz=='325770659'&&formData.password=='325770659')\n//           dis(admin())\n//       nav('/adminnav')   \n//       if(myUser==\"guest\")\n//         alert(\"משתמש לא רשום\")\n//       else\n//         nav('/usernav')\n\n//   };\n\n//   return (\n\n//             <Box\n//               sx={{\n//                 marginTop: 8,\n//                 display: 'flex',\n//                 flexDirection: 'column',\n//                 alignItems: 'center',\n//               }}\n//             >\n//               <Avatar sx={{ m: 1, bgcolor: 'lightpink' }}>\n//                 {/* <LockOutlinedIcon /> */}\n//               </Avatar>\n//               <Typography component=\"h1\" variant=\"h5\" >\n//                 Log In\n//               </Typography>\n//     <Box sx={{ maxWidth: 400, margin: 'auto', padding: 3, boxShadow: 3 }}>\n//       <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n//       </Typography>\n//       <form onSubmit={handleSubmit(onSubmit)}>\n//         <TextField\n//           label=\"ID Number\"\n//           variant=\"outlined\"\n//           fullWidth\n//           name=\"tz\"\n//           value={formData.tz}\n//           onChange={handleInputChange}\n//           margin=\"normal\"\n//           required\n//         />\n\n//         <TextField\n//           label=\"Password\"\n//           name=\"password\"\n//           type=\"password\"\n//           value={formData.password}\n//           onChange={handleInputChange}\n//           variant=\"outlined\"\n//           fullWidth\n//           margin=\"normal\"\n//           required\n//         />\n//         {error && <Typography color=\"error\">{error}</Typography>}\n//         <Button\n//         disabled={loading === 'loading'}\n//               color='inherit'\n//               type=\"submit\"\n//               fullWidth\n//               variant=\"contained\"\n//               sx={{ mt: 3, mb: 2,bgcolor:'lightpink' }}\n//             >\n//               Sign In\n//             </Button>\n\n//       </form>\n//                        <Link href=\"\\signIn\" style={{ color: 'pink' ,textDecoration:'none'}}                >\n//                    {\"Don't have an account? Sign Up\"}\n//                  </Link>\n//     </Box>             </Box>\n\n//   );\n// };\n\n// export default LogIn;\n\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { getUserById, login, setCurrentUser } from '../../features/User/UserSlice';\nimport { useSelector, useDispatch, Provider } from 'react-redux';\nimport { useNavigate } from \"react-router-dom\";\nimport { colors } from '@mui/material';\nimport { lightGreen, pink } from '@mui/material/colors';\n\n// TODO remove, this demo shouldn't need to reset the theme.\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst defaultTheme = createTheme();\nexport default function LogIn() {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const [user, setUser] = useState({\n    tz: \"\",\n    password: \"\"\n  });\n  const arrFromRedux = useSelector(state => state.users.arrUsers);\n  let myUser = useSelector(s => s.users.currentUser);\n  const dis = useDispatch();\n  let nav = useNavigate();\n  const onSubmit = event => {\n    // event.preventDefault();\n    // const data = new FormData(event.currentTarget);\n    dis(login({\n      tz: event.tz,\n      password: event.password\n    }));\n    // console.log(response.requestStatus==='fulfilled')\n    if (myUser != null) nav('/usernav');else nav('signin');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: defaultTheme,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        component: \"main\",\n        maxWidth: \"xs\",\n        children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            sx: {\n              m: 1,\n              bgcolor: 'lightpink'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h1\",\n            variant: \"h5\",\n            children: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            component: \"form\",\n            onSubmit: handleSubmit(onSubmit),\n            noValidate: true,\n            sx: {\n              mt: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              bgcolor: \"lightpink\",\n              margin: \"normal\",\n              required: true,\n              fullWidth: true,\n              id: \" tz\",\n              label: \" tz\",\n              name: \"  tz\",\n              autoComplete: \" tz\",\n              onChange: e => setUser({\n                tz: e.target.value,\n                password: user.password\n              }),\n              autoFocus: true,\n              InputLabelProps: {\n                style: {\n                  color: 'black'\n                } // Inline style for label\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              InputLabelProps: {\n                style: {\n                  color: 'black'\n                } // Inline style for label\n              },\n              margin: \"normal\",\n              required: true,\n              fullWidth: true,\n              name: \"password\",\n              label: \"Password\",\n              type: \"password\",\n              id: \"password\",\n              autoComplete: \"current-password\",\n              onChange: e => setUser({\n                tz: user.tz,\n                password: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                value: \"remember\",\n                color: \"default\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 24\n              }, this),\n              label: \"Remember me\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"inherit\",\n              type: \"submit\",\n              fullWidth: true,\n              variant: \"contained\",\n              sx: {\n                mt: 3,\n                mb: 2,\n                bgcolor: 'lightpink'\n              },\n              children: \"Sign In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  href: \"\\\\signIn\",\n                  style: {\n                    color: 'pink',\n                    textDecoration: 'none'\n                  },\n                  children: \"Don't have an account? Sign Up\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 8\n    }, this)\n  }, void 0, false);\n}\n\n// import TextField from '@mui/material/TextField';\n// import { Link, useNavigate } from 'react-router-dom';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { useForm } from 'react-hook-form';\n// import { useState } from 'react';\n// import { login } from '../../features/User/UserSlice';\n// import Button from '@mui/material/Button';\n// import {admin} from '../../features/User/UserSlice'\n\n// const LogIn = () => {\n//     const { register, handleSubmit, formState: { errors, isValid } } = useForm({ mode: 'onBlur', validateCriteriaMode: 'firstError' })\n//     const [tz, setTz] = useState('')\n//     const [password, setPassword] = useState('')\n//     const dispatch = useDispatch()\n//     const [error, setError] = useState('')\n//     const userStatus = useSelector(store => store.users.status);\n//     const nav=useNavigate()\n\n//     const onSubmit = () => {\n//         dispatch(login({ tz, password }));\n//         if(password=='325770659')\n//             dispatch(admin())\n//         nav('/adminnav')\n//        if (userStatus == \"guest\")\n//             setError(\"לא תקין \")\n//         else {\n//             setError(\"\")\n//             //  if(currentUser?.admin==true)\n//             //          dispatch(admin())\n//         }\n//     }\n\n//     return (<>\n//         <form className=\"width\" onSubmit={handleSubmit(onSubmit)}>\n//             <h3>Login</h3>\n//             <div className=\"grid1\">\n//                 <TextField error={!!errors.tz}\n//                     InputLabelProps={{ style: { color: errors.tz ? '#e6001a' : '#004AAD' } }}\n//                     helperText={errors.tz ? (\n//                         errors.tz.type === 'required' ? 'required field' :\n//                             errors.tz.type === 'pattern' ? 'enter a valid tz' : '') : ' '}\n//                     label=\"tz\"\n//                     {...register(\"tz\", { required: true})}\n//                     variant=\"standard\"\n//                     onChange={(e) => setTz(e.target.value)} />\n//                 <TextField error={!!errors.password}\n//                     InputLabelProps={{ style: { color: errors.password ? '#e6001a' : '#004AAD' } }}\n//                     helperText={errors.password ? (\n//                         errors.password.type === 'required' ? 'required field' :\n//                             errors.password.type === 'minLength' ? 'at least 4 characters' : '') : ' '}\n//                     label=\"Password\"\n//                     {...register(\"password\", { required: true, minLength: 4 })}\n//                     type=\"password\"\n//                     variant=\"standard\"\n//                     onChange={(e) => setPassword(e.target.value)} />\n//             </div>\n//             <p>\n//                 <Link to=\"/signup\">Don't have an account? Sign up here</Link>\n//             </p>\n//             <p >\n//                 <Button variant=\"outlined\" type=\"submit\" disabled={!isValid}>OK</Button>\n//             </p>\n//             {error && <p style={{ color: 'red' }}>{error}</p>}\n\n//         </form>\n//     </>);\n// }\n\n// export default LogIn;\n_s(LogIn, \"inXz4d6ClR7ehR9p2l2dSKRCUV8=\", false, function () {\n  return [useForm, useSelector, useSelector, useDispatch, useNavigate];\n});\n_c = LogIn;\nvar _c;\n$RefreshReg$(_c, \"LogIn\");","map":{"version":3,"names":["React","useState","useForm","Avatar","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Link","Grid","Box","LockOutlinedIcon","Typography","Container","createTheme","ThemeProvider","getUserById","login","setCurrentUser","useSelector","useDispatch","Provider","useNavigate","colors","lightGreen","pink","jsxDEV","_jsxDEV","Fragment","_Fragment","defaultTheme","LogIn","_s","register","handleSubmit","formState","errors","user","setUser","tz","password","arrFromRedux","state","users","arrUsers","myUser","s","currentUser","dis","nav","onSubmit","event","children","theme","component","maxWidth","fileName","_jsxFileName","lineNumber","columnNumber","sx","marginTop","display","flexDirection","alignItems","m","bgcolor","variant","noValidate","mt","margin","required","fullWidth","id","label","name","autoComplete","onChange","e","target","value","autoFocus","InputLabelProps","style","color","type","control","mb","container","item","href","textDecoration","_c","$RefreshReg$"],"sources":["C:/Users/שיפי וינגרטן/Pictures/Saved Pictures/סמינר/כיתה יד/תכנות/react/פרויקט/finalproject/src/components/screens/user/LogIn.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { TextField, Button,Avatar, Typography, Box,Link } from '@mui/material';\r\n// import {useNavigate} from 'react-router-dom'\r\n// import { login ,admin} from '../../features/User/UserSlice';\r\n// import { useForm } from 'react-hook-form';\r\n\r\n// const LogIn = () => {\r\n//     let nav = useNavigate()\r\n//   const dis = useDispatch();\r\n//   const { register, handleSubmit, formState: { errors, isValid } } = useForm({ mode: 'onBlur', validateCriteriaMode: 'firstError' })\r\n//   const [formData, setFormData] = useState({ tz: '', name: '', password: '', telephone: '' ,address:''});\r\n//   const { loading, error } = useSelector((state) => state.users);\r\n//   const myUser=useSelector(s=>s.users.status)\r\n\r\n\r\n//   const handleInputChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData({ ...formData, [name]: value });\r\n//   };\r\n\r\n//   const onSubmit =  () => {\r\n//     dis(login({ tz: formData.tz, password: formData.password }));\r\n//     console.log(myUser)\r\n//       if(formData.tz=='325770659'&&formData.password=='325770659')\r\n//           dis(admin())\r\n//       nav('/adminnav')   \r\n//       if(myUser==\"guest\")\r\n//         alert(\"משתמש לא רשום\")\r\n//       else\r\n//         nav('/usernav')\r\n\r\n     \r\n\r\n\r\n    \r\n//   };\r\n  \r\n\r\n\r\n//   return (\r\n \r\n//             <Box\r\n//               sx={{\r\n//                 marginTop: 8,\r\n//                 display: 'flex',\r\n//                 flexDirection: 'column',\r\n//                 alignItems: 'center',\r\n//               }}\r\n//             >\r\n//               <Avatar sx={{ m: 1, bgcolor: 'lightpink' }}>\r\n//                 {/* <LockOutlinedIcon /> */}\r\n//               </Avatar>\r\n//               <Typography component=\"h1\" variant=\"h5\" >\r\n//                 Log In\r\n//               </Typography>\r\n//     <Box sx={{ maxWidth: 400, margin: 'auto', padding: 3, boxShadow: 3 }}>\r\n//       <Typography variant=\"h5\" component=\"h2\" gutterBottom>\r\n//       </Typography>\r\n//       <form onSubmit={handleSubmit(onSubmit)}>\r\n//         <TextField\r\n//           label=\"ID Number\"\r\n//           variant=\"outlined\"\r\n//           fullWidth\r\n//           name=\"tz\"\r\n//           value={formData.tz}\r\n//           onChange={handleInputChange}\r\n//           margin=\"normal\"\r\n//           required\r\n//         />\r\n    \r\n//         <TextField\r\n//           label=\"Password\"\r\n//           name=\"password\"\r\n//           type=\"password\"\r\n//           value={formData.password}\r\n//           onChange={handleInputChange}\r\n//           variant=\"outlined\"\r\n//           fullWidth\r\n//           margin=\"normal\"\r\n//           required\r\n//         />\r\n//         {error && <Typography color=\"error\">{error}</Typography>}\r\n//         <Button\r\n//         disabled={loading === 'loading'}\r\n//               color='inherit'\r\n//               type=\"submit\"\r\n//               fullWidth\r\n//               variant=\"contained\"\r\n//               sx={{ mt: 3, mb: 2,bgcolor:'lightpink' }}\r\n//             >\r\n//               Sign In\r\n//             </Button>\r\n\r\n//       </form>\r\n//                        <Link href=\"\\signIn\" style={{ color: 'pink' ,textDecoration:'none'}}                >\r\n//                    {\"Don't have an account? Sign Up\"}\r\n//                  </Link>\r\n//     </Box>             </Box>\r\n\r\n//   );\r\n// };\r\n\r\n// export default LogIn;\r\n\r\nimport React,{useState} from 'react';\r\nimport { useForm } from 'react-hook-form';\r\n\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { getUserById, login,setCurrentUser } from '../../features/User/UserSlice'\r\nimport { useSelector, useDispatch, Provider } from 'react-redux'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { colors } from '@mui/material';\r\nimport { lightGreen, pink } from '@mui/material/colors';\r\n\r\n\r\n  // TODO remove, this demo shouldn't need to reset the theme.\r\n  \r\n  const defaultTheme = createTheme();\r\nexport default function LogIn() {\r\n  const { register, handleSubmit, formState: { errors } } = useForm();\r\n  const [user, setUser] = useState({ tz: \"\", password: \"\" });\r\n  const arrFromRedux = useSelector(state => state.users.arrUsers)\r\n\r\n    let myUser=useSelector(s=>s.users.currentUser)\r\n    const dis = useDispatch();\r\n    let nav = useNavigate()\r\n\r\n    const onSubmit = (event) => {\r\n        // event.preventDefault();\r\n        // const data = new FormData(event.currentTarget);\r\n        dis(login({ tz: event.tz, password: event.password }))\r\n        // console.log(response.requestStatus==='fulfilled')\r\n        if(myUser!=null)\r\n        nav('/usernav');\r\n      else\r\n      nav('signin')\r\n      };\r\n      return (<>\r\n       <ThemeProvider theme={defaultTheme}>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: 'lightpink' }}>\r\n            {/* <LockOutlinedIcon /> */}\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\" >\r\n            Log In\r\n          </Typography>\r\n          <Box component=\"form\" onSubmit={handleSubmit(onSubmit)} noValidate sx={{ mt: 1 }}>\r\n            <TextField\r\n              bgcolor=\"lightpink\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\" tz\"\r\n              label=\" tz\"\r\n              name=\"  tz\"\r\n              autoComplete=\" tz\"\r\n              onChange={(e) => setUser({  tz: e.target.value, password: user.password })}\r\n\r\n              autoFocus\r\n              InputLabelProps={{\r\n                style: { color: 'black' }, // Inline style for label\r\n              }}\r\n            />\r\n            <TextField  \r\n              InputLabelProps={{\r\n                style: { color: 'black' }, // Inline style for label\r\n                \r\n              }}\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={(e) => setUser({  tz: user. tz, password: e.target.value })}\r\n\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"default\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              color='inherit'\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2,bgcolor:'lightpink' }}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item  >\r\n                <Link href=\"\\signIn\" style={{ color: 'pink' ,textDecoration:'none'}}                >\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n    </ThemeProvider>\r\n  \r\n </> )\r\n}\r\n\r\n \r\n\r\n\r\n\r\n\r\n// import TextField from '@mui/material/TextField';\r\n// import { Link, useNavigate } from 'react-router-dom';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { useForm } from 'react-hook-form';\r\n// import { useState } from 'react';\r\n// import { login } from '../../features/User/UserSlice';\r\n// import Button from '@mui/material/Button';\r\n// import {admin} from '../../features/User/UserSlice'\r\n\r\n\r\n// const LogIn = () => {\r\n//     const { register, handleSubmit, formState: { errors, isValid } } = useForm({ mode: 'onBlur', validateCriteriaMode: 'firstError' })\r\n//     const [tz, setTz] = useState('')\r\n//     const [password, setPassword] = useState('')\r\n//     const dispatch = useDispatch()\r\n//     const [error, setError] = useState('')\r\n//     const userStatus = useSelector(store => store.users.status);\r\n//     const nav=useNavigate()\r\n\r\n//     const onSubmit = () => {\r\n//         dispatch(login({ tz, password }));\r\n//         if(password=='325770659')\r\n//             dispatch(admin())\r\n//         nav('/adminnav')\r\n//        if (userStatus == \"guest\")\r\n//             setError(\"לא תקין \")\r\n//         else {\r\n//             setError(\"\")\r\n//             //  if(currentUser?.admin==true)\r\n//             //          dispatch(admin())\r\n//         }\r\n//     }\r\n\r\n//     return (<>\r\n//         <form className=\"width\" onSubmit={handleSubmit(onSubmit)}>\r\n//             <h3>Login</h3>\r\n//             <div className=\"grid1\">\r\n//                 <TextField error={!!errors.tz}\r\n//                     InputLabelProps={{ style: { color: errors.tz ? '#e6001a' : '#004AAD' } }}\r\n//                     helperText={errors.tz ? (\r\n//                         errors.tz.type === 'required' ? 'required field' :\r\n//                             errors.tz.type === 'pattern' ? 'enter a valid tz' : '') : ' '}\r\n//                     label=\"tz\"\r\n//                     {...register(\"tz\", { required: true})}\r\n//                     variant=\"standard\"\r\n//                     onChange={(e) => setTz(e.target.value)} />\r\n//                 <TextField error={!!errors.password}\r\n//                     InputLabelProps={{ style: { color: errors.password ? '#e6001a' : '#004AAD' } }}\r\n//                     helperText={errors.password ? (\r\n//                         errors.password.type === 'required' ? 'required field' :\r\n//                             errors.password.type === 'minLength' ? 'at least 4 characters' : '') : ' '}\r\n//                     label=\"Password\"\r\n//                     {...register(\"password\", { required: true, minLength: 4 })}\r\n//                     type=\"password\"\r\n//                     variant=\"standard\"\r\n//                     onChange={(e) => setPassword(e.target.value)} />\r\n//             </div>\r\n//             <p>\r\n//                 <Link to=\"/signup\">Don't have an account? Sign up here</Link>\r\n//             </p>\r\n//             <p >\r\n//                 <Button variant=\"outlined\" type=\"submit\" disabled={!isValid}>OK</Button>\r\n//             </p>\r\n//             {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n//         </form>\r\n//     </>);\r\n// }\r\n\r\n// export default LogIn;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC,SAASC,OAAO,QAAQ,iBAAiB;AAEzC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,gBAAgB,MAAM,gCAAgC;AAC7D,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,gBAAgB,MAAM,kCAAkC;AAC/D,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,WAAW,EAAEC,aAAa,QAAQ,sBAAsB;AACjE,SAASC,WAAW,EAAEC,KAAK,EAACC,cAAc,QAAQ,+BAA+B;AACjF,SAASC,WAAW,EAAEC,WAAW,EAAEC,QAAQ,QAAQ,aAAa;AAChE,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,MAAM,QAAQ,eAAe;AACtC,SAASC,UAAU,EAAEC,IAAI,QAAQ,sBAAsB;;AAGrD;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEA,MAAMC,YAAY,GAAGhB,WAAW,CAAC,CAAC;AACpC,eAAe,SAASiB,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM;IAAEC,QAAQ;IAAEC,YAAY;IAAEC,SAAS,EAAE;MAAEC;IAAO;EAAE,CAAC,GAAGnC,OAAO,CAAC,CAAC;EACnE,MAAM,CAACoC,IAAI,EAAEC,OAAO,CAAC,GAAGtC,QAAQ,CAAC;IAAEuC,EAAE,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EAC1D,MAAMC,YAAY,GAAGtB,WAAW,CAACuB,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,QAAQ,CAAC;EAE7D,IAAIC,MAAM,GAAC1B,WAAW,CAAC2B,CAAC,IAAEA,CAAC,CAACH,KAAK,CAACI,WAAW,CAAC;EAC9C,MAAMC,GAAG,GAAG5B,WAAW,CAAC,CAAC;EACzB,IAAI6B,GAAG,GAAG3B,WAAW,CAAC,CAAC;EAEvB,MAAM4B,QAAQ,GAAIC,KAAK,IAAK;IACxB;IACA;IACAH,GAAG,CAAC/B,KAAK,CAAC;MAAEsB,EAAE,EAAEY,KAAK,CAACZ,EAAE;MAAEC,QAAQ,EAAEW,KAAK,CAACX;IAAS,CAAC,CAAC,CAAC;IACtD;IACA,IAAGK,MAAM,IAAE,IAAI,EACfI,GAAG,CAAC,UAAU,CAAC,CAAC,KAElBA,GAAG,CAAC,QAAQ,CAAC;EACb,CAAC;EACD,oBAAQtB,OAAA,CAAAE,SAAA;IAAAuB,QAAA,eACPzB,OAAA,CAACZ,aAAa;MAACsC,KAAK,EAAEvB,YAAa;MAAAsB,QAAA,eACpCzB,OAAA,CAACd,SAAS;QAACyC,SAAS,EAAC,MAAM;QAACC,QAAQ,EAAC,IAAI;QAAAH,QAAA,gBACvCzB,OAAA,CAACvB,WAAW;UAAAoD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACfhC,OAAA,CAACjB,GAAG;UACFkD,EAAE,EAAE;YACFC,SAAS,EAAE,CAAC;YACZC,OAAO,EAAE,MAAM;YACfC,aAAa,EAAE,QAAQ;YACvBC,UAAU,EAAE;UACd,CAAE;UAAAZ,QAAA,gBAEFzB,OAAA,CAACzB,MAAM;YAAC0D,EAAE,EAAE;cAAEK,CAAC,EAAE,CAAC;cAAEC,OAAO,EAAE;YAAY;UAAE;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEnC,CAAC,eACThC,OAAA,CAACf,UAAU;YAAC0C,SAAS,EAAC,IAAI;YAACa,OAAO,EAAC,IAAI;YAAAf,QAAA,EAAE;UAEzC;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACbhC,OAAA,CAACjB,GAAG;YAAC4C,SAAS,EAAC,MAAM;YAACJ,QAAQ,EAAEhB,YAAY,CAACgB,QAAQ,CAAE;YAACkB,UAAU;YAACR,EAAE,EAAE;cAAES,EAAE,EAAE;YAAE,CAAE;YAAAjB,QAAA,gBAC/EzB,OAAA,CAACtB,SAAS;cACR6D,OAAO,EAAC,WAAW;cACnBI,MAAM,EAAC,QAAQ;cACfC,QAAQ;cACRC,SAAS;cACTC,EAAE,EAAC,KAAK;cACRC,KAAK,EAAC,KAAK;cACXC,IAAI,EAAC,MAAM;cACXC,YAAY,EAAC,KAAK;cAClBC,QAAQ,EAAGC,CAAC,IAAKxC,OAAO,CAAC;gBAAGC,EAAE,EAAEuC,CAAC,CAACC,MAAM,CAACC,KAAK;gBAAExC,QAAQ,EAAEH,IAAI,CAACG;cAAS,CAAC,CAAE;cAE3EyC,SAAS;cACTC,eAAe,EAAE;gBACfC,KAAK,EAAE;kBAAEC,KAAK,EAAE;gBAAQ,CAAC,CAAE;cAC7B;YAAE;cAAA5B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACFhC,OAAA,CAACtB,SAAS;cACR6E,eAAe,EAAE;gBACfC,KAAK,EAAE;kBAAEC,KAAK,EAAE;gBAAQ,CAAC,CAAE;cAE7B,CAAE;cACFd,MAAM,EAAC,QAAQ;cACfC,QAAQ;cACRC,SAAS;cACTG,IAAI,EAAC,UAAU;cACfD,KAAK,EAAC,UAAU;cAChBW,IAAI,EAAC,UAAU;cACfZ,EAAE,EAAC,UAAU;cACbG,YAAY,EAAC,kBAAkB;cAC/BC,QAAQ,EAAGC,CAAC,IAAKxC,OAAO,CAAC;gBAAGC,EAAE,EAAEF,IAAI,CAAEE,EAAE;gBAAEC,QAAQ,EAAEsC,CAAC,CAACC,MAAM,CAACC;cAAM,CAAC;YAAE;cAAAxB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEvE,CAAC,eACFhC,OAAA,CAACrB,gBAAgB;cACfgF,OAAO,eAAE3D,OAAA,CAACpB,QAAQ;gBAACyE,KAAK,EAAC,UAAU;gBAACI,KAAK,EAAC;cAAS;gBAAA5B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAE;cACvDe,KAAK,EAAC;YAAa;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpB,CAAC,eACFhC,OAAA,CAACxB,MAAM;cACLiF,KAAK,EAAC,SAAS;cACfC,IAAI,EAAC,QAAQ;cACbb,SAAS;cACTL,OAAO,EAAC,WAAW;cACnBP,EAAE,EAAE;gBAAES,EAAE,EAAE,CAAC;gBAAEkB,EAAE,EAAE,CAAC;gBAACrB,OAAO,EAAC;cAAY,CAAE;cAAAd,QAAA,EAC1C;YAED;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACThC,OAAA,CAAClB,IAAI;cAAC+E,SAAS;cAAApC,QAAA,eACbzB,OAAA,CAAClB,IAAI;gBAACgF,IAAI;gBAAArC,QAAA,eACRzB,OAAA,CAACnB,IAAI;kBAACkF,IAAI,EAAC,UAAS;kBAACP,KAAK,EAAE;oBAAEC,KAAK,EAAE,MAAM;oBAAEO,cAAc,EAAC;kBAAM,CAAE;kBAAAvC,QAAA,EACjE;gBAAgC;kBAAAI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC7B;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC,gBAEjB,CAAC;AACJ;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AAAA3B,EAAA,CA5KwBD,KAAK;EAAA,QAC+B9B,OAAO,EAE5CkB,WAAW,EAEnBA,WAAW,EACVC,WAAW,EACbE,WAAW;AAAA;AAAAsE,EAAA,GAPD7D,KAAK;AAAA,IAAA6D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
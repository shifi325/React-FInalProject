{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05E9\\u05D9\\u05E4\\u05D9 \\u05D5\\u05D9\\u05E0\\u05D2\\u05E8\\u05D8\\u05DF\\\\Pictures\\\\Saved Pictures\\\\\\u05E1\\u05DE\\u05D9\\u05E0\\u05E8\\\\\\u05DB\\u05D9\\u05EA\\u05D4 \\u05D9\\u05D3\\\\\\u05EA\\u05DB\\u05E0\\u05D5\\u05EA\\\\react\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05E7\\u05D8\\\\finalproject\\\\src\\\\components\\\\screens\\\\user\\\\SignIn.js\",\n  _s = $RefreshSig$();\n// import { useForm } from \"react-hook-form\";\n// import TextField from '@mui/material/TextField';\n// import React, { useState } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { useNavigate } from \"react-router-dom\";\n\n// import { postUser} from '../../features//User/UserSlice';\n\n// const SignIn = () => {\n//     const [user, setUser] = useState({ tz:\" \",fullName:\" \", password:\" \" ,telephone:\" \"});\n//     const arrU = useSelector(x => x.users.arrUser);\n//     const currentUser = useSelector(u => u.users.currentUser);\n//     const dispatch = useDispatch();\n//     const nav=useNavigate()\n\n//     const {\n//         register,\n//         handleSubmit,\n//         getValues,\n//         formState: { errors, dirtyFields, isValid },\n//     } = useForm({ mode: 'onBlur' });\n\n//     const onSubmit = (data) => {\n//        // event.preventDefault();\n//         //const data = new FormData(event.currentTarget);\n//         //dispatch(addUser({\"tz\":data.get('tz'), \"name\":data.get('name'), \"password\":data.get('password'),\"telephone\":data.get('telephone'), \"email\":data.get('email')}))//tz:data.tz, name:data.name, password:data.password, telephone:data.telephone, email:data.email\n//         dispatch(postUser({tz:data.tz, fullName:data.fullName, password:data.password, telephone:data.telephone}))\n//         console.log(\"add user\")\n//         console.log(currentUser)\n//          nav('/user')\n//         // כאן תוכל להוסיף את הלוגיקה שלך לטיפול בהגשת הטופס\n//         // לדוג', שליחת המידע לשרת או עדכון המצב באפליקציה\n//     };\n\n//     return (\n//         <>\n//             <form onSubmit={handleSubmit(onSubmit)}>\n//                 <div>\n//                     <TextField\n//                         id=\"filled-basic\"\n//                         label=\"tz:\"\n//                         variant=\"filled\"\n//                         onChange={(e) => setUser({ tz: e.target.value, fullName:user.fullName, password: user.password, telephone:user.telephone })}\n//                         {...register(\"tz\", { required: \"field is required\", pattern: /^\\d{9}$/ })}\n//                     />\n//                     {errors.tz && <p>The id number is incorrect</p>}\n//                     {dirtyFields.tz && <p>✔️</p>}\n//                 </div>\n//                 <br />\n//                 <div>\n//                     <TextField\n//                         id=\"filled-basic\"\n//                         label=\"name:\"\n//                         variant=\"filled\"\n//                         onChange={(e) => setUser({ tz: user.tz, fullName:e.target.value, password: user.password, telephone:user.telephone})}\n//                         {...register(\"name\", { required: \"field is required\", pattern: /^[A-Za-z]+$/i })}\n//                     />\n//                     {errors.name?.type === 'required' && <p>{errors.name.message}</p>}\n//                     {errors.name?.type === 'pattern' && <p>enter in english</p>}\n//                     {dirtyFields.name && <p>✔️</p>}\n//                 </div>\n//                 <br />\n//                 <div>\n//                     <TextField\n//                         id=\"filled-basic\"\n//                         label=\"password:\"\n//                         type=\"password\"\n//                         variant=\"filled\"\n//                         onChange={(e) => setUser({ tz:user.tz,fullName:user.fullName, password:e.target.value, telephone:user.telephone})}\n//                         {...register(\"password\",{required: \"field is required\"})}\n//                     />\n//                    {errors.password?.type === 'required' && <p>{errors.password.message}</p>}\n//                     {dirtyFields.password && <p>✔️</p>}\n//                 </div>\n//                 <br />\n//                 <div>\n//                     <TextField\n//                         id=\"filled-basic\"\n//                         label=\"telephone:\"\n//                         type=\"telephone\"\n//                         variant=\"filled\"\n//                         onChange={(e) => setUser({ tz: user.tz,fullName:user.fullName, password: user.password, telephone:e.target.value})}\n//                         {...register(\"telephone\", {\n//                             required: 'enter a phone number',\n//                             pattern: {\n//                                 value: /^[0-9]{10}$/,\n//                                 message: 'the phone number is incorrect',\n//                             },\n//                         })}\n//                     />\n//                     {errors.telephone && <p>{errors.telephone.message}</p>}\n//                     {dirtyFields.telephone && <p>✔️</p>}\n//                 </div>\n//                 <br />\n//                 <div>\n//                     <TextField\n//                         id=\"filled-basic\"\n//                         label=\"mail:\"\n//                         type=\"email\"\n//                         variant=\"filled\"\n//                         onChange={(e) => setUser({ tz: user.tz, fullName:user.fullName, password: user.password, telephone:user.telephone})}\n//                         {...register(\"email\",{required: \"field is required\"})}\n//                     />\n//                     {dirtyFields.email && <p>✔️</p>}\n//                 </div>\n//                 <br />\n//                 <div>\n//                     <TextField\n//                         id=\"filled-basic\"\n//                         label=\"Confirm email:\"\n//                         type=\"email\"\n//                         variant=\"filled\"\n//                         {...register(\"confirmEmail\", {\n//                           validate: value => getValues('email') === value\n//                         })}\n//                     />\n//                     {errors.confirmEmail && <p>email is wrong</p>}\n//                 </div>\n//                 <input type=\"submit\"  />\n//             </form>\n//         </>\n//     );\n// }\n\n// export default SignIn;\n\nimport * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from \"react-router-dom\";\nimport { postUser } from '../../features/User/UserSlice';\nimport { Password } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultTheme = createTheme();\nexport default function SignIn() {\n  _s();\n  let dis = useDispatch();\n  let userAdd = {\n    tz: \"\",\n    fullName: \"\",\n    Password: \"\",\n    telephone: \"\",\n    city: \"\",\n    street: \"\",\n    houseNumber: \"\"\n  };\n  const add = e => {\n    e.preventDefault(); // מבטל ברירת מחדל \n    dis(postUser(userAdd));\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: defaultTheme,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          sx: {\n            m: 1,\n            bgcolor: 'lightpink'\n          },\n          children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          noValidate: true,\n          sx: {\n            mt: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                autoComplete: \"given-name\",\n                name: \"tz\",\n                required: true,\n                fullWidth: true,\n                id: \"tz\",\n                label: \" tz\",\n                autoFocus: true,\n                onChange: e => userAdd.tz = e.target.value,\n                InputLabelProps: {\n                  style: {\n                    color: 'black'\n                  } // Inline style for label\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                autoComplete: \"given-name\",\n                name: \"fullName\",\n                required: true,\n                fullWidth: true,\n                id: \"fullName\",\n                label: \" fullName\",\n                autoFocus: true,\n                onChange: e => userAdd.fullName = e.target.value,\n                InputLabelProps: {\n                  style: {\n                    color: 'black'\n                  } // Inline style for label\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                fullWidth: true,\n                name: \"password\",\n                label: \"Password\",\n                type: \"password\",\n                id: \"password\",\n                autoComplete: \"new-password\",\n                onChange: e => userAdd.password = e.target.value,\n                InputLabelProps: {\n                  style: {\n                    color: 'black'\n                  } // Inline style for label\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                fullWidth: true,\n                name: \"telephone\",\n                label: \"telephone\",\n                type: \"telephone\",\n                id: \"telephone\",\n                autoComplete: \"new-telephone\",\n                onChange: e => userAdd.telephone = e.target.value,\n                InputLabelProps: {\n                  style: {\n                    color: 'black'\n                  } // Inline style for label\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                fullWidth: true,\n                name: \"city\",\n                label: \"city\",\n                type: \"city\",\n                id: \"city\",\n                autoComplete: \"new-city\",\n                onChange: e => userAdd.city = e.target.value,\n                InputLabelProps: {\n                  style: {\n                    color: 'black'\n                  } // Inline style for label\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                fullWidth: true,\n                name: \"street\",\n                label: \"street\",\n                type: \"street\",\n                id: \"street\",\n                autoComplete: \"new-street\",\n                onChange: e => userAdd.street = e.target.value,\n                InputLabelProps: {\n                  style: {\n                    color: 'black'\n                  } // Inline style for label\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                fullWidth: true,\n                name: \"houseNumber\",\n                label: \"houseNumber\",\n                type: \"houseNumber\",\n                id: \"houseNumber\",\n                autoComplete: \"new-houseNumber\",\n                onChange: e => userAdd.houseNumber = e.target.value,\n                InputLabelProps: {\n                  style: {\n                    color: 'black'\n                  } // Inline style for label\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"inherit\",\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            sx: {\n              mt: 3,\n              mb: 2,\n              bgcolor: 'lightpink'\n            },\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justifyContent: \"flex-end\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                href: \"\\\\login\",\n                style: {\n                  color: 'pink',\n                  textDecoration: 'none'\n                },\n                children: \"Already have an account? Sign in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 1\n  }, this);\n}\n_s(SignIn, \"FeR/9a0acc3ihhwGkiMlPRhHGaQ=\", false, function () {\n  return [useDispatch];\n});\n_c = SignIn;\nvar _c;\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"names":["React","Avatar","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Link","Grid","Box","LockOutlinedIcon","Typography","Container","createTheme","ThemeProvider","useSelector","useDispatch","useNavigate","postUser","Password","jsxDEV","_jsxDEV","defaultTheme","SignIn","_s","dis","userAdd","tz","fullName","telephone","city","street","houseNumber","add","e","preventDefault","theme","children","component","maxWidth","fileName","_jsxFileName","lineNumber","columnNumber","sx","marginTop","display","flexDirection","alignItems","m","bgcolor","variant","noValidate","mt","container","spacing","item","xs","sm","autoComplete","name","required","fullWidth","id","label","autoFocus","onChange","target","value","InputLabelProps","style","color","type","password","mb","justifyContent","href","textDecoration","_c","$RefreshReg$"],"sources":["C:/Users/שיפי וינגרטן/Pictures/Saved Pictures/סמינר/כיתה יד/תכנות/react/פרויקט/finalproject/src/components/screens/user/SignIn.js"],"sourcesContent":["// import { useForm } from \"react-hook-form\";\r\n// import TextField from '@mui/material/TextField';\r\n// import React, { useState } from 'react';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n// import { postUser} from '../../features//User/UserSlice';\r\n\r\n// const SignIn = () => {\r\n//     const [user, setUser] = useState({ tz:\" \",fullName:\" \", password:\" \" ,telephone:\" \"});\r\n//     const arrU = useSelector(x => x.users.arrUser);\r\n//     const currentUser = useSelector(u => u.users.currentUser);\r\n//     const dispatch = useDispatch();\r\n//     const nav=useNavigate()\r\n\r\n//     const {\r\n//         register,\r\n//         handleSubmit,\r\n//         getValues,\r\n//         formState: { errors, dirtyFields, isValid },\r\n//     } = useForm({ mode: 'onBlur' });\r\n\r\n//     const onSubmit = (data) => {\r\n//        // event.preventDefault();\r\n//         //const data = new FormData(event.currentTarget);\r\n//         //dispatch(addUser({\"tz\":data.get('tz'), \"name\":data.get('name'), \"password\":data.get('password'),\"telephone\":data.get('telephone'), \"email\":data.get('email')}))//tz:data.tz, name:data.name, password:data.password, telephone:data.telephone, email:data.email\r\n//         dispatch(postUser({tz:data.tz, fullName:data.fullName, password:data.password, telephone:data.telephone}))\r\n//         console.log(\"add user\")\r\n//         console.log(currentUser)\r\n//          nav('/user')\r\n//         // כאן תוכל להוסיף את הלוגיקה שלך לטיפול בהגשת הטופס\r\n//         // לדוג', שליחת המידע לשרת או עדכון המצב באפליקציה\r\n//     };\r\n\r\n//     return (\r\n//         <>\r\n//             <form onSubmit={handleSubmit(onSubmit)}>\r\n//                 <div>\r\n//                     <TextField\r\n//                         id=\"filled-basic\"\r\n//                         label=\"tz:\"\r\n//                         variant=\"filled\"\r\n//                         onChange={(e) => setUser({ tz: e.target.value, fullName:user.fullName, password: user.password, telephone:user.telephone })}\r\n//                         {...register(\"tz\", { required: \"field is required\", pattern: /^\\d{9}$/ })}\r\n//                     />\r\n//                     {errors.tz && <p>The id number is incorrect</p>}\r\n//                     {dirtyFields.tz && <p>✔️</p>}\r\n//                 </div>\r\n//                 <br />\r\n//                 <div>\r\n//                     <TextField\r\n//                         id=\"filled-basic\"\r\n//                         label=\"name:\"\r\n//                         variant=\"filled\"\r\n//                         onChange={(e) => setUser({ tz: user.tz, fullName:e.target.value, password: user.password, telephone:user.telephone})}\r\n//                         {...register(\"name\", { required: \"field is required\", pattern: /^[A-Za-z]+$/i })}\r\n//                     />\r\n//                     {errors.name?.type === 'required' && <p>{errors.name.message}</p>}\r\n//                     {errors.name?.type === 'pattern' && <p>enter in english</p>}\r\n//                     {dirtyFields.name && <p>✔️</p>}\r\n//                 </div>\r\n//                 <br />\r\n//                 <div>\r\n//                     <TextField\r\n//                         id=\"filled-basic\"\r\n//                         label=\"password:\"\r\n//                         type=\"password\"\r\n//                         variant=\"filled\"\r\n//                         onChange={(e) => setUser({ tz:user.tz,fullName:user.fullName, password:e.target.value, telephone:user.telephone})}\r\n//                         {...register(\"password\",{required: \"field is required\"})}\r\n//                     />\r\n//                    {errors.password?.type === 'required' && <p>{errors.password.message}</p>}\r\n//                     {dirtyFields.password && <p>✔️</p>}\r\n//                 </div>\r\n//                 <br />\r\n//                 <div>\r\n//                     <TextField\r\n//                         id=\"filled-basic\"\r\n//                         label=\"telephone:\"\r\n//                         type=\"telephone\"\r\n//                         variant=\"filled\"\r\n//                         onChange={(e) => setUser({ tz: user.tz,fullName:user.fullName, password: user.password, telephone:e.target.value})}\r\n//                         {...register(\"telephone\", {\r\n//                             required: 'enter a phone number',\r\n//                             pattern: {\r\n//                                 value: /^[0-9]{10}$/,\r\n//                                 message: 'the phone number is incorrect',\r\n//                             },\r\n//                         })}\r\n//                     />\r\n//                     {errors.telephone && <p>{errors.telephone.message}</p>}\r\n//                     {dirtyFields.telephone && <p>✔️</p>}\r\n//                 </div>\r\n//                 <br />\r\n//                 <div>\r\n//                     <TextField\r\n//                         id=\"filled-basic\"\r\n//                         label=\"mail:\"\r\n//                         type=\"email\"\r\n//                         variant=\"filled\"\r\n//                         onChange={(e) => setUser({ tz: user.tz, fullName:user.fullName, password: user.password, telephone:user.telephone})}\r\n//                         {...register(\"email\",{required: \"field is required\"})}\r\n//                     />\r\n//                     {dirtyFields.email && <p>✔️</p>}\r\n//                 </div>\r\n//                 <br />\r\n//                 <div>\r\n//                     <TextField\r\n//                         id=\"filled-basic\"\r\n//                         label=\"Confirm email:\"\r\n//                         type=\"email\"\r\n//                         variant=\"filled\"\r\n//                         {...register(\"confirmEmail\", {\r\n//                           validate: value => getValues('email') === value\r\n//                         })}\r\n//                     />\r\n//                     {errors.confirmEmail && <p>email is wrong</p>}\r\n//                 </div>\r\n//                 <input type=\"submit\"  />\r\n//             </form>\r\n//         </>\r\n//     );\r\n// }\r\n\r\n// export default SignIn;\r\n\r\nimport * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {postUser} from '../../features/User/UserSlice';\r\nimport { Password } from '@mui/icons-material';\r\nconst defaultTheme = createTheme();\r\n\r\nexport default function SignIn() {\r\n\r\n  let dis= useDispatch()\r\n\r\n  let userAdd={\r\n      tz:\"\",\r\n      fullName:\"\",\r\n      Password:\"\",\r\n      telephone:\"\",\r\n      city:\"\",\r\n      street:\"\",\r\n      houseNumber:\"\"\r\n  }\r\n  \r\n      const add=(e)=>{\r\n          e.preventDefault()// מבטל ברירת מחדל \r\n          dis(postUser(userAdd))\r\n      }\r\n  return (\r\n<ThemeProvider theme={defaultTheme}>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: 'lightpink' }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign Up\r\n          </Typography>\r\n          <Box component=\"form\" noValidate \r\n           sx={{ mt: 3 }}>\r\n            <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  autoComplete=\"given-name\"\r\n                  name=\"tz\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"tz\"\r\n                  label=\" tz\"\r\n                  autoFocus\r\n                  onChange={(e)=>userAdd.tz=e.target.value}\r\n\r\n                  InputLabelProps={{\r\n                    style: { color: 'black' }, // Inline style for label\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  autoComplete=\"given-name\"\r\n                  name=\"fullName\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"fullName\"\r\n                  label=\" fullName\"\r\n                  autoFocus\r\n                  onChange={(e)=>userAdd.fullName=e.target.value}\r\n\r\n                  InputLabelProps={{\r\n                    style: { color: 'black' }, // Inline style for label\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"new-password\"\r\n                  onChange={(e)=>userAdd.password=e.target.value}\r\n\r\n                  InputLabelProps={{\r\n                    style: { color: 'black' }, // Inline style for label\r\n                  }}\r\n                  \r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  name=\"telephone\"\r\n                  label=\"telephone\"\r\n                  type=\"telephone\"\r\n                  id=\"telephone\"\r\n                  autoComplete=\"new-telephone\"\r\n                  onChange={(e)=>userAdd.telephone=e.target.value}\r\n\r\n                  InputLabelProps={{\r\n                    style: { color: 'black' }, // Inline style for label\r\n                  }}\r\n                  \r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  name=\"city\"\r\n                  label=\"city\"\r\n                  type=\"city\"\r\n                  id=\"city\"\r\n                  autoComplete=\"new-city\"\r\n                  onChange={(e)=>userAdd.city=e.target.value}\r\n\r\n                  InputLabelProps={{\r\n                    style: { color: 'black' }, // Inline style for label\r\n                  }}\r\n                  \r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  name=\"street\"\r\n                  label=\"street\"\r\n                  type=\"street\"\r\n                  id=\"street\"\r\n                  autoComplete=\"new-street\"\r\n                  onChange={(e)=>userAdd.street=e.target.value}\r\n\r\n                  InputLabelProps={{\r\n                    style: { color: 'black' }, // Inline style for label\r\n                  }}\r\n                  \r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  name=\"houseNumber\"\r\n                  label=\"houseNumber\"\r\n                  type=\"houseNumber\"\r\n                  id=\"houseNumber\"\r\n                  autoComplete=\"new-houseNumber\"\r\n                  onChange={(e)=>userAdd.houseNumber=e.target.value}\r\n\r\n                  InputLabelProps={{\r\n                    style: { color: 'black' }, // Inline style for label\r\n                  }}\r\n                  \r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n            color='inherit'\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2, bgcolor:'lightpink' }}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n            <Grid container justifyContent=\"flex-end\">\r\n              <Grid item>\r\n                <Link  href=\"\\login\" style={{ color: 'pink' ,textDecoration:'none'}} >\r\n                  Already have an account? Sign in\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,gBAAgB,MAAM,gCAAgC;AAC7D,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,gBAAgB,MAAM,kCAAkC;AAC/D,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,WAAW,EAAEC,aAAa,QAAQ,sBAAsB;AACjE,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAAQC,QAAQ,QAAO,+BAA+B;AACtD,SAASC,QAAQ,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC/C,MAAMC,YAAY,GAAG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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
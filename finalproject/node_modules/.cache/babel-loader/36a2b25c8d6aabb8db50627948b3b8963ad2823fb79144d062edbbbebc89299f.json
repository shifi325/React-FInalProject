{"ast":null,"code":"import { createSlice, nanoid, createAsyncThunk } from '@reduxjs/toolkit';\nimport { getUsers, getUserByIdA, postUserA, loginA } from './UserApi';\nconst initialState = {\n  allUsers: [],\n  status: \"idle\",\n  poststatus: \"idle\"\n};\nexport const fetchAllUsers = createAsyncThunk('user/fetchAllUsers', async thunkAPI => {\n  const res = await getUsers();\n  return res;\n});\nexport const getUserById = createAsyncThunk('user/getUserById', async (id, thunkAPI) => {\n  const res = await getUserByIdA(id);\n  return res;\n});\nexport const postUser = createAsyncThunk('user/postUser', async (newUser, thunkAPI) => {\n  const res = await postUserA(newUser);\n  return res;\n});\nexport const login = createAsyncThunk('user/login', async (user, thunkAPI) => {\n  const res = await loginA(user);\n  return res;\n});\nexport const UserSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    logout: (state, action) => {\n      state.currentUser = \"guest\";\n      state.status = \"idle\";\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(login.fulfilled, (state, {\n      payload\n    }) => {\n      state.currentUser = payload;\n      state.status = \"fullfilled\";\n      console.log(state.currentUser);\n    }).addCase(postUser.fulfilled, (state, {\n      payload\n    }) => {\n      state.currentUser = payload;\n      state.status = \"fullfilled\";\n      console.log(state.currentUser);\n    });\n    // // You can chain calls, or have separate `builder.addCase()` lines each time\n    // .addCase(fetchAllProduct.pending, (state, action) => {\n    //     state.status = \"pending\"\n    // })\n    // .addCase(fetchAllProduct.rejected, (state, action) => {\n    //     state.status = \"rejected\"\n    // })\n  }\n});\nexport const {\n  logout\n} = UserSlice.actions;\nexport default UserSlice.reducer;","map":{"version":3,"names":["createSlice","nanoid","createAsyncThunk","getUsers","getUserByIdA","postUserA","loginA","initialState","allUsers","status","poststatus","fetchAllUsers","thunkAPI","res","getUserById","id","postUser","newUser","login","user","UserSlice","name","reducers","logout","state","action","currentUser","extraReducers","builder","addCase","fulfilled","payload","console","log","actions","reducer"],"sources":["C:/Users/שיפי וינגרטן/Pictures/Saved Pictures/סמינר/כיתה יד/תכנות/react/פרויקט/finalproject/src/components/features/User/UserSlice.js"],"sourcesContent":["import { createSlice, nanoid ,createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { getUsers,getUserByIdA,postUserA,loginA } from './UserApi'\r\n\r\nconst initialState = {\r\n    allUsers:[],\r\n    status: \"idle\",\r\n    poststatus: \"idle\"\r\n}\r\n\r\nexport const fetchAllUsers = createAsyncThunk(\r\n    'user/fetchAllUsers',\r\n    async (thunkAPI) => {\r\n        const res = await getUsers()\r\n        return res\r\n    },\r\n)\r\n\r\nexport const getUserById = createAsyncThunk(\r\n    'user/getUserById',\r\n    async (id,thunkAPI) => {\r\n        const res = await getUserByIdA(id)\r\n        return res\r\n    },\r\n)\r\n\r\nexport const postUser = createAsyncThunk(\r\n    'user/postUser',\r\n    async (newUser,thunkAPI) => {\r\n        const res = await postUserA(newUser)\r\n        return res\r\n    },\r\n)\r\n\r\nexport const login = createAsyncThunk(\r\n    'user/login',\r\n    async (user,thunkAPI) => {\r\n        const res = await loginA(user)\r\n        return res\r\n    },\r\n)\r\n\r\n\r\n\r\nexport const UserSlice = createSlice({\r\n    name: 'user',\r\n    initialState,\r\n    reducers: {\r\n        logout: (state, action) => {\r\n            state.currentUser = \"guest\"\r\n            state.status=\"idle\"\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(login.fulfilled, (state, { payload }) => {\r\n                state.currentUser = payload\r\n                state.status = \"fullfilled\"\r\n                console.log(state.currentUser)\r\n            })\r\n            .addCase(postUser.fulfilled, (state, { payload }) => {\r\n                state.currentUser = payload\r\n                state.status = \"fullfilled\"\r\n                console.log(state.currentUser)\r\n            })\r\n            // // You can chain calls, or have separate `builder.addCase()` lines each time\r\n            // .addCase(fetchAllProduct.pending, (state, action) => {\r\n            //     state.status = \"pending\"\r\n            // })\r\n            // .addCase(fetchAllProduct.rejected, (state, action) => {\r\n            //     state.status = \"rejected\"\r\n            // })\r\n\r\n    },\r\n})\r\n\r\n\r\nexport const {  logout } = UserSlice.actions\r\n\r\nexport default UserSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,EAAEC,MAAM,EAAEC,gBAAgB,QAAQ,kBAAkB;AACxE,SAASC,QAAQ,EAACC,YAAY,EAACC,SAAS,EAACC,MAAM,QAAQ,WAAW;AAElE,MAAMC,YAAY,GAAG;EACjBC,QAAQ,EAAC,EAAE;EACXC,MAAM,EAAE,MAAM;EACdC,UAAU,EAAE;AAChB,CAAC;AAED,OAAO,MAAMC,aAAa,GAAGT,gBAAgB,CACzC,oBAAoB,EACpB,MAAOU,QAAQ,IAAK;EAChB,MAAMC,GAAG,GAAG,MAAMV,QAAQ,CAAC,CAAC;EAC5B,OAAOU,GAAG;AACd,CACJ,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGZ,gBAAgB,CACvC,kBAAkB,EAClB,OAAOa,EAAE,EAACH,QAAQ,KAAK;EACnB,MAAMC,GAAG,GAAG,MAAMT,YAAY,CAACW,EAAE,CAAC;EAClC,OAAOF,GAAG;AACd,CACJ,CAAC;AAED,OAAO,MAAMG,QAAQ,GAAGd,gBAAgB,CACpC,eAAe,EACf,OAAOe,OAAO,EAACL,QAAQ,KAAK;EACxB,MAAMC,GAAG,GAAG,MAAMR,SAAS,CAACY,OAAO,CAAC;EACpC,OAAOJ,GAAG;AACd,CACJ,CAAC;AAED,OAAO,MAAMK,KAAK,GAAGhB,gBAAgB,CACjC,YAAY,EACZ,OAAOiB,IAAI,EAACP,QAAQ,KAAK;EACrB,MAAMC,GAAG,GAAG,MAAMP,MAAM,CAACa,IAAI,CAAC;EAC9B,OAAON,GAAG;AACd,CACJ,CAAC;AAID,OAAO,MAAMO,SAAS,GAAGpB,WAAW,CAAC;EACjCqB,IAAI,EAAE,MAAM;EACZd,YAAY;EACZe,QAAQ,EAAE;IACNC,MAAM,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACvBD,KAAK,CAACE,WAAW,GAAG,OAAO;MAC3BF,KAAK,CAACf,MAAM,GAAC,MAAM;IACvB;EACJ,CAAC;EACDkB,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACX,KAAK,CAACY,SAAS,EAAE,CAACN,KAAK,EAAE;MAAEO;IAAQ,CAAC,KAAK;MAC9CP,KAAK,CAACE,WAAW,GAAGK,OAAO;MAC3BP,KAAK,CAACf,MAAM,GAAG,YAAY;MAC3BuB,OAAO,CAACC,GAAG,CAACT,KAAK,CAACE,WAAW,CAAC;IAClC,CAAC,CAAC,CACDG,OAAO,CAACb,QAAQ,CAACc,SAAS,EAAE,CAACN,KAAK,EAAE;MAAEO;IAAQ,CAAC,KAAK;MACjDP,KAAK,CAACE,WAAW,GAAGK,OAAO;MAC3BP,KAAK,CAACf,MAAM,GAAG,YAAY;MAC3BuB,OAAO,CAACC,GAAG,CAACT,KAAK,CAACE,WAAW,CAAC;IAClC,CAAC,CAAC;IACF;IACA;IACA;IACA;IACA;IACA;IACA;EAER;AACJ,CAAC,CAAC;AAGF,OAAO,MAAM;EAAGH;AAAO,CAAC,GAAGH,SAAS,CAACc,OAAO;AAE5C,eAAed,SAAS,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
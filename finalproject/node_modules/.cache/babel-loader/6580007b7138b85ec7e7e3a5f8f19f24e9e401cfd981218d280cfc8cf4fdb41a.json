{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05E9\\u05D9\\u05E4\\u05D9 \\u05D5\\u05D9\\u05E0\\u05D2\\u05E8\\u05D8\\u05DF\\\\Pictures\\\\Saved Pictures\\\\\\u05E1\\u05DE\\u05D9\\u05E0\\u05E8\\\\\\u05DB\\u05D9\\u05EA\\u05D4 \\u05D9\\u05D3\\\\\\u05EA\\u05DB\\u05E0\\u05D5\\u05EA\\\\react\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05E7\\u05D8\\\\finalproject\\\\src\\\\components\\\\screens\\\\products\\\\AddProduct.js\",\n  _s = $RefreshSig$();\nimport { useForm } from \"react-hook-form\";\nimport TextField from '@mui/material/TextField';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from \"react-router-dom\";\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { Password } from '@mui/icons-material';\nimport { postProduct } from '../../features/Product/ProductSlice';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AddProduct = () => {\n  _s();\n  var _errors$name, _errors$name2, _errors$description, _errors$imgUrl, _errors$imgUrl2;\n  const [product, setproduct] = useState({\n    name: \" \",\n    description: \" \",\n    price: \" \",\n    imgUrl: \"\"\n  });\n  const arrP = useSelector(x => x.products.arrProducts);\n  const currentP = useSelector(u => u.products.currentproduct);\n  const dispatch = useDispatch();\n  const nav = useNavigate();\n  const defaultTheme = createTheme();\n  const {\n    register,\n    handleSubmit,\n    getValues,\n    formState: {\n      errors,\n      dirtyFields,\n      isValid\n    }\n  } = useForm({\n    mode: 'onBlur'\n  });\n  const onSubmit = data => {\n    dispatch(postProduct({\n      name: data.name,\n      description: data.description,\n      price: data.price,\n      imgUrl: data.imgUrl\n    }));\n    console.log(data.name);\n    nav('/ProductList');\n    // כאן תוכל להוסיף את הלוגיקה שלך לטיפול בהגשת הטופס\n    // לדוג', שליחת המידע לשרת או עדכון המצב באפליקציה\n  };\n  return (\n    /*#__PURE__*/\n    //         <Box\n    //         sx={{\n    //           marginTop: 8,\n    //           display: 'flex',\n    //           flexDirection: 'column',\n    //           alignItems: 'center',\n    //         }}\n    //       >\n    //         <Avatar sx={{ m: 1, bgcolor: 'lightpink' }}>\n    //           {/* <LockOutlinedIcon /> */}\n    //         </Avatar>\n    //         <Typography component=\"h1\" variant=\"h5\" >\n    //           add product\n    //         </Typography>\n    // <Box sx={{ maxWidth: 400, margin: 'auto', padding: 3, boxShadow: 3 }}>\n    // <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n    // </Typography>         \n    _jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"filled-basic\",\n          label: \"name:\",\n          variant: \"outlined\",\n          fullWidth: true,\n          margin: \"normal\",\n          onChange: e => setproduct({\n            name: e.target.value,\n            description: product.description,\n            price: product.price,\n            imgUrl: product.imgUrl\n          }),\n          ...register(\"name\", {\n            required: \"field is required\",\n            pattern: /^[A-Za-z]+$/i\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), ((_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.type) === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.name.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 58\n        }, this), ((_errors$name2 = errors.name) === null || _errors$name2 === void 0 ? void 0 : _errors$name2.type) === 'pattern' && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"enter in english\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 57\n        }, this), dirtyFields.name && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2714\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 42\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"filled-basic\",\n          label: \"description:\",\n          type: \"description\",\n          variant: \"outlined\",\n          fullWidth: true,\n          margin: \"normal\",\n          onChange: e => setproduct({\n            name: product.name,\n            description: e.target.value,\n            price: product.price,\n            imgUrl: product.imgUrl\n          }),\n          ...register(\"description\", {\n            required: \"field is required\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), ((_errors$description = errors.description) === null || _errors$description === void 0 ? void 0 : _errors$description.type) === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.description.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 64\n        }, this), dirtyFields.description && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2714\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 49\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"filled-basic\",\n          label: \"price:\",\n          type: \"price\",\n          variant: \"outlined\",\n          fullWidth: true,\n          margin: \"normal\",\n          onChange: e => setproduct({\n            name: product.name,\n            description: product.description,\n            price: e.target.value,\n            imgUrl: product.imgUrl\n          }),\n          ...register(\"price\", {\n            required: 'enter a price number'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), errors.price && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.price.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 38\n        }, this), dirtyFields.price && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2714\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 43\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          fullWidth: true,\n          margin: \"normal\",\n          id: \"filled-basic\",\n          label: \"imgUrl:\",\n          onChange: e => setproduct({\n            name: product.name,\n            description: product.description,\n            price: product.price,\n            imgUrl: e.target.value\n          }),\n          ...register(\"imgUrl\", {\n            required: \"field is required\",\n            pattern: /^[A-Za-z]+$/i\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), ((_errors$imgUrl = errors.imgUrl) === null || _errors$imgUrl === void 0 ? void 0 : _errors$imgUrl.type) === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.imgUrl.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 60\n        }, this), ((_errors$imgUrl2 = errors.imgUrl) === null || _errors$imgUrl2 === void 0 ? void 0 : _errors$imgUrl2.type) === 'pattern' && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"enter in english\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 59\n        }, this), dirtyFields.imgUrl && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2714\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"inherit\",\n        type: \"submit\",\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mt: 3,\n          mb: 2,\n          bgcolor: 'lightpink'\n        },\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n    // </Box>            </Box>\n  );\n};\n_s(AddProduct, \"rf4xVSD9+assIkAyDWKEA0xF3bE=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useNavigate, useForm];\n});\n_c = AddProduct;\nexport default AddProduct;\n\n// import * as React from 'react';\n// import Avatar from '@mui/material/Avatar';\n// import Button from '@mui/material/Button';\n// import CssBaseline from '@mui/material/CssBaseline';\n// import TextField from '@mui/material/TextField';\n// import FormControlLabel from '@mui/material/FormControlLabel';\n// import Checkbox from '@mui/material/Checkbox';\n// import Link from '@mui/material/Link';\n// import Grid from '@mui/material/Grid';\n// import Box from '@mui/material/Box';\n// import LockOutlinedIcon from '@mui/icons-material/LockOutlined';\n// import Typography from '@mui/material/Typography';\n// import Container from '@mui/material/Container';\n// import { createTheme, ThemeProvider } from '@mui/material/styles';\n// import { useSelector, useDispatch } from 'react-redux'\n// import { useNavigate } from \"react-router-dom\";\n// import {postUser} from '../../features/User/UserSlice';\n// import { Password } from '@mui/icons-material';\n// const defaultTheme = createTheme();\n\n// export default function SignIn() {\n\n//   let dis= useDispatch()\n\n//   let userAdd={\n//       tz:\"\",\n//       name:\"\",\n//       Password:\"\",\n//       telephone:\"\",\n//       city:\"\",\n//       street:\"\",\n//       houseNumber:\"\"\n//   }\n\n//       const add=(e)=>{\n//           e.preventDefault()// מבטל ברירת מחדל \n//           dis(postUser(userAdd))\n//       }\n//   return (\n// <ThemeProvider theme={defaultTheme} onSubmit={handleSubmit(onSubmit)}>\n//       <Container component=\"main\" maxWidth=\"xs\">\n//         <CssBaseline />\n//         <Box\n//           sx={{\n//             marginTop: 8,\n//             display: 'flex',\n//             flexDirection: 'column',\n//             alignItems: 'center',\n//           }}\n//         >\n//           <Avatar sx={{ m: 1, bgcolor: 'lightpink' }}>\n//             <LockOutlinedIcon />\n//           </Avatar>\n//           <Typography component=\"h1\" variant=\"h5\">\n//             Sign Up\n//           </Typography>\n//           <Box component=\"form\" noValidate \n//            sx={{ mt: 3 }}>\n//             <Grid container spacing={2}>\n//             <Grid item xs={12} sm={6}>\n//                 <TextField\n//                   autoComplete=\"given-name\"\n//                   name=\"tz\"\n//                   required\n//                   fullWidth\n//                   id=\"tz\"\n//                   label=\" tz\"\n//                   autoFocus\n//                   onChange={(e) => setUser({ tz: e.target.value, name:user.name, password: user.password, telephone:user.telephone ,city:user.city,street:user.street,houseNumber:user.houseNumber})}\n//                   {...register(\"tz\", { required: \"field is required\", pattern: /^\\d{9}$/ })}\n//                   InputLabelProps={{\n//                     style: { color: 'black' }, // Inline style for label\n//                   }}\n//                 />\n//               </Grid>\n//               <Grid item xs={12} sm={6}>\n//                 <TextField\n//                   autoComplete=\"given-name\"\n//                   name=\"name\"\n//                   required\n//                   fullWidth\n//                   id=\"name\"\n//                   label=\" name\"\n//                   autoFocus\n//                   onChange={(e) => setUser({ tz: user.tz, name:e.target.value, password: user.password, telephone:user.telephone ,city:user.city,street:user.street,houseNumber:user.houseNumber})}\n//                 {...register(\"name\", { required: \"field is required\", pattern: /^[A-Za-z]+$/i })}\n//                   InputLabelProps={{\n//                     style: { color: 'black' }, // Inline style for label\n//                   }}\n//                 />\n//               </Grid>\n//               <Grid item xs={12}>\n//                 <TextField\n//                   required\n//                   fullWidth\n//                   name=\"password\"\n//                   label=\"Password\"\n//                   type=\"password\"\n//                   id=\"password\"\n//                   autoComplete=\"new-password\"\n//                    onChange={(e) => setUser({ tz:user.tz,name:user.name, password:e.target.value, telephone:user.telephone ,city:user.city,street:user.street,houseNumber:user.houseNumber})}\n//                          {...register(\"password\",{required: \"field is required\"})}\n//                   InputLabelProps={{\n//                     style: { color: 'black' }, // Inline style for label\n//                   }}\n\n//                 />\n//               </Grid>\n//               <Grid item xs={12}>\n//                 <TextField\n//                   required\n//                   fullWidth\n//                   name=\"telephone\"\n//                   label=\"telephone\"\n//                   type=\"telephone\"\n//                   id=\"telephone\"\n//                   autoComplete=\"new-telephone\"\n//                   onChange={(e) => setUser({ tz: user.tz,name:user.name, password: user.password, telephone:e.target.value ,city:user.city,street:user.street,houseNumber:user.houseNumber})}\n//                                            {...register(\"telephone\", {\n//                                                required: 'enter a phone number',\n//                                                pattern: {\n//                                                    value: /^[0-9]{10}$/,\n//                                                    message: 'the phone number is incorrect',\n//                                                },\n//                                            })}\n//                   InputLabelProps={{\n//                     style: { color: 'black' }, // Inline style for label\n//                   }}\n\n//                 />\n//               </Grid>\n\n//               <Grid item xs={12}>\n//                 <TextField\n//                   required\n//                   fullWidth\n//                   name=\"city\"\n//                   label=\"city\"\n//                   type=\"city\"\n//                   id=\"city\"\n//                   autoComplete=\"new-city\"\n//                   onChange={(e) => setUser({ tz: user.tz, name:user.name, password: user.password, telephone:user.telephone ,city:e.target.value,street:user.street,houseNumber:user.houseNumber})}\n//                 {...register(\"name\", { required: \"field is required\", pattern: /^[A-Za-z]+$/i })}\n//                   InputLabelProps={{\n//                     style: { color: 'black' }, // Inline style for label\n//                   }}\n\n//                 />\n//               </Grid>\n//               <Grid item xs={12}>\n//                 <TextField\n//                   required\n//                   fullWidth\n//                   name=\"street\"\n//                   label=\"street\"\n//                   type=\"street\"\n//                   id=\"street\"\n//                   autoComplete=\"new-street\"\n//                   onChange={(e) => setUser({ tz: user.tz, name:user.name, password: user.password, telephone:user.telephone ,city:user.city,street:e.target.value,houseNumber:user.houseNumber})}\n//                 {...register(\"name\", { required: \"field is required\", pattern: /^[A-Za-z]+$/i })}\n//                   InputLabelProps={{\n//                     style: { color: 'black' }, // Inline style for label\n//                   }}\n\n//                 />\n//               </Grid>\n\n//               <Grid item xs={12}>\n//                 <TextField\n//                   required\n//                   fullWidth\n//                   name=\"houseNumber\"\n//                   label=\"houseNumber\"\n//                   type=\"houseNumber\"\n//                   id=\"houseNumber\"\n//                   autoComplete=\"new-houseNumber\"\n//                   onChange={(e) => setUser({ tz: user.tz,name:user.name, password: user.password, telephone:user.telephone ,city:user.city,street:user.street,houseNumber:e.target.value})}\n//                                            {...register(\"telephone\", {\n//                                                required: 'enter a phone number',\n//                                                pattern: {\n//                                                    value: /^[0-9]$/,\n//                                                    message: 'the number number is incorrect',\n//                                                },\n//                                            })}\n//                   InputLabelProps={{\n//                     style: { color: 'black' }, // Inline style for label\n//                   }}\n\n//                 />\n//               </Grid>\n//             </Grid>\n//             <Button\n//             color='inherit'\n//               type=\"submit\"\n//               fullWidth\n//               variant=\"contained\"\n//               sx={{ mt: 3, mb: 2, bgcolor:'lightpink' }}\n//             >\n//               Sign Up\n//             </Button>\n//             <Grid container justifyContent=\"flex-end\">\n//               <Grid item>\n//                 <Link  href=\"\\login\" style={{ color: 'pink' ,textDecoration:'none'}} >\n//                   Already have an account? Sign in\n//                 </Link>\n//               </Grid>\n//             </Grid>\n//           </Box>\n//         </Box>\n//       </Container>\n//     </ThemeProvider>\n//   );\n// }\n// export default SignIn;\n\n// import TextField from '@mui/material/TextField';\n// import { useDispatch } from 'react-redux';\n// import { postProduct  } from '../../features/Product/ProductSlice'\n// import React, { useState } from 'react';\n// import { useForm } from 'react-hook-form';\n\n// import { useNavigate } from \"react-router-dom\";\n\n// const {\n//   register,\n//   handleSubmit,\n//   getValues,\n//   formState: { errors, dirtyFields, isValid },\n// } = useForm({ mode: 'onBlur' });\n// const  AddProduct= (prop) => {\n//     let productToAdd={\n//         name:\" \",\n//         description:\" \",\n//         price:\" \",\n//         imgUrl:\" \"\n//     }\n//     let dispatch=useDispatch()\n//     const add=(e)=>{\n//         e.preventDefault() \n//         dispatch(postProduct(productToAdd))\n//         console.log(\"add user\")\n\n//     }\n//     return (<form onSubmit={handleSubmit(add)}>\n//        <TextField id=\"filled-basic\" label=\"name\" variant=\"filled\" onChange={(e)=>productToAdd.name=e.target.value} />\n//        <TextField id=\"filled-basic\" label=\"description\" variant=\"filled\" onChange={(e)=>productToAdd.description=e.target.value}/>\n//        <TextField id=\"filled-basic\" label=\"price\" variant=\"filled\" onChange={(e)=>productToAdd.price=e.target.value}/>\n//        <TextField id=\"filled-basic\" label=\"imgUrl\" variant=\"filled\" onChange={(e)=>productToAdd.imgUrl=e.target.value}/>\n//        <input type=\"submit\" value=\"send\"></input>\n//        </form> );\n// }\n\n// export default  AddProduct;\nvar _c;\n$RefreshReg$(_c, \"AddProduct\");","map":{"version":3,"names":["useForm","TextField","React","useState","useDispatch","useSelector","useNavigate","Avatar","Button","CssBaseline","FormControlLabel","Checkbox","Link","Grid","Box","LockOutlinedIcon","Typography","Container","createTheme","ThemeProvider","Password","postProduct","jsxDEV","_jsxDEV","Fragment","_Fragment","AddProduct","_s","_errors$name","_errors$name2","_errors$description","_errors$imgUrl","_errors$imgUrl2","product","setproduct","name","description","price","imgUrl","arrP","x","products","arrProducts","currentP","u","currentproduct","dispatch","nav","defaultTheme","register","handleSubmit","getValues","formState","errors","dirtyFields","isValid","mode","onSubmit","data","console","log","children","id","label","variant","fullWidth","margin","onChange","e","target","value","required","pattern","fileName","_jsxFileName","lineNumber","columnNumber","type","message","color","sx","mt","mb","bgcolor","_c","$RefreshReg$"],"sources":["C:/Users/שיפי וינגרטן/Pictures/Saved Pictures/סמינר/כיתה יד/תכנות/react/פרויקט/finalproject/src/components/screens/products/AddProduct.js"],"sourcesContent":["import { useForm } from \"react-hook-form\";\r\nimport TextField from '@mui/material/TextField';\r\nimport React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { Password } from '@mui/icons-material';\r\nimport { postProduct} from '../../features/Product/ProductSlice';\r\n\r\nconst AddProduct = () => {\r\n    const [product, setproduct] = useState({ name:\" \", description:\" \" ,price:\" \",imgUrl:\"\"});\r\n    const arrP = useSelector(x => x.products.arrProducts);\r\n    const currentP = useSelector(u => u.products.currentproduct);\r\n    const dispatch = useDispatch();\r\n    const nav=useNavigate()\r\nconst defaultTheme = createTheme();\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        getValues,\r\n        formState: { errors, dirtyFields, isValid },\r\n    } = useForm({ mode: 'onBlur' });\r\n\r\n    const onSubmit = (data) => {\r\n\r\n        dispatch(postProduct({name:data.name, description:data.description, price:data.price,imgUrl:data.imgUrl}))\r\n        console.log(data.name)\r\n         nav('/ProductList')\r\n        // כאן תוכל להוסיף את הלוגיקה שלך לטיפול בהגשת הטופס\r\n        // לדוג', שליחת המידע לשרת או עדכון המצב באפליקציה\r\n    };\r\n\r\n    return (\r\n//         <Box\r\n//         sx={{\r\n//           marginTop: 8,\r\n//           display: 'flex',\r\n//           flexDirection: 'column',\r\n//           alignItems: 'center',\r\n//         }}\r\n//       >\r\n//         <Avatar sx={{ m: 1, bgcolor: 'lightpink' }}>\r\n//           {/* <LockOutlinedIcon /> */}\r\n//         </Avatar>\r\n//         <Typography component=\"h1\" variant=\"h5\" >\r\n//           add product\r\n//         </Typography>\r\n// <Box sx={{ maxWidth: 400, margin: 'auto', padding: 3, boxShadow: 3 }}>\r\n// <Typography variant=\"h5\" component=\"h2\" gutterBottom>\r\n// </Typography>         \r\n            <form onSubmit={onSubmit}>\r\n\r\n                <>\r\n                    <TextField\r\n                        id=\"filled-basic\"\r\n                        label=\"name:\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        margin=\"normal\"                        onChange={(e) => setproduct({ name:e.target.value, description: product.description, price:product.price,imgUrl:product.imgUrl})}\r\n                        {...register(\"name\", { required: \"field is required\", pattern: /^[A-Za-z]+$/i })}\r\n                    />\r\n                    {errors.name?.type === 'required' && <p>{errors.name.message}</p>}\r\n                    {errors.name?.type === 'pattern' && <p>enter in english</p>}\r\n                    {dirtyFields.name && <p>✔️</p>}\r\n                </>\r\n                <>\r\n                    <TextField\r\n                        id=\"filled-basic\"\r\n                        label=\"description:\"\r\n                        type=\"description\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        margin=\"normal\"                        onChange={(e) => setproduct({ name:product.name, description:e.target.value, price:product.price,imgUrl:product.imgUrl})}\r\n                        {...register(\"description\",{required: \"field is required\"})}\r\n                    />\r\n                   {errors.description?.type === 'required' && <p>{errors.description.message}</p>}\r\n                    {dirtyFields.description && <p>✔️</p>}\r\n                </>\r\n                <>\r\n                    <TextField\r\n                        id=\"filled-basic\"\r\n                        label=\"price:\"\r\n                        type=\"price\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        margin=\"normal\"                        \r\n                        onChange={(e) => setproduct({ name:product.name, description: product.description, price:e.target.value,imgUrl:product.imgUrl})}\r\n                        {...register(\"price\", {\r\n                            required: 'enter a price number',\r\n           \r\n                        })}\r\n                    />\r\n                    {errors.price && <p>{errors.price.message}</p>}\r\n                    {dirtyFields.price && <p>✔️</p>}\r\n                </>\r\n                <>\r\n                    <TextField\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              margin=\"normal\"\r\n                        id=\"filled-basic\"\r\n                        label=\"imgUrl:\"\r\n                        onChange={(e) => setproduct({ name:product.name, description: product.description, price:product.price,imgUrl:e.target.value})}\r\n                        {...register(\"imgUrl\", { required: \"field is required\", pattern: /^[A-Za-z]+$/i })}\r\n                    />\r\n                    {errors.imgUrl?.type === 'required' && <p>{errors.imgUrl.message}</p>}\r\n                    {errors.imgUrl?.type === 'pattern' && <p>enter in english</p>}\r\n                    {dirtyFields.imgUrl && <p>✔️</p>}\r\n                </>\r\n               \r\n                <Button\r\n              color='inherit'\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2,bgcolor:'lightpink' }}\r\n            >\r\n              Sign In\r\n            </Button> \r\n                       </form>\r\n            // </Box>            </Box>\r\n\r\n        \r\n    );\r\n}\r\n\r\nexport default AddProduct;\r\n\r\n// import * as React from 'react';\r\n// import Avatar from '@mui/material/Avatar';\r\n// import Button from '@mui/material/Button';\r\n// import CssBaseline from '@mui/material/CssBaseline';\r\n// import TextField from '@mui/material/TextField';\r\n// import FormControlLabel from '@mui/material/FormControlLabel';\r\n// import Checkbox from '@mui/material/Checkbox';\r\n// import Link from '@mui/material/Link';\r\n// import Grid from '@mui/material/Grid';\r\n// import Box from '@mui/material/Box';\r\n// import LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\n// import Typography from '@mui/material/Typography';\r\n// import Container from '@mui/material/Container';\r\n// import { createTheme, ThemeProvider } from '@mui/material/styles';\r\n// import { useSelector, useDispatch } from 'react-redux'\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import {postUser} from '../../features/User/UserSlice';\r\n// import { Password } from '@mui/icons-material';\r\n// const defaultTheme = createTheme();\r\n\r\n// export default function SignIn() {\r\n\r\n//   let dis= useDispatch()\r\n\r\n//   let userAdd={\r\n//       tz:\"\",\r\n//       name:\"\",\r\n//       Password:\"\",\r\n//       telephone:\"\",\r\n//       city:\"\",\r\n//       street:\"\",\r\n//       houseNumber:\"\"\r\n//   }\r\n  \r\n//       const add=(e)=>{\r\n//           e.preventDefault()// מבטל ברירת מחדל \r\n//           dis(postUser(userAdd))\r\n//       }\r\n//   return (\r\n// <ThemeProvider theme={defaultTheme} onSubmit={handleSubmit(onSubmit)}>\r\n//       <Container component=\"main\" maxWidth=\"xs\">\r\n//         <CssBaseline />\r\n//         <Box\r\n//           sx={{\r\n//             marginTop: 8,\r\n//             display: 'flex',\r\n//             flexDirection: 'column',\r\n//             alignItems: 'center',\r\n//           }}\r\n//         >\r\n//           <Avatar sx={{ m: 1, bgcolor: 'lightpink' }}>\r\n//             <LockOutlinedIcon />\r\n//           </Avatar>\r\n//           <Typography component=\"h1\" variant=\"h5\">\r\n//             Sign Up\r\n//           </Typography>\r\n//           <Box component=\"form\" noValidate \r\n//            sx={{ mt: 3 }}>\r\n//             <Grid container spacing={2}>\r\n//             <Grid item xs={12} sm={6}>\r\n//                 <TextField\r\n//                   autoComplete=\"given-name\"\r\n//                   name=\"tz\"\r\n//                   required\r\n//                   fullWidth\r\n//                   id=\"tz\"\r\n//                   label=\" tz\"\r\n//                   autoFocus\r\n//                   onChange={(e) => setUser({ tz: e.target.value, name:user.name, password: user.password, telephone:user.telephone ,city:user.city,street:user.street,houseNumber:user.houseNumber})}\r\n//                   {...register(\"tz\", { required: \"field is required\", pattern: /^\\d{9}$/ })}\r\n//                   InputLabelProps={{\r\n//                     style: { color: 'black' }, // Inline style for label\r\n//                   }}\r\n//                 />\r\n//               </Grid>\r\n//               <Grid item xs={12} sm={6}>\r\n//                 <TextField\r\n//                   autoComplete=\"given-name\"\r\n//                   name=\"name\"\r\n//                   required\r\n//                   fullWidth\r\n//                   id=\"name\"\r\n//                   label=\" name\"\r\n//                   autoFocus\r\n//                   onChange={(e) => setUser({ tz: user.tz, name:e.target.value, password: user.password, telephone:user.telephone ,city:user.city,street:user.street,houseNumber:user.houseNumber})}\r\n//                 {...register(\"name\", { required: \"field is required\", pattern: /^[A-Za-z]+$/i })}\r\n//                   InputLabelProps={{\r\n//                     style: { color: 'black' }, // Inline style for label\r\n//                   }}\r\n//                 />\r\n//               </Grid>\r\n//               <Grid item xs={12}>\r\n//                 <TextField\r\n//                   required\r\n//                   fullWidth\r\n//                   name=\"password\"\r\n//                   label=\"Password\"\r\n//                   type=\"password\"\r\n//                   id=\"password\"\r\n//                   autoComplete=\"new-password\"\r\n//                    onChange={(e) => setUser({ tz:user.tz,name:user.name, password:e.target.value, telephone:user.telephone ,city:user.city,street:user.street,houseNumber:user.houseNumber})}\r\n//                          {...register(\"password\",{required: \"field is required\"})}\r\n//                   InputLabelProps={{\r\n//                     style: { color: 'black' }, // Inline style for label\r\n//                   }}\r\n                  \r\n//                 />\r\n//               </Grid>\r\n//               <Grid item xs={12}>\r\n//                 <TextField\r\n//                   required\r\n//                   fullWidth\r\n//                   name=\"telephone\"\r\n//                   label=\"telephone\"\r\n//                   type=\"telephone\"\r\n//                   id=\"telephone\"\r\n//                   autoComplete=\"new-telephone\"\r\n//                   onChange={(e) => setUser({ tz: user.tz,name:user.name, password: user.password, telephone:e.target.value ,city:user.city,street:user.street,houseNumber:user.houseNumber})}\r\n//                                            {...register(\"telephone\", {\r\n//                                                required: 'enter a phone number',\r\n//                                                pattern: {\r\n//                                                    value: /^[0-9]{10}$/,\r\n//                                                    message: 'the phone number is incorrect',\r\n//                                                },\r\n//                                            })}\r\n//                   InputLabelProps={{\r\n//                     style: { color: 'black' }, // Inline style for label\r\n//                   }}\r\n                  \r\n//                 />\r\n//               </Grid>\r\n\r\n//               <Grid item xs={12}>\r\n//                 <TextField\r\n//                   required\r\n//                   fullWidth\r\n//                   name=\"city\"\r\n//                   label=\"city\"\r\n//                   type=\"city\"\r\n//                   id=\"city\"\r\n//                   autoComplete=\"new-city\"\r\n//                   onChange={(e) => setUser({ tz: user.tz, name:user.name, password: user.password, telephone:user.telephone ,city:e.target.value,street:user.street,houseNumber:user.houseNumber})}\r\n//                 {...register(\"name\", { required: \"field is required\", pattern: /^[A-Za-z]+$/i })}\r\n//                   InputLabelProps={{\r\n//                     style: { color: 'black' }, // Inline style for label\r\n//                   }}\r\n                  \r\n//                 />\r\n//               </Grid>\r\n//               <Grid item xs={12}>\r\n//                 <TextField\r\n//                   required\r\n//                   fullWidth\r\n//                   name=\"street\"\r\n//                   label=\"street\"\r\n//                   type=\"street\"\r\n//                   id=\"street\"\r\n//                   autoComplete=\"new-street\"\r\n//                   onChange={(e) => setUser({ tz: user.tz, name:user.name, password: user.password, telephone:user.telephone ,city:user.city,street:e.target.value,houseNumber:user.houseNumber})}\r\n//                 {...register(\"name\", { required: \"field is required\", pattern: /^[A-Za-z]+$/i })}\r\n//                   InputLabelProps={{\r\n//                     style: { color: 'black' }, // Inline style for label\r\n//                   }}\r\n                  \r\n//                 />\r\n//               </Grid>\r\n\r\n//               <Grid item xs={12}>\r\n//                 <TextField\r\n//                   required\r\n//                   fullWidth\r\n//                   name=\"houseNumber\"\r\n//                   label=\"houseNumber\"\r\n//                   type=\"houseNumber\"\r\n//                   id=\"houseNumber\"\r\n//                   autoComplete=\"new-houseNumber\"\r\n//                   onChange={(e) => setUser({ tz: user.tz,name:user.name, password: user.password, telephone:user.telephone ,city:user.city,street:user.street,houseNumber:e.target.value})}\r\n//                                            {...register(\"telephone\", {\r\n//                                                required: 'enter a phone number',\r\n//                                                pattern: {\r\n//                                                    value: /^[0-9]$/,\r\n//                                                    message: 'the number number is incorrect',\r\n//                                                },\r\n//                                            })}\r\n//                   InputLabelProps={{\r\n//                     style: { color: 'black' }, // Inline style for label\r\n//                   }}\r\n                  \r\n//                 />\r\n//               </Grid>\r\n//             </Grid>\r\n//             <Button\r\n//             color='inherit'\r\n//               type=\"submit\"\r\n//               fullWidth\r\n//               variant=\"contained\"\r\n//               sx={{ mt: 3, mb: 2, bgcolor:'lightpink' }}\r\n//             >\r\n//               Sign Up\r\n//             </Button>\r\n//             <Grid container justifyContent=\"flex-end\">\r\n//               <Grid item>\r\n//                 <Link  href=\"\\login\" style={{ color: 'pink' ,textDecoration:'none'}} >\r\n//                   Already have an account? Sign in\r\n//                 </Link>\r\n//               </Grid>\r\n//             </Grid>\r\n//           </Box>\r\n//         </Box>\r\n//       </Container>\r\n//     </ThemeProvider>\r\n//   );\r\n// }\r\n// export default SignIn;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import TextField from '@mui/material/TextField';\r\n// import { useDispatch } from 'react-redux';\r\n// import { postProduct  } from '../../features/Product/ProductSlice'\r\n// import React, { useState } from 'react';\r\n// import { useForm } from 'react-hook-form';\r\n\r\n\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n\r\n// const {\r\n//   register,\r\n//   handleSubmit,\r\n//   getValues,\r\n//   formState: { errors, dirtyFields, isValid },\r\n// } = useForm({ mode: 'onBlur' });\r\n// const  AddProduct= (prop) => {\r\n//     let productToAdd={\r\n//         name:\" \",\r\n//         description:\" \",\r\n//         price:\" \",\r\n//         imgUrl:\" \"\r\n//     }\r\n//     let dispatch=useDispatch()\r\n//     const add=(e)=>{\r\n//         e.preventDefault() \r\n//         dispatch(postProduct(productToAdd))\r\n//         console.log(\"add user\")\r\n\r\n//     }\r\n//     return (<form onSubmit={handleSubmit(add)}>\r\n//        <TextField id=\"filled-basic\" label=\"name\" variant=\"filled\" onChange={(e)=>productToAdd.name=e.target.value} />\r\n//        <TextField id=\"filled-basic\" label=\"description\" variant=\"filled\" onChange={(e)=>productToAdd.description=e.target.value}/>\r\n//        <TextField id=\"filled-basic\" label=\"price\" variant=\"filled\" onChange={(e)=>productToAdd.price=e.target.value}/>\r\n//        <TextField id=\"filled-basic\" label=\"imgUrl\" variant=\"filled\" onChange={(e)=>productToAdd.imgUrl=e.target.value}/>\r\n//        <input type=\"submit\" value=\"send\"></input>\r\n//        </form> );\r\n// }\r\n \r\n// export default  AddProduct;"],"mappings":"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":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}